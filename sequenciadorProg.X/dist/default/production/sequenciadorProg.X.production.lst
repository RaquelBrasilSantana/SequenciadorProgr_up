

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Nov 05 15:53:07 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_clearLCD
  1180                           	FNCALL	_main,_currentKey
  1181                           	FNCALL	_main,_delFIFO
  1182                           	FNCALL	_main,_displayFIFO
  1183                           	FNCALL	_main,_getFIFO
  1184                           	FNCALL	_main,_initKeyboard
  1185                           	FNCALL	_main,_initLCD
  1186                           	FNCALL	_main,_initSerialIO
  1187                           	FNCALL	_main,_keyboardScan
  1188                           	FNCALL	_main,_lcd
  1189                           	FNCALL	_main,_previousKey
  1190                           	FNCALL	_main,_putFIFO
  1191                           	FNCALL	_main,_serialIOscan
  1192                           	FNCALL	_serialIOscan,_serialIObyteShift
  1193                           	FNCALL	_serialIOscan,_serialIOload
  1194                           	FNCALL	_lcd,_lcddat
  1195                           	FNCALL	_lcd,_lcdxy
  1196                           	FNCALL	_initLCD,_lcdcmd
  1197                           	FNCALL	_initLCD,_lcddat
  1198                           	FNCALL	_initLCD,_lcdxy
  1199                           	FNCALL	_lcdxy,_lcdcmd
  1200                           	FNCALL	_clearLCD,_lcdcmd
  1201                           	FNROOT	_main
  1202                           	global	_keyboardMatrix
  1203                           psect	strings,class=STRING,delta=2,noexec
  1204                           global __pstrings
  1205                           __pstrings:
  1206  0003                     stringtab:
  1207  0003                     	global    __stringtab
  1208                           __stringtab:
  1209  0003                     ;	String table - string pointers are 1 byte each
  1210                           stringcode:stringdir:
  1211  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
  1212  0003  3000               movwf pclath
  1213  0004  008A               movf fsr,w
  1214  0005  0804               incf fsr
  1215  0006  0A84               	addwf pc
  1216  0007  0782               	global __stringbase
  1217                           __stringbase:
  1218  0008                     	retlw	0
  1219  0008  3400               psect	strings
  1220                           	global    __end_of__stringtab
  1221                           __end_of__stringtab:
  1222  0009                     	file	"keyboard.c"
  1223                           	line	39
  1224                           _keyboardMatrix:
  1225  0009                     	retlw	031h
  1226  0009  3431               	retlw	032h
  1227  000A  3432               	retlw	033h
  1228  000B  3433               	retlw	041h
  1229  000C  3441               	retlw	034h
  1230  000D  3434               	retlw	035h
  1231  000E  3435               	retlw	036h
  1232  000F  3436               	retlw	042h
  1233  0010  3442               	retlw	037h
  1234  0011  3437               	retlw	038h
  1235  0012  3438               	retlw	039h
  1236  0013  3439               	retlw	043h
  1237  0014  3443               	retlw	02Ah
  1238  0015  342A               	retlw	030h
  1239  0016  3430               	retlw	023h
  1240  0017  3423               	retlw	044h
  1241  0018  3444               	global __end_of_keyboardMatrix
  1242                           __end_of_keyboardMatrix:
  1243  0019                     	global	_keyboardMatrix
  1244                           	global	_fifoTail
  1245                           	global	_fifoHead
  1246                           	global	_lenSerialIO
  1247                           	global	_ptrSerialOut
  1248                           	global	_ptrSerialIn
  1249                           	global	_currKey
  1250                           	global	_prevKey
  1251                           	global	_fifo
  1252                           	global	_SERIALIO
  1253                           _SERIALIO	set	9
  1254  0009                     	global	_PORTEbits
  1255                           _PORTEbits	set	0x9
  1256  0009                     	global	_PORTAbits
  1257                           _PORTAbits	set	0x5
  1258  0005                     	global	_LCDbits
  1259                           _LCDbits	set	8
  1260  0008                     	global	_PORTB
  1261                           _PORTB	set	0x6
  1262  0006                     	global	_KEYBOARDbits
  1263                           _KEYBOARDbits	set	0x6
  1264  0006                     	global	_TRISAbits
  1265                           _TRISAbits	set	0x85
  1266  0085                     	global	_TRISEbits
  1267                           _TRISEbits	set	0x89
  1268  0089                     	global	_TRISD
  1269                           _TRISD	set	0x88
  1270  0088                     	global	_OPTION_REGbits
  1271                           _OPTION_REGbits	set	0x81
  1272  0081                     	global	_WPUB
  1273                           _WPUB	set	0x95
  1274  0095                     	global	_TRISB
  1275                           _TRISB	set	0x86
  1276  0086                     	global	_ANSELbits
  1277                           _ANSELbits	set	0x188
  1278  0188                     	global	_ANSELH
  1279                           _ANSELH	set	0x189
  1280  0189                     ; #config settings
  1281                           global __CFG_FOSC$INTRC_NOCLKOUT
  1282                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1283  0000                     global __CFG_WDTE$OFF
  1284                           __CFG_WDTE$OFF equ 0x0
  1285  0000                     global __CFG_MCLRE$OFF
  1286                           __CFG_MCLRE$OFF equ 0x0
  1287  0000                     global __CFG_LVP$OFF
  1288                           __CFG_LVP$OFF equ 0x0
  1289  0000                     	file	"C:\Users\18175218\AppData\Local\Temp\s13c."
  1290                           	line	#
  1291                           psect cinit,class=CODE,delta=2
  1292                           global start_initialization
  1293                           start_initialization:
  1294  07F1                     
  1295                           global __initialization
  1296                           __initialization:
  1297  07F1                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1298                           global __pbssCOMMON
  1299                           __pbssCOMMON:
  1300  007C                     _fifoTail:
  1301  007C                            ds      1
  1302  007C                     
  1303                           _fifoHead:
  1304  007D                            ds      1
  1305  007D                     
  1306                           psect	bssBANK0,class=BANK0,space=1,noexec
  1307                           global __pbssBANK0
  1308                           __pbssBANK0:
  1309  0020                     _lenSerialIO:
  1310  0020                            ds      1
  1311  0020                     
  1312                           _ptrSerialOut:
  1313  0021                            ds      1
  1314  0021                     
  1315                           _ptrSerialIn:
  1316  0022                            ds      1
  1317  0022                     
  1318                           _currKey:
  1319  0023                            ds      1
  1320  0023                     
  1321                           _prevKey:
  1322  0024                            ds      1
  1323  0024                     
  1324                           _fifo:
  1325  0025                            ds      16
  1326  0025                     
  1327                           	file	"C:\Users\18175218\AppData\Local\Temp\s13c."
  1328                           	line	#
  1329                           psect clrtext,class=CODE,delta=2
  1330                           global clear_ram0
  1331                           ;	Called with FSR containing the base address, and
  1332                           ;	W with the last address+1
  1333                           clear_ram0:
  1334  00D1                     	clrwdt			;clear the watchdog before getting into this loop
  1335  00D1  0064               clrloop0:
  1336  00D2                     	clrf	indf		;clear RAM location pointed to by FSR
  1337  00D2  0180               	incf	fsr,f		;increment pointer
  1338  00D3  0A84               	xorwf	fsr,w		;XOR with final address
  1339  00D4  0604               	btfsc	status,2	;have we reached the end yet?
  1340  00D5  1903               	retlw	0		;all done for this memory range, return
  1341  00D6  3400               	xorwf	fsr,w		;XOR again to restore value
  1342  00D7  0604               	goto	clrloop0		;do the next byte
  1343  00D8  28D2               
  1344                           ; Clear objects allocated to COMMON
  1345                           psect cinit,class=CODE,delta=2,merge=1
  1346                           	clrf	((__pbssCOMMON)+0)&07Fh
  1347  07F1  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
  1348  07F2  01FD               ; Clear objects allocated to BANK0
  1349                           psect cinit,class=CODE,delta=2,merge=1
  1350                           	bcf	status, 7	;select IRP bank0
  1351  07F3  1383               	movlw	low(__pbssBANK0)
  1352  07F4  3020               	movwf	fsr
  1353  07F5  0084               	movlw	low((__pbssBANK0)+015h)
  1354  07F6  3035               	fcall	clear_ram0
  1355  07F7  120A  118A  20D1  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1356                           global end_of_initialization,__end_of__initialization
  1357                           
  1358                           ;End of C runtime variable initialization code
  1359                           
  1360                           end_of_initialization:
  1361  07FC                     __end_of__initialization:
  1362  07FC                     clrf status
  1363  07FC  0183               ljmp _main	;jump to C main() function
  1364  07FD  120A  118A  2BB7   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1365                           global __pcstackCOMMON
  1366                           __pcstackCOMMON:
  1367  0070                     ?_displayFIFO:	; 1 bytes @ 0x0
  1368  0070                     ??_displayFIFO:	; 1 bytes @ 0x0
  1369  0070                     ?_initSerialIO:	; 1 bytes @ 0x0
  1370  0070                     ?_serialIOscan:	; 1 bytes @ 0x0
  1371  0070                     ?_putFIFO:	; 1 bytes @ 0x0
  1372  0070                     ??_putFIFO:	; 1 bytes @ 0x0
  1373  0070                     ?_getFIFO:	; 1 bytes @ 0x0
  1374  0070                     ??_getFIFO:	; 1 bytes @ 0x0
  1375  0070                     ?_delFIFO:	; 1 bytes @ 0x0
  1376  0070                     ??_delFIFO:	; 1 bytes @ 0x0
  1377  0070                     ?_previousKey:	; 1 bytes @ 0x0
  1378  0070                     ??_previousKey:	; 1 bytes @ 0x0
  1379  0070                     ?_currentKey:	; 1 bytes @ 0x0
  1380  0070                     ??_currentKey:	; 1 bytes @ 0x0
  1381  0070                     ?_keyboardScan:	; 1 bytes @ 0x0
  1382  0070                     ??_keyboardScan:	; 1 bytes @ 0x0
  1383  0070                     ?_initKeyboard:	; 1 bytes @ 0x0
  1384  0070                     ??_initKeyboard:	; 1 bytes @ 0x0
  1385  0070                     ?_lcdcmd:	; 1 bytes @ 0x0
  1386  0070                     ??_lcdcmd:	; 1 bytes @ 0x0
  1387  0070                     ?_lcddat:	; 1 bytes @ 0x0
  1388  0070                     ??_lcddat:	; 1 bytes @ 0x0
  1389  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1390  0070                     ?_clearLCD:	; 1 bytes @ 0x0
  1391  0070                     ?_main:	; 1 bytes @ 0x0
  1392  0070                     ?_serialIOload:	; 1 bytes @ 0x0
  1393  0070                     ??_serialIOload:	; 1 bytes @ 0x0
  1394  0070                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  1395  0070                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  1396  0070                     	global	initSerialIO@ptrOut
  1397                           initSerialIO@ptrOut:	; 1 bytes @ 0x0
  1398  0070                     	ds	1
  1399  0070                     	global	putFIFO@c
  1400                           putFIFO@c:	; 1 bytes @ 0x1
  1401  0071                     	global	getFIFO@aux
  1402                           getFIFO@aux:	; 1 bytes @ 0x1
  1403  0071                     	global	delFIFO@n
  1404                           delFIFO@n:	; 1 bytes @ 0x1
  1405  0071                     	global	lcddat@dat
  1406                           lcddat@dat:	; 1 bytes @ 0x1
  1407  0071                     	global	serialIObyteShift@dataIn
  1408                           serialIObyteShift@dataIn:	; 1 bytes @ 0x1
  1409  0071                     	global	initSerialIO@length
  1410                           initSerialIO@length:	; 1 bytes @ 0x1
  1411  0071                     	ds	1
  1412  0071                     ??_initSerialIO:	; 1 bytes @ 0x2
  1413  0072                     	global	delFIFO@ret
  1414                           delFIFO@ret:	; 1 bytes @ 0x2
  1415  0072                     	global	lcdcmd@cmd
  1416                           lcdcmd@cmd:	; 1 bytes @ 0x2
  1417  0072                     	global	lcddat@nibble
  1418                           lcddat@nibble:	; 1 bytes @ 0x2
  1419  0072                     	global	serialIObyteShift@dataOut
  1420                           serialIObyteShift@dataOut:	; 1 bytes @ 0x2
  1421  0072                     	ds	1
  1422  0072                     	global	lcdcmd@nibble
  1423                           lcdcmd@nibble:	; 1 bytes @ 0x3
  1424  0073                     	global	serialIObyteShift@dataBit
  1425                           serialIObyteShift@dataBit:	; 1 bytes @ 0x3
  1426  0073                     	global	initSerialIO@ptrIn
  1427                           initSerialIO@ptrIn:	; 1 bytes @ 0x3
  1428  0073                     	ds	1
  1429  0073                     ??_serialIOscan:	; 1 bytes @ 0x4
  1430  0074                     ?_lcdxy:	; 1 bytes @ 0x4
  1431  0074                     ??_clearLCD:	; 1 bytes @ 0x4
  1432  0074                     	global	lcdxy@y
  1433                           lcdxy@y:	; 1 bytes @ 0x4
  1434  0074                     	ds	1
  1435  0074                     ??_lcdxy:	; 1 bytes @ 0x5
  1436  0075                     	ds	1
  1437  0075                     	global	lcdxy@x
  1438                           lcdxy@x:	; 1 bytes @ 0x6
  1439  0076                     	ds	1
  1440  0076                     ?_lcd:	; 1 bytes @ 0x7
  1441  0077                     ??_initLCD:	; 1 bytes @ 0x7
  1442  0077                     	global	lcd@y
  1443                           lcd@y:	; 1 bytes @ 0x7
  1444  0077                     	global	serialIOscan@j
  1445                           serialIOscan@j:	; 1 bytes @ 0x7
  1446  0077                     	ds	1
  1447  0077                     	global	keyboardScan@aux
  1448                           keyboardScan@aux:	; 1 bytes @ 0x8
  1449  0078                     	global	lcd@ptr
  1450                           lcd@ptr:	; 1 bytes @ 0x8
  1451  0078                     	global	serialIOscan@i
  1452                           serialIOscan@i:	; 1 bytes @ 0x8
  1453  0078                     	ds	1
  1454  0078                     ??_lcd:	; 1 bytes @ 0x9
  1455  0079                     	global	keyboardScan@i
  1456                           keyboardScan@i:	; 1 bytes @ 0x9
  1457  0079                     	ds	1
  1458  0079                     	global	keyboardScan@j
  1459                           keyboardScan@j:	; 1 bytes @ 0xA
  1460  007A                     	global	lcd@x
  1461                           lcd@x:	; 1 bytes @ 0xA
  1462  007A                     	global	initLCD@i
  1463                           initLCD@i:	; 1 bytes @ 0xA
  1464  007A                     	ds	1
  1465  007A                     	global	initLCD@j
  1466                           initLCD@j:	; 1 bytes @ 0xB
  1467  007B                     	ds	1
  1468  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1469                           global __pcstackBANK0
  1470                           __pcstackBANK0:
  1471  0035                     ??_main:	; 1 bytes @ 0x0
  1472  0035                     	ds	3
  1473  0035                     	global	main@a
  1474                           main@a:	; 1 bytes @ 0x3
  1475  0038                     	ds	1
  1476  0038                     	global	main@b
  1477                           main@b:	; 1 bytes @ 0x4
  1478  0039                     	ds	1
  1479  0039                     	global	main@c
  1480                           main@c:	; 1 bytes @ 0x5
  1481  003A                     	ds	1
  1482  003A                     	global	main@d
  1483                           main@d:	; 1 bytes @ 0x6
  1484  003B                     	ds	1
  1485  003B                     	global	main@atuador
  1486                           main@atuador:	; 1 bytes @ 0x7
  1487  003C                     	ds	1
  1488  003C                     	global	main@sensor
  1489                           main@sensor:	; 1 bytes @ 0x8
  1490  003D                     	ds	1
  1491  003D                     	global	main@tecla
  1492                           main@tecla:	; 1 bytes @ 0x9
  1493  003E                     	ds	1
  1494  003E                     	global	main@estado
  1495                           main@estado:	; 2 bytes @ 0xA
  1496  003F                     	ds	2
  1497  003F                     	global	main@rest
  1498                           main@rest:	; 1 bytes @ 0xC
  1499  0041                     	ds	1
  1500  0041                     ;!
  1501                           ;!Data Sizes:
  1502                           ;!    Strings     0
  1503                           ;!    Constant    16
  1504                           ;!    Data        0
  1505                           ;!    BSS         23
  1506                           ;!    Persistent  0
  1507                           ;!    Stack       0
  1508                           ;!
  1509                           ;!Auto Spaces:
  1510                           ;!    Space          Size  Autos    Used
  1511                           ;!    COMMON           14     12      14
  1512                           ;!    BANK0            80     13      34
  1513                           ;!    BANK1            80      0       0
  1514                           ;!    BANK3            96      0       0
  1515                           ;!    BANK2            96      0       0
  1516                           
  1517                           ;!
  1518                           ;!Pointer List with Targets:
  1519                           ;!
  1520                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
  1521                           ;!		 -> main@atuador(BANK0[1]), 
  1522                           ;!
  1523                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
  1524                           ;!		 -> main@sensor(BANK0[1]), 
  1525                           ;!
  1526                           ;!    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
  1527                           ;!		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 
  1528                           ;!
  1529                           ;!    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
  1530                           ;!		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 
  1531                           ;!
  1532                           ;!    lcd@ptr	PTR const unsigned char  size(1) Largest target is 16
  1533                           ;!		 -> fifo(BANK0[16]), 
  1534                           ;!
  1535                           ;!    sp__displayFIFO	PTR void  size(1) Largest target is 16
  1536                           ;!		 -> fifo(BANK0[16]), 
  1537                           ;!
  1538                           
  1539                           
  1540                           ;!
  1541                           ;!Critical Paths under _main in COMMON
  1542                           ;!
  1543                           ;!    _main->_initLCD
  1544                           ;!    _serialIOscan->_serialIObyteShift
  1545                           ;!    _lcd->_lcdxy
  1546                           ;!    _initLCD->_lcdxy
  1547                           ;!    _lcdxy->_lcdcmd
  1548                           ;!    _clearLCD->_lcdcmd
  1549                           ;!
  1550                           ;!Critical Paths under _main in BANK0
  1551                           ;!
  1552                           ;!    None.
  1553                           ;!
  1554                           ;!Critical Paths under _main in BANK1
  1555                           ;!
  1556                           ;!    None.
  1557                           ;!
  1558                           ;!Critical Paths under _main in BANK3
  1559                           ;!
  1560                           ;!    None.
  1561                           ;!
  1562                           ;!Critical Paths under _main in BANK2
  1563                           ;!
  1564                           ;!    None.
  1565                           
  1566 ;;
  1567 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1568 ;;
  1569                           
  1570                           ;!
  1571                           ;!Call Graph Tables:
  1572                           ;!
  1573                           ;! ---------------------------------------------------------------------------------
  1574                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1575                           ;! ---------------------------------------------------------------------------------
  1576                           ;! (0) _main                                                13    13      0    3378
  1577                           ;!                                              0 BANK0     13    13      0
  1578                           ;!                           _clearLCD
  1579                           ;!                         _currentKey
  1580                           ;!                            _delFIFO
  1581                           ;!                        _displayFIFO
  1582                           ;!                            _getFIFO
  1583                           ;!                       _initKeyboard
  1584                           ;!                            _initLCD
  1585                           ;!                       _initSerialIO
  1586                           ;!                       _keyboardScan
  1587                           ;!                                _lcd
  1588                           ;!                        _previousKey
  1589                           ;!                            _putFIFO
  1590                           ;!                       _serialIOscan
  1591                           ;! ---------------------------------------------------------------------------------
  1592                           ;! (1) _serialIOscan                                         5     5      0     205
  1593                           ;!                                              4 COMMON     5     5      0
  1594                           ;!                  _serialIObyteShift
  1595                           ;!                       _serialIOload
  1596                           ;! ---------------------------------------------------------------------------------
  1597                           ;! (2) _serialIOload                                         0     0      0       0
  1598                           ;! ---------------------------------------------------------------------------------
  1599                           ;! (2) _serialIObyteShift                                    4     4      0     114
  1600                           ;!                                              0 COMMON     4     4      0
  1601                           ;! ---------------------------------------------------------------------------------
  1602                           ;! (1) _putFIFO                                              2     2      0      22
  1603                           ;!                                              0 COMMON     2     2      0
  1604                           ;! ---------------------------------------------------------------------------------
  1605                           ;! (1) _previousKey                                          0     0      0       0
  1606                           ;! ---------------------------------------------------------------------------------
  1607                           ;! (1) _lcd                                                  4     2      2     681
  1608                           ;!                                              7 COMMON     4     2      2
  1609                           ;!                        _displayFIFO (ARG)
  1610                           ;!                             _lcddat
  1611                           ;!                              _lcdxy
  1612                           ;! ---------------------------------------------------------------------------------
  1613                           ;! (2) _keyboardScan                                        11    11      0     210
  1614                           ;!                                              0 COMMON    11    11      0
  1615                           ;! ---------------------------------------------------------------------------------
  1616                           ;! (1) _initSerialIO                                         4     2      2     251
  1617                           ;!                                              0 COMMON     4     2      2
  1618                           ;! ---------------------------------------------------------------------------------
  1619                           ;! (1) _initLCD                                              5     5      0     753
  1620                           ;!                                              7 COMMON     5     5      0
  1621                           ;!                             _lcdcmd
  1622                           ;!                             _lcddat
  1623                           ;!                              _lcdxy
  1624                           ;! ---------------------------------------------------------------------------------
  1625                           ;! (2) _lcdxy                                                3     2      1     373
  1626                           ;!                                              4 COMMON     3     2      1
  1627                           ;!                             _lcdcmd
  1628                           ;! ---------------------------------------------------------------------------------
  1629                           ;! (2) _lcddat                                               3     3      0      67
  1630                           ;!                                              0 COMMON     3     3      0
  1631                           ;! ---------------------------------------------------------------------------------
  1632                           ;! (1) _initKeyboard                                         0     0      0       0
  1633                           ;! ---------------------------------------------------------------------------------
  1634                           ;! (1) _getFIFO                                              2     2      0      24
  1635                           ;!                                              0 COMMON     2     2      0
  1636                           ;! ---------------------------------------------------------------------------------
  1637                           ;! (1) _displayFIFO                                          0     0      0       0
  1638                           ;! ---------------------------------------------------------------------------------
  1639                           ;! (1) _delFIFO                                              3     3      0      46
  1640                           ;!                                              0 COMMON     3     3      0
  1641                           ;! ---------------------------------------------------------------------------------
  1642                           ;! (1) _currentKey                                           0     0      0       0
  1643                           ;! ---------------------------------------------------------------------------------
  1644                           ;! (1) _clearLCD                                             0     0      0     177
  1645                           ;!                             _lcdcmd
  1646                           ;! ---------------------------------------------------------------------------------
  1647                           ;! (3) _lcdcmd                                               4     4      0     177
  1648                           ;!                                              0 COMMON     4     4      0
  1649                           ;! ---------------------------------------------------------------------------------
  1650                           ;! Estimated maximum stack depth 3
  1651                           ;! ---------------------------------------------------------------------------------
  1652                           ;!
  1653                           ;! Call Graph Graphs:
  1654                           ;!
  1655                           ;! _main (ROOT)
  1656                           ;!   _clearLCD
  1657                           ;!     _lcdcmd
  1658                           ;!   _currentKey
  1659                           ;!   _delFIFO
  1660                           ;!   _displayFIFO
  1661                           ;!   _getFIFO
  1662                           ;!   _initKeyboard
  1663                           ;!   _initLCD
  1664                           ;!     _lcdcmd
  1665                           ;!     _lcddat
  1666                           ;!     _lcdxy
  1667                           ;!       _lcdcmd
  1668                           ;!   _initSerialIO
  1669                           ;!   _keyboardScan
  1670                           ;!   _lcd
  1671                           ;!     _displayFIFO (ARG)
  1672                           ;!     _lcddat (ARG)
  1673                           ;!     _lcdxy (ARG)
  1674                           ;!       _lcdcmd
  1675                           ;!   _previousKey
  1676                           ;!   _putFIFO
  1677                           ;!   _serialIOscan
  1678                           ;!     _serialIObyteShift
  1679                           ;!     _serialIOload
  1680                           ;!
  1681                           
  1682                           ;! Address spaces:
  1683                           
  1684                           ;!Name               Size   Autos  Total    Cost      Usage
  1685                           ;!BITCOMMON            E      0       0       0        0.0%
  1686                           ;!EEDATA             100      0       0       0        0.0%
  1687                           ;!NULL                 0      0       0       0        0.0%
  1688                           ;!CODE                 0      0       0       0        0.0%
  1689                           ;!COMMON               E      C       E       1      100.0%
  1690                           ;!BITSFR0              0      0       0       1        0.0%
  1691                           ;!SFR0                 0      0       0       1        0.0%
  1692                           ;!BITSFR1              0      0       0       2        0.0%
  1693                           ;!SFR1                 0      0       0       2        0.0%
  1694                           ;!STACK                0      0       0       2        0.0%
  1695                           ;!ABS                  0      0      30       3        0.0%
  1696                           ;!BITBANK0            50      0       0       4        0.0%
  1697                           ;!BITSFR3              0      0       0       4        0.0%
  1698                           ;!SFR3                 0      0       0       4        0.0%
  1699                           ;!BANK0               50      D      22       5       42.5%
  1700                           ;!BITSFR2              0      0       0       5        0.0%
  1701                           ;!SFR2                 0      0       0       5        0.0%
  1702                           ;!BITBANK1            50      0       0       6        0.0%
  1703                           ;!BANK1               50      0       0       7        0.0%
  1704                           ;!BITBANK3            60      0       0       8        0.0%
  1705                           ;!BANK3               60      0       0       9        0.0%
  1706                           ;!BITBANK2            60      0       0      10        0.0%
  1707                           ;!BANK2               60      0       0      11        0.0%
  1708                           ;!DATA                 0      0      30      12        0.0%
  1709                           
  1710                           	global	_main
  1711                           
  1712 ;; *************** function _main *****************
  1713 ;; Defined at:
  1714 ;;		line 48 in file "main.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  estado          2   10[BANK0 ] int 
  1719 ;;  rest            1   12[BANK0 ] unsigned char 
  1720 ;;  tecla           1    9[BANK0 ] unsigned char 
  1721 ;;  sensor          1    8[BANK0 ] struct .
  1722 ;;  atuador         1    7[BANK0 ] struct .
  1723 ;;  d               1    6[BANK0 ] unsigned char 
  1724 ;;  c               1    5[BANK0 ] unsigned char 
  1725 ;;  b               1    4[BANK0 ] unsigned char 
  1726 ;;  a               1    3[BANK0 ] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : B00/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       0       0       0       0
  1737 ;;      Locals:         0      10       0       0       0
  1738 ;;      Temps:          0       3       0       0       0
  1739 ;;      Totals:         0      13       0       0       0
  1740 ;;Total ram usage:       13 bytes
  1741 ;; Hardware stack levels required when called:    3
  1742 ;; This function calls:
  1743 ;;		_clearLCD
  1744 ;;		_currentKey
  1745 ;;		_delFIFO
  1746 ;;		_displayFIFO
  1747 ;;		_getFIFO
  1748 ;;		_initKeyboard
  1749 ;;		_initLCD
  1750 ;;		_initSerialIO
  1751 ;;		_keyboardScan
  1752 ;;		_lcd
  1753 ;;		_previousKey
  1754 ;;		_putFIFO
  1755 ;;		_serialIOscan
  1756 ;; This function is called by:
  1757 ;;		Startup code after reset
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1761                           	file	"main.c"
  1762                           	line	48
  1763                           global __pmaintext
  1764                           __pmaintext:	;psect for function _main
  1765  03B7                     psect	maintext
  1766                           	file	"main.c"
  1767                           	line	48
  1768                           	global	__size_of_main
  1769                           	__size_of_main	equ	__end_of_main-_main
  1770  043A                     	
  1771                           _main:	
  1772  03B7                     ;incstack = 0
  1773                           	opt	stack 5
  1774                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1775                           	line	50
  1776                           	
  1777                           l1805:	
  1778  03B7                     ;main.c: 50:     unsigned char tecla = 0;
  1779                           	bcf	status, 5	;RP0=0, select bank0
  1780  03B7  1283               	bcf	status, 6	;RP1=0, select bank0
  1781  03B8  1303               	clrf	(main@tecla)
  1782  03B9  01BE               	line	51
  1783                           ;main.c: 51:     unsigned char a,b,c,d = 0;
  1784                           	clrf	(main@d)
  1785  03BA  01BB               	line	52
  1786                           ;main.c: 52:     unsigned char rest = 0;
  1787                           	clrf	(main@rest)
  1788  03BB  01C1               	line	55
  1789                           ;main.c: 53:     SENSORESbits_t sensor;;main.c: 54:     ATUADORESbits_t atuador;;main.c:
                                  55:     int estado = 0;
  1790                           	clrf	(main@estado)
  1791  03BC  01BF               	clrf	(main@estado+1)
  1792  03BD  01C0               	line	57
  1793                           	
  1794                           l1807:	
  1795  03BE                     ;main.c: 57:     initLCD();
  1796                           	fcall	_initLCD
  1797  03BE  120A  118A  230D  120A  118A  	line	58
  1798                           	
  1799                           l1809:	
  1800  03C3                     ;main.c: 58:     initKeyboard();
  1801                           	fcall	_initKeyboard
  1802  03C3  120A  118A  20E7  120A  118A  	line	59
  1803                           	
  1804                           l1811:	
  1805  03C8                     ;main.c: 59:     initSerialIO( &sensor, &atuador, 1 );
  1806                           	movlw	(low(main@atuador|((0x0)<<8)))&0ffh
  1807  03C8  303C               	bcf	status, 5	;RP0=0, select bank0
  1808  03C9  1283               	bcf	status, 6	;RP1=0, select bank0
  1809  03CA  1303               	movwf	(??_main+0)+0
  1810  03CB  00B5               	movf	(??_main+0)+0,w
  1811  03CC  0835               	movwf	(initSerialIO@ptrOut)
  1812  03CD  00F0               	clrf	(initSerialIO@length)
  1813  03CE  01F1               	incf	(initSerialIO@length),f
  1814  03CF  0AF1               	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  1815  03D0  303D               	fcall	_initSerialIO
  1816  03D1  120A  118A  21BE  120A  118A  	goto	l1813
  1817  03D6  2BD7               	line	61
  1818                           ;main.c: 61:     while( 1 )
  1819                           	
  1820                           l146:	
  1821  03D7                     	line	64
  1822                           	
  1823                           l1813:	
  1824  03D7                     ;main.c: 62:     {;main.c: 64:         keyboardScan();
  1825                           	fcall	_keyboardScan
  1826  03D7  120A  118A  228E  120A  118A  	line	66
  1827                           ;main.c: 66:         switch( estado )
  1828                           	goto	l1955
  1829  03DC  2E25               	line	68
  1830                           ;main.c: 67:         {;main.c: 68:             case 0:
  1831                           	
  1832                           l148:	
  1833  03DD                     	line	70
  1834                           ;main.c: 70:                     break;
  1835                           	goto	l1957
  1836  03DD  2E9F               	line	71
  1837                           ;main.c: 71:             case 10:
  1838                           	
  1839                           l150:	
  1840  03DE                     	line	72
  1841                           	
  1842                           l1815:	
  1843  03DE                     ;main.c: 72:                         rest = getFIFO();
  1844                           	fcall	_getFIFO
  1845  03DE  120A  118A  210D  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1846  03E3  1283               	bcf	status, 6	;RP1=0, select bank0
  1847  03E4  1303               	movwf	(??_main+0)+0
  1848  03E5  00B5               	movf	(??_main+0)+0,w
  1849  03E6  0835               	movwf	(main@rest)
  1850  03E7  00C1               	line	73
  1851                           	
  1852                           l1817:	
  1853  03E8                     ;main.c: 73:                         if( rest == 'A' )
  1854                           		movlw	65
  1855  03E8  3041               	xorwf	((main@rest)),w
  1856  03E9  0641               	btfss	status,2
  1857  03EA  1D03               	goto	u861
  1858  03EB  2BED               	goto	u860
  1859  03EC  2BEE               u861:
  1860  03ED                     	goto	l1821
  1861  03ED  2BF3               u860:
  1862  03EE                     	line	74
  1863                           	
  1864                           l1819:	
  1865  03EE                     ;main.c: 74:                             estado = 100;
  1866                           	movlw	064h
  1867  03EE  3064               	movwf	(main@estado)
  1868  03EF  00BF               	movlw	0
  1869  03F0  3000               	movwf	((main@estado))+1
  1870  03F1  00C0               	goto	l1957
  1871  03F2  2E9F               	line	75
  1872                           ;main.c: 75:                         else if( rest == 'B' )
  1873                           	
  1874                           l151:	
  1875  03F3                     	
  1876                           l1821:	
  1877  03F3                     		movlw	66
  1878  03F3  3042               	xorwf	((main@rest)),w
  1879  03F4  0641               	btfss	status,2
  1880  03F5  1D03               	goto	u871
  1881  03F6  2BF8               	goto	u870
  1882  03F7  2BF9               u871:
  1883  03F8                     	goto	l1825
  1884  03F8  2BFE               u870:
  1885  03F9                     	line	76
  1886                           	
  1887                           l1823:	
  1888  03F9                     ;main.c: 76:                             estado = 110;
  1889                           	movlw	06Eh
  1890  03F9  306E               	movwf	(main@estado)
  1891  03FA  00BF               	movlw	0
  1892  03FB  3000               	movwf	((main@estado))+1
  1893  03FC  00C0               	goto	l1957
  1894  03FD  2E9F               	line	77
  1895                           ;main.c: 77:                         else if( rest == 'C' )
  1896                           	
  1897                           l153:	
  1898  03FE                     	
  1899                           l1825:	
  1900  03FE                     		movlw	67
  1901  03FE  3043               	xorwf	((main@rest)),w
  1902  03FF  0641               	btfss	status,2
  1903  0400  1D03               	goto	u881
  1904  0401  2C03               	goto	u880
  1905  0402  2C04               u881:
  1906  0403                     	goto	l1829
  1907  0403  2C09               u880:
  1908  0404                     	line	78
  1909                           	
  1910                           l1827:	
  1911  0404                     ;main.c: 78:                             estado = 120;
  1912                           	movlw	078h
  1913  0404  3078               	movwf	(main@estado)
  1914  0405  00BF               	movlw	0
  1915  0406  3000               	movwf	((main@estado))+1
  1916  0407  00C0               	goto	l1957
  1917  0408  2E9F               	line	79
  1918                           ;main.c: 79:                         else if( rest == 'D' )
  1919                           	
  1920                           l155:	
  1921  0409                     	
  1922                           l1829:	
  1923  0409                     		movlw	68
  1924  0409  3044               	xorwf	((main@rest)),w
  1925  040A  0641               	btfss	status,2
  1926  040B  1D03               	goto	u891
  1927  040C  2C0E               	goto	u890
  1928  040D  2C0F               u891:
  1929  040E                     	goto	l1833
  1930  040E  2C14               u890:
  1931  040F                     	line	80
  1932                           	
  1933                           l1831:	
  1934  040F                     ;main.c: 80:                             estado = 130;
  1935                           	movlw	082h
  1936  040F  3082               	movwf	(main@estado)
  1937  0410  00BF               	movlw	0
  1938  0411  3000               	movwf	((main@estado))+1
  1939  0412  00C0               	goto	l1957
  1940  0413  2E9F               	line	81
  1941                           ;main.c: 81:                         else if( rest == '1' )
  1942                           	
  1943                           l157:	
  1944  0414                     	
  1945                           l1833:	
  1946  0414                     		movlw	49
  1947  0414  3031               	xorwf	((main@rest)),w
  1948  0415  0641               	btfss	status,2
  1949  0416  1D03               	goto	u901
  1950  0417  2C19               	goto	u900
  1951  0418  2C1A               u901:
  1952  0419                     	goto	l1837
  1953  0419  2C1F               u900:
  1954  041A                     	line	82
  1955                           	
  1956                           l1835:	
  1957  041A                     ;main.c: 82:                             estado = 140;
  1958                           	movlw	08Ch
  1959  041A  308C               	movwf	(main@estado)
  1960  041B  00BF               	movlw	0
  1961  041C  3000               	movwf	((main@estado))+1
  1962  041D  00C0               	goto	l1957
  1963  041E  2E9F               	line	83
  1964                           ;main.c: 83:                         else if( rest == '2' )
  1965                           	
  1966                           l159:	
  1967  041F                     	
  1968                           l1837:	
  1969  041F                     		movlw	50
  1970  041F  3032               	xorwf	((main@rest)),w
  1971  0420  0641               	btfss	status,2
  1972  0421  1D03               	goto	u911
  1973  0422  2C24               	goto	u910
  1974  0423  2C25               u911:
  1975  0424                     	goto	l1841
  1976  0424  2C2A               u910:
  1977  0425                     	line	84
  1978                           	
  1979                           l1839:	
  1980  0425                     ;main.c: 84:                             estado = 150;
  1981                           	movlw	096h
  1982  0425  3096               	movwf	(main@estado)
  1983  0426  00BF               	movlw	0
  1984  0427  3000               	movwf	((main@estado))+1
  1985  0428  00C0               	goto	l1957
  1986  0429  2E9F               	line	85
  1987                           ;main.c: 85:                         else if( rest == '3' )
  1988                           	
  1989                           l161:	
  1990  042A                     	
  1991                           l1841:	
  1992  042A                     		movlw	51
  1993  042A  3033               	xorwf	((main@rest)),w
  1994  042B  0641               	btfss	status,2
  1995  042C  1D03               	goto	u921
  1996  042D  2C2F               	goto	u920
  1997  042E  2C30               u921:
  1998  042F                     	goto	l1845
  1999  042F  2C35               u920:
  2000  0430                     	line	86
  2001                           	
  2002                           l1843:	
  2003  0430                     ;main.c: 86:                             estado = 160;
  2004                           	movlw	0A0h
  2005  0430  30A0               	movwf	(main@estado)
  2006  0431  00BF               	movlw	0
  2007  0432  3000               	movwf	((main@estado))+1
  2008  0433  00C0               	goto	l1957
  2009  0434  2E9F               	line	87
  2010                           ;main.c: 87:                         else if( rest == '4' )
  2011                           	
  2012                           l163:	
  2013  0435                     	
  2014                           l1845:	
  2015  0435                     		movlw	52
  2016  0435  3034               	xorwf	((main@rest)),w
  2017  0436  0641               	btfss	status,2
  2018  0437  1D03               	goto	u931
  2019  0438  2C3A               	goto	u930
  2020  0439  2C3B               u931:
  2021  043A                     	goto	l1849
  2022  043A  2C40               u930:
  2023  043B                     	line	88
  2024                           	
  2025                           l1847:	
  2026  043B                     ;main.c: 88:                             estado = 170;
  2027                           	movlw	0AAh
  2028  043B  30AA               	movwf	(main@estado)
  2029  043C  00BF               	movlw	0
  2030  043D  3000               	movwf	((main@estado))+1
  2031  043E  00C0               	goto	l1957
  2032  043F  2E9F               	line	89
  2033                           ;main.c: 89:                         else if( rest == '5' )
  2034                           	
  2035                           l165:	
  2036  0440                     	
  2037                           l1849:	
  2038  0440                     		movlw	53
  2039  0440  3035               	xorwf	((main@rest)),w
  2040  0441  0641               	btfss	status,2
  2041  0442  1D03               	goto	u941
  2042  0443  2C45               	goto	u940
  2043  0444  2C46               u941:
  2044  0445                     	goto	l1853
  2045  0445  2C4B               u940:
  2046  0446                     	line	90
  2047                           	
  2048                           l1851:	
  2049  0446                     ;main.c: 90:                             estado = 180;
  2050                           	movlw	0B4h
  2051  0446  30B4               	movwf	(main@estado)
  2052  0447  00BF               	movlw	0
  2053  0448  3000               	movwf	((main@estado))+1
  2054  0449  00C0               	goto	l1957
  2055  044A  2E9F               	line	91
  2056                           ;main.c: 91:                         else if( rest == '6' )
  2057                           	
  2058                           l167:	
  2059  044B                     	
  2060                           l1853:	
  2061  044B                     		movlw	54
  2062  044B  3036               	xorwf	((main@rest)),w
  2063  044C  0641               	btfss	status,2
  2064  044D  1D03               	goto	u951
  2065  044E  2C50               	goto	u950
  2066  044F  2C51               u951:
  2067  0450                     	goto	l1857
  2068  0450  2C56               u950:
  2069  0451                     	line	92
  2070                           	
  2071                           l1855:	
  2072  0451                     ;main.c: 92:                             estado = 190;
  2073                           	movlw	0BEh
  2074  0451  30BE               	movwf	(main@estado)
  2075  0452  00BF               	movlw	0
  2076  0453  3000               	movwf	((main@estado))+1
  2077  0454  00C0               	goto	l1957
  2078  0455  2E9F               	line	93
  2079                           ;main.c: 93:                         else if( rest == '7' )
  2080                           	
  2081                           l169:	
  2082  0456                     	
  2083                           l1857:	
  2084  0456                     		movlw	55
  2085  0456  3037               	xorwf	((main@rest)),w
  2086  0457  0641               	btfss	status,2
  2087  0458  1D03               	goto	u961
  2088  0459  2C5B               	goto	u960
  2089  045A  2C5C               u961:
  2090  045B                     	goto	l1861
  2091  045B  2C61               u960:
  2092  045C                     	line	94
  2093                           	
  2094                           l1859:	
  2095  045C                     ;main.c: 94:                             estado = 200;
  2096                           	movlw	0C8h
  2097  045C  30C8               	movwf	(main@estado)
  2098  045D  00BF               	movlw	0
  2099  045E  3000               	movwf	((main@estado))+1
  2100  045F  00C0               	goto	l1957
  2101  0460  2E9F               	line	95
  2102                           ;main.c: 95:                         else if( rest == '8' )
  2103                           	
  2104                           l171:	
  2105  0461                     	
  2106                           l1861:	
  2107  0461                     		movlw	56
  2108  0461  3038               	xorwf	((main@rest)),w
  2109  0462  0641               	btfss	status,2
  2110  0463  1D03               	goto	u971
  2111  0464  2C66               	goto	u970
  2112  0465  2C67               u971:
  2113  0466                     	goto	l1865
  2114  0466  2C6C               u970:
  2115  0467                     	line	96
  2116                           	
  2117                           l1863:	
  2118  0467                     ;main.c: 96:                             estado = 210;
  2119                           	movlw	0D2h
  2120  0467  30D2               	movwf	(main@estado)
  2121  0468  00BF               	movlw	0
  2122  0469  3000               	movwf	((main@estado))+1
  2123  046A  00C0               	goto	l1957
  2124  046B  2E9F               	line	97
  2125                           ;main.c: 97:                         else if( rest == '9' )
  2126                           	
  2127                           l173:	
  2128  046C                     	
  2129                           l1865:	
  2130  046C                     		movlw	57
  2131  046C  3039               	xorwf	((main@rest)),w
  2132  046D  0641               	btfss	status,2
  2133  046E  1D03               	goto	u981
  2134  046F  2C71               	goto	u980
  2135  0470  2C72               u981:
  2136  0471                     	goto	l1869
  2137  0471  2C77               u980:
  2138  0472                     	line	98
  2139                           	
  2140                           l1867:	
  2141  0472                     ;main.c: 98:                             estado = 220;
  2142                           	movlw	0DCh
  2143  0472  30DC               	movwf	(main@estado)
  2144  0473  00BF               	movlw	0
  2145  0474  3000               	movwf	((main@estado))+1
  2146  0475  00C0               	goto	l1957
  2147  0476  2E9F               	line	99
  2148                           ;main.c: 99:                         else if( rest == 'a' )
  2149                           	
  2150                           l175:	
  2151  0477                     	
  2152                           l1869:	
  2153  0477                     		movlw	97
  2154  0477  3061               	xorwf	((main@rest)),w
  2155  0478  0641               	btfss	status,2
  2156  0479  1D03               	goto	u991
  2157  047A  2C7C               	goto	u990
  2158  047B  2C7D               u991:
  2159  047C                     	goto	l1873
  2160  047C  2C82               u990:
  2161  047D                     	line	100
  2162                           	
  2163                           l1871:	
  2164  047D                     ;main.c: 100:                             estado = 230;
  2165                           	movlw	0E6h
  2166  047D  30E6               	movwf	(main@estado)
  2167  047E  00BF               	movlw	0
  2168  047F  3000               	movwf	((main@estado))+1
  2169  0480  00C0               	goto	l1957
  2170  0481  2E9F               	line	101
  2171                           ;main.c: 101:                         else if( rest == 'b' )
  2172                           	
  2173                           l177:	
  2174  0482                     	
  2175                           l1873:	
  2176  0482                     		movlw	98
  2177  0482  3062               	xorwf	((main@rest)),w
  2178  0483  0641               	btfss	status,2
  2179  0484  1D03               	goto	u1001
  2180  0485  2C87               	goto	u1000
  2181  0486  2C88               u1001:
  2182  0487                     	goto	l1877
  2183  0487  2C8D               u1000:
  2184  0488                     	line	102
  2185                           	
  2186                           l1875:	
  2187  0488                     ;main.c: 102:                             estado = 240;
  2188                           	movlw	0F0h
  2189  0488  30F0               	movwf	(main@estado)
  2190  0489  00BF               	movlw	0
  2191  048A  3000               	movwf	((main@estado))+1
  2192  048B  00C0               	goto	l1957
  2193  048C  2E9F               	line	103
  2194                           ;main.c: 103:                         else if( rest == 'c' )
  2195                           	
  2196                           l179:	
  2197  048D                     	
  2198                           l1877:	
  2199  048D                     		movlw	99
  2200  048D  3063               	xorwf	((main@rest)),w
  2201  048E  0641               	btfss	status,2
  2202  048F  1D03               	goto	u1011
  2203  0490  2C92               	goto	u1010
  2204  0491  2C93               u1011:
  2205  0492                     	goto	l1881
  2206  0492  2C98               u1010:
  2207  0493                     	line	104
  2208                           	
  2209                           l1879:	
  2210  0493                     ;main.c: 104:                             estado = 250;
  2211                           	movlw	0FAh
  2212  0493  30FA               	movwf	(main@estado)
  2213  0494  00BF               	movlw	0
  2214  0495  3000               	movwf	((main@estado))+1
  2215  0496  00C0               	goto	l1957
  2216  0497  2E9F               	line	105
  2217                           ;main.c: 105:                         else if( rest == 'd' )
  2218                           	
  2219                           l181:	
  2220  0498                     	
  2221                           l1881:	
  2222  0498                     		movlw	100
  2223  0498  3064               	xorwf	((main@rest)),w
  2224  0499  0641               	btfss	status,2
  2225  049A  1D03               	goto	u1021
  2226  049B  2C9D               	goto	u1020
  2227  049C  2C9E               u1021:
  2228  049D                     	goto	l1957
  2229  049D  2E9F               u1020:
  2230  049E                     	line	106
  2231                           	
  2232                           l1883:	
  2233  049E                     ;main.c: 106:                             estado = 260;
  2234                           	movlw	04h
  2235  049E  3004               	movwf	(main@estado)
  2236  049F  00BF               	movlw	01h
  2237  04A0  3001               	movwf	((main@estado))+1
  2238  04A1  00C0               	goto	l1957
  2239  04A2  2E9F               	
  2240                           l183:	
  2241  04A3                     	goto	l1957
  2242  04A3  2E9F               	
  2243                           l182:	
  2244  04A4                     	goto	l1957
  2245  04A4  2E9F               	
  2246                           l180:	
  2247  04A5                     	goto	l1957
  2248  04A5  2E9F               	
  2249                           l178:	
  2250  04A6                     	goto	l1957
  2251  04A6  2E9F               	
  2252                           l176:	
  2253  04A7                     	goto	l1957
  2254  04A7  2E9F               	
  2255                           l174:	
  2256  04A8                     	goto	l1957
  2257  04A8  2E9F               	
  2258                           l172:	
  2259  04A9                     	goto	l1957
  2260  04A9  2E9F               	
  2261                           l170:	
  2262  04AA                     	goto	l1957
  2263  04AA  2E9F               	
  2264                           l168:	
  2265  04AB                     	goto	l1957
  2266  04AB  2E9F               	
  2267                           l166:	
  2268  04AC                     	goto	l1957
  2269  04AC  2E9F               	
  2270                           l164:	
  2271  04AD                     	goto	l1957
  2272  04AD  2E9F               	
  2273                           l162:	
  2274  04AE                     	goto	l1957
  2275  04AE  2E9F               	
  2276                           l160:	
  2277  04AF                     	goto	l1957
  2278  04AF  2E9F               	
  2279                           l158:	
  2280  04B0                     	goto	l1957
  2281  04B0  2E9F               	
  2282                           l156:	
  2283  04B1                     	goto	l1957
  2284  04B1  2E9F               	
  2285                           l154:	
  2286  04B2                     	goto	l1957
  2287  04B2  2E9F               	
  2288                           l152:	
  2289  04B3                     	line	107
  2290                           ;main.c: 107:                     break;
  2291                           	goto	l1957
  2292  04B3  2E9F               	line	108
  2293                           ;main.c: 108:             case 100:
  2294                           	
  2295                           l184:	
  2296  04B4                     	line	109
  2297                           ;main.c: 109:                     atuador.A = 1;
  2298                           	bsf	(main@atuador),0
  2299  04B4  143C               	line	110
  2300                           	
  2301                           l1885:	
  2302  04B5                     ;main.c: 110:                     estado = 101;
  2303                           	movlw	065h
  2304  04B5  3065               	movwf	(main@estado)
  2305  04B6  00BF               	movlw	0
  2306  04B7  3000               	movwf	((main@estado))+1
  2307  04B8  00C0               	line	111
  2308                           ;main.c: 111:                     break;
  2309                           	goto	l1957
  2310  04B9  2E9F               	line	112
  2311                           ;main.c: 112:             case 101:
  2312                           	
  2313                           l185:	
  2314  04BA                     	line	113
  2315                           ;main.c: 113:                     if( sensor.A1 == 1)
  2316                           	btfss	(main@sensor),0
  2317  04BA  1C3D               	goto	u1031
  2318  04BB  2CBD               	goto	u1030
  2319  04BC  2CBE               u1031:
  2320  04BD                     	goto	l1957
  2321  04BD  2E9F               u1030:
  2322  04BE                     	line	114
  2323                           	
  2324                           l1887:	
  2325  04BE                     ;main.c: 114:                         estado = 10;
  2326                           	movlw	0Ah
  2327  04BE  300A               	movwf	(main@estado)
  2328  04BF  00BF               	movlw	0
  2329  04C0  3000               	movwf	((main@estado))+1
  2330  04C1  00C0               	goto	l1957
  2331  04C2  2E9F               	
  2332                           l186:	
  2333  04C3                     	line	115
  2334                           ;main.c: 115:                     break;
  2335                           	goto	l1957
  2336  04C3  2E9F               	line	116
  2337                           ;main.c: 116:             case 110:
  2338                           	
  2339                           l187:	
  2340  04C4                     	line	117
  2341                           ;main.c: 117:                     atuador.B = 1;
  2342                           	bsf	(main@atuador),1
  2343  04C4  14BC               	line	118
  2344                           	
  2345                           l1889:	
  2346  04C5                     ;main.c: 118:                     estado = 111;
  2347                           	movlw	06Fh
  2348  04C5  306F               	movwf	(main@estado)
  2349  04C6  00BF               	movlw	0
  2350  04C7  3000               	movwf	((main@estado))+1
  2351  04C8  00C0               	line	119
  2352                           ;main.c: 119:                     break;
  2353                           	goto	l1957
  2354  04C9  2E9F               	line	120
  2355                           ;main.c: 120:             case 111:
  2356                           	
  2357                           l188:	
  2358  04CA                     	line	121
  2359                           ;main.c: 121:                     if( sensor.B1 == 1)
  2360                           	btfss	(main@sensor),2
  2361  04CA  1D3D               	goto	u1041
  2362  04CB  2CCD               	goto	u1040
  2363  04CC  2CCE               u1041:
  2364  04CD                     	goto	l1957
  2365  04CD  2E9F               u1040:
  2366  04CE                     	line	122
  2367                           	
  2368                           l1891:	
  2369  04CE                     ;main.c: 122:                         estado = 10;
  2370                           	movlw	0Ah
  2371  04CE  300A               	movwf	(main@estado)
  2372  04CF  00BF               	movlw	0
  2373  04D0  3000               	movwf	((main@estado))+1
  2374  04D1  00C0               	goto	l1957
  2375  04D2  2E9F               	
  2376                           l189:	
  2377  04D3                     	line	123
  2378                           ;main.c: 123:                     break;
  2379                           	goto	l1957
  2380  04D3  2E9F               	line	124
  2381                           ;main.c: 124:             case 120:
  2382                           	
  2383                           l190:	
  2384  04D4                     	line	125
  2385                           ;main.c: 125:                     atuador.C = 1;
  2386                           	bsf	(main@atuador),2
  2387  04D4  153C               	line	126
  2388                           	
  2389                           l1893:	
  2390  04D5                     ;main.c: 126:                     estado = 121;
  2391                           	movlw	079h
  2392  04D5  3079               	movwf	(main@estado)
  2393  04D6  00BF               	movlw	0
  2394  04D7  3000               	movwf	((main@estado))+1
  2395  04D8  00C0               	line	127
  2396                           ;main.c: 127:                     break;
  2397                           	goto	l1957
  2398  04D9  2E9F               	line	128
  2399                           ;main.c: 128:             case 121:
  2400                           	
  2401                           l191:	
  2402  04DA                     	line	129
  2403                           ;main.c: 129:                     if( sensor.C1 == 1)
  2404                           	btfss	(main@sensor),4
  2405  04DA  1E3D               	goto	u1051
  2406  04DB  2CDD               	goto	u1050
  2407  04DC  2CDE               u1051:
  2408  04DD                     	goto	l1957
  2409  04DD  2E9F               u1050:
  2410  04DE                     	line	130
  2411                           	
  2412                           l1895:	
  2413  04DE                     ;main.c: 130:                         estado = 10;
  2414                           	movlw	0Ah
  2415  04DE  300A               	movwf	(main@estado)
  2416  04DF  00BF               	movlw	0
  2417  04E0  3000               	movwf	((main@estado))+1
  2418  04E1  00C0               	goto	l1957
  2419  04E2  2E9F               	
  2420                           l192:	
  2421  04E3                     	line	131
  2422                           ;main.c: 131:                     break;
  2423                           	goto	l1957
  2424  04E3  2E9F               	line	132
  2425                           ;main.c: 132:             case 130:
  2426                           	
  2427                           l193:	
  2428  04E4                     	line	133
  2429                           ;main.c: 133:                     atuador.D = 1;
  2430                           	bsf	(main@atuador),3
  2431  04E4  15BC               	line	134
  2432                           	
  2433                           l1897:	
  2434  04E5                     ;main.c: 134:                     estado = 131;
  2435                           	movlw	083h
  2436  04E5  3083               	movwf	(main@estado)
  2437  04E6  00BF               	movlw	0
  2438  04E7  3000               	movwf	((main@estado))+1
  2439  04E8  00C0               	line	135
  2440                           ;main.c: 135:                     break;
  2441                           	goto	l1957
  2442  04E9  2E9F               	line	136
  2443                           ;main.c: 136:             case 131:
  2444                           	
  2445                           l194:	
  2446  04EA                     	line	137
  2447                           ;main.c: 137:                     if( sensor.D1 == 1)
  2448                           	btfss	(main@sensor),6
  2449  04EA  1F3D               	goto	u1061
  2450  04EB  2CED               	goto	u1060
  2451  04EC  2CEE               u1061:
  2452  04ED                     	goto	l1957
  2453  04ED  2E9F               u1060:
  2454  04EE                     	line	138
  2455                           	
  2456                           l1899:	
  2457  04EE                     ;main.c: 138:                         estado = 10;
  2458                           	movlw	0Ah
  2459  04EE  300A               	movwf	(main@estado)
  2460  04EF  00BF               	movlw	0
  2461  04F0  3000               	movwf	((main@estado))+1
  2462  04F1  00C0               	goto	l1957
  2463  04F2  2E9F               	
  2464                           l195:	
  2465  04F3                     	line	139
  2466                           ;main.c: 139:                     break;
  2467                           	goto	l1957
  2468  04F3  2E9F               	line	140
  2469                           ;main.c: 140:             case 140:
  2470                           	
  2471                           l196:	
  2472  04F4                     	line	141
  2473                           	
  2474                           l1901:	
  2475  04F4                     ;main.c: 141:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2476                           	opt asmopt_push
  2477                           opt asmopt_off
  2478                           movlw  6
  2479  04F4  3006               	bcf	status, 5	;RP0=0, select bank0
  2480  04F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2481  04F6  1303               movwf	((??_main+0)+0+2),f
  2482  04F7  00B7               movlw	19
  2483  04F8  3013               movwf	((??_main+0)+0+1),f
  2484  04F9  00B6               	movlw	173
  2485  04FA  30AD               movwf	((??_main+0)+0),f
  2486  04FB  00B5               	u1177:
  2487  04FC                     decfsz	((??_main+0)+0),f
  2488  04FC  0BB5               	goto	u1177
  2489  04FD  2CFC               	decfsz	((??_main+0)+0+1),f
  2490  04FE  0BB6               	goto	u1177
  2491  04FF  2CFC               	decfsz	((??_main+0)+0+2),f
  2492  0500  0BB7               	goto	u1177
  2493  0501  2CFC               opt asmopt_pop
  2494                           
  2495                           	line	142
  2496                           ;main.c: 142:                     estado = 141;
  2497                           	movlw	08Dh
  2498  0502  308D               	bcf	status, 5	;RP0=0, select bank0
  2499  0503  1283               	bcf	status, 6	;RP1=0, select bank0
  2500  0504  1303               	movwf	(main@estado)
  2501  0505  00BF               	movlw	0
  2502  0506  3000               	movwf	((main@estado))+1
  2503  0507  00C0               	line	143
  2504                           ;main.c: 143:                     break;
  2505                           	goto	l1957
  2506  0508  2E9F               	line	144
  2507                           ;main.c: 144:             case 141:
  2508                           	
  2509                           l197:	
  2510  0509                     	line	145
  2511                           	
  2512                           l1903:	
  2513  0509                     ;main.c: 145:                     estado = 10;
  2514                           	movlw	0Ah
  2515  0509  300A               	movwf	(main@estado)
  2516  050A  00BF               	movlw	0
  2517  050B  3000               	movwf	((main@estado))+1
  2518  050C  00C0               	line	146
  2519                           ;main.c: 146:                     break;
  2520                           	goto	l1957
  2521  050D  2E9F               	line	147
  2522                           ;main.c: 147:             case 150:
  2523                           	
  2524                           l198:	
  2525  050E                     	line	148
  2526                           	
  2527                           l1905:	
  2528  050E                     ;main.c: 148:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  2529                           	opt asmopt_push
  2530                           opt asmopt_off
  2531                           movlw  11
  2532  050E  300B               	bcf	status, 5	;RP0=0, select bank0
  2533  050F  1283               	bcf	status, 6	;RP1=0, select bank0
  2534  0510  1303               movwf	((??_main+0)+0+2),f
  2535  0511  00B7               movlw	38
  2536  0512  3026               movwf	((??_main+0)+0+1),f
  2537  0513  00B6               	movlw	93
  2538  0514  305D               movwf	((??_main+0)+0),f
  2539  0515  00B5               	u1187:
  2540  0516                     decfsz	((??_main+0)+0),f
  2541  0516  0BB5               	goto	u1187
  2542  0517  2D16               	decfsz	((??_main+0)+0+1),f
  2543  0518  0BB6               	goto	u1187
  2544  0519  2D16               	decfsz	((??_main+0)+0+2),f
  2545  051A  0BB7               	goto	u1187
  2546  051B  2D16               opt asmopt_pop
  2547                           
  2548                           	line	149
  2549                           ;main.c: 149:                     estado = 151;
  2550                           	movlw	097h
  2551  051C  3097               	bcf	status, 5	;RP0=0, select bank0
  2552  051D  1283               	bcf	status, 6	;RP1=0, select bank0
  2553  051E  1303               	movwf	(main@estado)
  2554  051F  00BF               	movlw	0
  2555  0520  3000               	movwf	((main@estado))+1
  2556  0521  00C0               	line	150
  2557                           ;main.c: 150:                     break;
  2558                           	goto	l1957
  2559  0522  2E9F               	line	151
  2560                           ;main.c: 151:             case 151:
  2561                           	
  2562                           l199:	
  2563  0523                     	line	152
  2564                           	
  2565                           l1907:	
  2566  0523                     ;main.c: 152:                     estado = 10;
  2567                           	movlw	0Ah
  2568  0523  300A               	movwf	(main@estado)
  2569  0524  00BF               	movlw	0
  2570  0525  3000               	movwf	((main@estado))+1
  2571  0526  00C0               	line	153
  2572                           ;main.c: 153:                     break;
  2573                           	goto	l1957
  2574  0527  2E9F               	line	154
  2575                           ;main.c: 154:             case 160:
  2576                           	
  2577                           l200:	
  2578  0528                     	line	155
  2579                           	
  2580                           l1909:	
  2581  0528                     ;main.c: 155:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  2582                           	opt asmopt_push
  2583                           opt asmopt_off
  2584                           movlw  16
  2585  0528  3010               	bcf	status, 5	;RP0=0, select bank0
  2586  0529  1283               	bcf	status, 6	;RP1=0, select bank0
  2587  052A  1303               movwf	((??_main+0)+0+2),f
  2588  052B  00B7               movlw	57
  2589  052C  3039               movwf	((??_main+0)+0+1),f
  2590  052D  00B6               	movlw	13
  2591  052E  300D               movwf	((??_main+0)+0),f
  2592  052F  00B5               	u1197:
  2593  0530                     decfsz	((??_main+0)+0),f
  2594  0530  0BB5               	goto	u1197
  2595  0531  2D30               	decfsz	((??_main+0)+0+1),f
  2596  0532  0BB6               	goto	u1197
  2597  0533  2D30               	decfsz	((??_main+0)+0+2),f
  2598  0534  0BB7               	goto	u1197
  2599  0535  2D30               opt asmopt_pop
  2600                           
  2601                           	line	156
  2602                           ;main.c: 156:                     estado = 161;
  2603                           	movlw	0A1h
  2604  0536  30A1               	bcf	status, 5	;RP0=0, select bank0
  2605  0537  1283               	bcf	status, 6	;RP1=0, select bank0
  2606  0538  1303               	movwf	(main@estado)
  2607  0539  00BF               	movlw	0
  2608  053A  3000               	movwf	((main@estado))+1
  2609  053B  00C0               	line	157
  2610                           ;main.c: 157:                     break;
  2611                           	goto	l1957
  2612  053C  2E9F               	line	158
  2613                           ;main.c: 158:             case 161:
  2614                           	
  2615                           l201:	
  2616  053D                     	line	159
  2617                           	
  2618                           l1911:	
  2619  053D                     ;main.c: 159:                     estado = 10;
  2620                           	movlw	0Ah
  2621  053D  300A               	movwf	(main@estado)
  2622  053E  00BF               	movlw	0
  2623  053F  3000               	movwf	((main@estado))+1
  2624  0540  00C0               	line	160
  2625                           ;main.c: 160:                     break;
  2626                           	goto	l1957
  2627  0541  2E9F               	line	161
  2628                           ;main.c: 161:             case 170:
  2629                           	
  2630                           l202:	
  2631  0542                     	line	162
  2632                           	
  2633                           l1913:	
  2634  0542                     ;main.c: 162:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
  2635                           	opt asmopt_push
  2636                           opt asmopt_off
  2637                           movlw  21
  2638  0542  3015               	bcf	status, 5	;RP0=0, select bank0
  2639  0543  1283               	bcf	status, 6	;RP1=0, select bank0
  2640  0544  1303               movwf	((??_main+0)+0+2),f
  2641  0545  00B7               movlw	75
  2642  0546  304B               movwf	((??_main+0)+0+1),f
  2643  0547  00B6               	movlw	189
  2644  0548  30BD               movwf	((??_main+0)+0),f
  2645  0549  00B5               	u1207:
  2646  054A                     decfsz	((??_main+0)+0),f
  2647  054A  0BB5               	goto	u1207
  2648  054B  2D4A               	decfsz	((??_main+0)+0+1),f
  2649  054C  0BB6               	goto	u1207
  2650  054D  2D4A               	decfsz	((??_main+0)+0+2),f
  2651  054E  0BB7               	goto	u1207
  2652  054F  2D4A               	nop2
  2653  0550  2D51               opt asmopt_pop
  2654                           
  2655                           	line	163
  2656                           ;main.c: 163:                     estado = 171;
  2657                           	movlw	0ABh
  2658  0551  30AB               	bcf	status, 5	;RP0=0, select bank0
  2659  0552  1283               	bcf	status, 6	;RP1=0, select bank0
  2660  0553  1303               	movwf	(main@estado)
  2661  0554  00BF               	movlw	0
  2662  0555  3000               	movwf	((main@estado))+1
  2663  0556  00C0               	line	164
  2664                           ;main.c: 164:                     break;
  2665                           	goto	l1957
  2666  0557  2E9F               	line	165
  2667                           ;main.c: 165:             case 171:
  2668                           	
  2669                           l203:	
  2670  0558                     	line	166
  2671                           	
  2672                           l1915:	
  2673  0558                     ;main.c: 166:                     estado = 10;
  2674                           	movlw	0Ah
  2675  0558  300A               	movwf	(main@estado)
  2676  0559  00BF               	movlw	0
  2677  055A  3000               	movwf	((main@estado))+1
  2678  055B  00C0               	line	167
  2679                           ;main.c: 167:                     break;
  2680                           	goto	l1957
  2681  055C  2E9F               	line	168
  2682                           ;main.c: 168:             case 180:
  2683                           	
  2684                           l204:	
  2685  055D                     	line	169
  2686                           	
  2687                           l1917:	
  2688  055D                     ;main.c: 169:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
  2689                           	opt asmopt_push
  2690                           opt asmopt_off
  2691                           movlw  26
  2692  055D  301A               	bcf	status, 5	;RP0=0, select bank0
  2693  055E  1283               	bcf	status, 6	;RP1=0, select bank0
  2694  055F  1303               movwf	((??_main+0)+0+2),f
  2695  0560  00B7               movlw	94
  2696  0561  305E               movwf	((??_main+0)+0+1),f
  2697  0562  00B6               	movlw	109
  2698  0563  306D               movwf	((??_main+0)+0),f
  2699  0564  00B5               	u1217:
  2700  0565                     decfsz	((??_main+0)+0),f
  2701  0565  0BB5               	goto	u1217
  2702  0566  2D65               	decfsz	((??_main+0)+0+1),f
  2703  0567  0BB6               	goto	u1217
  2704  0568  2D65               	decfsz	((??_main+0)+0+2),f
  2705  0569  0BB7               	goto	u1217
  2706  056A  2D65               	nop2
  2707  056B  2D6C               opt asmopt_pop
  2708                           
  2709                           	line	170
  2710                           ;main.c: 170:                     estado = 181;
  2711                           	movlw	0B5h
  2712  056C  30B5               	bcf	status, 5	;RP0=0, select bank0
  2713  056D  1283               	bcf	status, 6	;RP1=0, select bank0
  2714  056E  1303               	movwf	(main@estado)
  2715  056F  00BF               	movlw	0
  2716  0570  3000               	movwf	((main@estado))+1
  2717  0571  00C0               	line	171
  2718                           ;main.c: 171:                     break;
  2719                           	goto	l1957
  2720  0572  2E9F               	line	172
  2721                           ;main.c: 172:             case 181:
  2722                           	
  2723                           l205:	
  2724  0573                     	line	173
  2725                           	
  2726                           l1919:	
  2727  0573                     ;main.c: 173:                     estado = 10;
  2728                           	movlw	0Ah
  2729  0573  300A               	movwf	(main@estado)
  2730  0574  00BF               	movlw	0
  2731  0575  3000               	movwf	((main@estado))+1
  2732  0576  00C0               	line	174
  2733                           ;main.c: 174:                     break;
  2734                           	goto	l1957
  2735  0577  2E9F               	line	175
  2736                           ;main.c: 175:             case 190:
  2737                           	
  2738                           l206:	
  2739  0578                     	line	176
  2740                           	
  2741                           l1921:	
  2742  0578                     ;main.c: 176:                     _delay((unsigned long)((6000)*(4000000/4000.0)));
  2743                           	opt asmopt_push
  2744                           opt asmopt_off
  2745                           movlw  31
  2746  0578  301F               	bcf	status, 5	;RP0=0, select bank0
  2747  0579  1283               	bcf	status, 6	;RP1=0, select bank0
  2748  057A  1303               movwf	((??_main+0)+0+2),f
  2749  057B  00B7               movlw	113
  2750  057C  3071               movwf	((??_main+0)+0+1),f
  2751  057D  00B6               	movlw	29
  2752  057E  301D               movwf	((??_main+0)+0),f
  2753  057F  00B5               	u1227:
  2754  0580                     decfsz	((??_main+0)+0),f
  2755  0580  0BB5               	goto	u1227
  2756  0581  2D80               	decfsz	((??_main+0)+0+1),f
  2757  0582  0BB6               	goto	u1227
  2758  0583  2D80               	decfsz	((??_main+0)+0+2),f
  2759  0584  0BB7               	goto	u1227
  2760  0585  2D80               	nop2
  2761  0586  2D87               opt asmopt_pop
  2762                           
  2763                           	line	177
  2764                           ;main.c: 177:                     estado = 191;
  2765                           	movlw	0BFh
  2766  0587  30BF               	bcf	status, 5	;RP0=0, select bank0
  2767  0588  1283               	bcf	status, 6	;RP1=0, select bank0
  2768  0589  1303               	movwf	(main@estado)
  2769  058A  00BF               	movlw	0
  2770  058B  3000               	movwf	((main@estado))+1
  2771  058C  00C0               	line	178
  2772                           ;main.c: 178:                     break;
  2773                           	goto	l1957
  2774  058D  2E9F               	line	179
  2775                           ;main.c: 179:             case 191:
  2776                           	
  2777                           l207:	
  2778  058E                     	line	180
  2779                           	
  2780                           l1923:	
  2781  058E                     ;main.c: 180:                     estado = 10;
  2782                           	movlw	0Ah
  2783  058E  300A               	movwf	(main@estado)
  2784  058F  00BF               	movlw	0
  2785  0590  3000               	movwf	((main@estado))+1
  2786  0591  00C0               	line	181
  2787                           ;main.c: 181:                     break;
  2788                           	goto	l1957
  2789  0592  2E9F               	line	182
  2790                           ;main.c: 182:             case 200:
  2791                           	
  2792                           l208:	
  2793  0593                     	line	183
  2794                           	
  2795                           l1925:	
  2796  0593                     ;main.c: 183:                     _delay((unsigned long)((7000)*(4000000/4000.0)));
  2797                           	opt asmopt_push
  2798                           opt asmopt_off
  2799                           movlw  36
  2800  0593  3024               	bcf	status, 5	;RP0=0, select bank0
  2801  0594  1283               	bcf	status, 6	;RP1=0, select bank0
  2802  0595  1303               movwf	((??_main+0)+0+2),f
  2803  0596  00B7               movlw	131
  2804  0597  3083               movwf	((??_main+0)+0+1),f
  2805  0598  00B6               	movlw	206
  2806  0599  30CE               movwf	((??_main+0)+0),f
  2807  059A  00B5               	u1237:
  2808  059B                     decfsz	((??_main+0)+0),f
  2809  059B  0BB5               	goto	u1237
  2810  059C  2D9B               	decfsz	((??_main+0)+0+1),f
  2811  059D  0BB6               	goto	u1237
  2812  059E  2D9B               	decfsz	((??_main+0)+0+2),f
  2813  059F  0BB7               	goto	u1237
  2814  05A0  2D9B               	nop
  2815  05A1  0000               opt asmopt_pop
  2816                           
  2817                           	line	184
  2818                           ;main.c: 184:                     estado = 201;
  2819                           	movlw	0C9h
  2820  05A2  30C9               	bcf	status, 5	;RP0=0, select bank0
  2821  05A3  1283               	bcf	status, 6	;RP1=0, select bank0
  2822  05A4  1303               	movwf	(main@estado)
  2823  05A5  00BF               	movlw	0
  2824  05A6  3000               	movwf	((main@estado))+1
  2825  05A7  00C0               	line	185
  2826                           ;main.c: 185:                     break;
  2827                           	goto	l1957
  2828  05A8  2E9F               	line	186
  2829                           ;main.c: 186:             case 201:
  2830                           	
  2831                           l209:	
  2832  05A9                     	line	187
  2833                           	
  2834                           l1927:	
  2835  05A9                     ;main.c: 187:                     estado = 10;
  2836                           	movlw	0Ah
  2837  05A9  300A               	movwf	(main@estado)
  2838  05AA  00BF               	movlw	0
  2839  05AB  3000               	movwf	((main@estado))+1
  2840  05AC  00C0               	line	188
  2841                           ;main.c: 188:                     break;
  2842                           	goto	l1957
  2843  05AD  2E9F               	line	189
  2844                           ;main.c: 189:             case 210:
  2845                           	
  2846                           l210:	
  2847  05AE                     	line	190
  2848                           	
  2849                           l1929:	
  2850  05AE                     ;main.c: 190:                     _delay((unsigned long)((8000)*(4000000/4000.0)));
  2851                           	opt asmopt_push
  2852                           opt asmopt_off
  2853                           movlw  41
  2854  05AE  3029               	bcf	status, 5	;RP0=0, select bank0
  2855  05AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2856  05B0  1303               movwf	((??_main+0)+0+2),f
  2857  05B1  00B7               movlw	150
  2858  05B2  3096               movwf	((??_main+0)+0+1),f
  2859  05B3  00B6               	movlw	126
  2860  05B4  307E               movwf	((??_main+0)+0),f
  2861  05B5  00B5               	u1247:
  2862  05B6                     decfsz	((??_main+0)+0),f
  2863  05B6  0BB5               	goto	u1247
  2864  05B7  2DB6               	decfsz	((??_main+0)+0+1),f
  2865  05B8  0BB6               	goto	u1247
  2866  05B9  2DB6               	decfsz	((??_main+0)+0+2),f
  2867  05BA  0BB7               	goto	u1247
  2868  05BB  2DB6               	nop
  2869  05BC  0000               opt asmopt_pop
  2870                           
  2871                           	line	191
  2872                           ;main.c: 191:                     estado = 211;
  2873                           	movlw	0D3h
  2874  05BD  30D3               	bcf	status, 5	;RP0=0, select bank0
  2875  05BE  1283               	bcf	status, 6	;RP1=0, select bank0
  2876  05BF  1303               	movwf	(main@estado)
  2877  05C0  00BF               	movlw	0
  2878  05C1  3000               	movwf	((main@estado))+1
  2879  05C2  00C0               	line	192
  2880                           ;main.c: 192:                     break;
  2881                           	goto	l1957
  2882  05C3  2E9F               	line	193
  2883                           ;main.c: 193:             case 211:
  2884                           	
  2885                           l211:	
  2886  05C4                     	line	194
  2887                           	
  2888                           l1931:	
  2889  05C4                     ;main.c: 194:                     estado = 10;
  2890                           	movlw	0Ah
  2891  05C4  300A               	movwf	(main@estado)
  2892  05C5  00BF               	movlw	0
  2893  05C6  3000               	movwf	((main@estado))+1
  2894  05C7  00C0               	line	195
  2895                           ;main.c: 195:                     break;
  2896                           	goto	l1957
  2897  05C8  2E9F               	line	196
  2898                           ;main.c: 196:             case 220:
  2899                           	
  2900                           l212:	
  2901  05C9                     	line	197
  2902                           	
  2903                           l1933:	
  2904  05C9                     ;main.c: 197:                     _delay((unsigned long)((9000)*(4000000/4000.0)));
  2905                           	opt asmopt_push
  2906                           opt asmopt_off
  2907                           movlw  46
  2908  05C9  302E               	bcf	status, 5	;RP0=0, select bank0
  2909  05CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2910  05CB  1303               movwf	((??_main+0)+0+2),f
  2911  05CC  00B7               movlw	169
  2912  05CD  30A9               movwf	((??_main+0)+0+1),f
  2913  05CE  00B6               	movlw	46
  2914  05CF  302E               movwf	((??_main+0)+0),f
  2915  05D0  00B5               	u1257:
  2916  05D1                     decfsz	((??_main+0)+0),f
  2917  05D1  0BB5               	goto	u1257
  2918  05D2  2DD1               	decfsz	((??_main+0)+0+1),f
  2919  05D3  0BB6               	goto	u1257
  2920  05D4  2DD1               	decfsz	((??_main+0)+0+2),f
  2921  05D5  0BB7               	goto	u1257
  2922  05D6  2DD1               	nop
  2923  05D7  0000               opt asmopt_pop
  2924                           
  2925                           	line	198
  2926                           ;main.c: 198:                     estado = 221;
  2927                           	movlw	0DDh
  2928  05D8  30DD               	bcf	status, 5	;RP0=0, select bank0
  2929  05D9  1283               	bcf	status, 6	;RP1=0, select bank0
  2930  05DA  1303               	movwf	(main@estado)
  2931  05DB  00BF               	movlw	0
  2932  05DC  3000               	movwf	((main@estado))+1
  2933  05DD  00C0               	line	199
  2934                           ;main.c: 199:                     break;
  2935                           	goto	l1957
  2936  05DE  2E9F               	line	200
  2937                           ;main.c: 200:             case 221:
  2938                           	
  2939                           l213:	
  2940  05DF                     	line	201
  2941                           	
  2942                           l1935:	
  2943  05DF                     ;main.c: 201:                     estado = 10;
  2944                           	movlw	0Ah
  2945  05DF  300A               	movwf	(main@estado)
  2946  05E0  00BF               	movlw	0
  2947  05E1  3000               	movwf	((main@estado))+1
  2948  05E2  00C0               	line	202
  2949                           ;main.c: 202:                     break;
  2950                           	goto	l1957
  2951  05E3  2E9F               	line	204
  2952                           ;main.c: 204:             case 230:
  2953                           	
  2954                           l214:	
  2955  05E4                     	line	205
  2956                           ;main.c: 205:                     atuador.A = 0;
  2957                           	bcf	(main@atuador),0
  2958  05E4  103C               	line	206
  2959                           	
  2960                           l1937:	
  2961  05E5                     ;main.c: 206:                     estado = 231;
  2962                           	movlw	0E7h
  2963  05E5  30E7               	movwf	(main@estado)
  2964  05E6  00BF               	movlw	0
  2965  05E7  3000               	movwf	((main@estado))+1
  2966  05E8  00C0               	line	207
  2967                           ;main.c: 207:                     break;
  2968                           	goto	l1957
  2969  05E9  2E9F               	line	208
  2970                           ;main.c: 208:             case 231:
  2971                           	
  2972                           l215:	
  2973  05EA                     	line	209
  2974                           ;main.c: 209:                     if( sensor.A0 == 1)
  2975                           	btfss	(main@sensor),1
  2976  05EA  1CBD               	goto	u1071
  2977  05EB  2DED               	goto	u1070
  2978  05EC  2DEE               u1071:
  2979  05ED                     	goto	l1957
  2980  05ED  2E9F               u1070:
  2981  05EE                     	line	210
  2982                           	
  2983                           l1939:	
  2984  05EE                     ;main.c: 210:                         estado = 10;
  2985                           	movlw	0Ah
  2986  05EE  300A               	movwf	(main@estado)
  2987  05EF  00BF               	movlw	0
  2988  05F0  3000               	movwf	((main@estado))+1
  2989  05F1  00C0               	goto	l1957
  2990  05F2  2E9F               	
  2991                           l216:	
  2992  05F3                     	line	211
  2993                           ;main.c: 211:                     break;
  2994                           	goto	l1957
  2995  05F3  2E9F               	line	212
  2996                           ;main.c: 212:             case 240:
  2997                           	
  2998                           l217:	
  2999  05F4                     	line	213
  3000                           ;main.c: 213:                     atuador.B = 0;
  3001                           	bcf	(main@atuador),1
  3002  05F4  10BC               	line	214
  3003                           	
  3004                           l1941:	
  3005  05F5                     ;main.c: 214:                     estado = 241;
  3006                           	movlw	0F1h
  3007  05F5  30F1               	movwf	(main@estado)
  3008  05F6  00BF               	movlw	0
  3009  05F7  3000               	movwf	((main@estado))+1
  3010  05F8  00C0               	line	215
  3011                           ;main.c: 215:                     break;
  3012                           	goto	l1957
  3013  05F9  2E9F               	line	216
  3014                           ;main.c: 216:             case 241:
  3015                           	
  3016                           l218:	
  3017  05FA                     	line	217
  3018                           ;main.c: 217:                     if( sensor.B0 == 1)
  3019                           	btfss	(main@sensor),3
  3020  05FA  1DBD               	goto	u1081
  3021  05FB  2DFD               	goto	u1080
  3022  05FC  2DFE               u1081:
  3023  05FD                     	goto	l1957
  3024  05FD  2E9F               u1080:
  3025  05FE                     	line	218
  3026                           	
  3027                           l1943:	
  3028  05FE                     ;main.c: 218:                         estado = 10;
  3029                           	movlw	0Ah
  3030  05FE  300A               	movwf	(main@estado)
  3031  05FF  00BF               	movlw	0
  3032  0600  3000               	movwf	((main@estado))+1
  3033  0601  00C0               	goto	l1957
  3034  0602  2E9F               	
  3035                           l219:	
  3036  0603                     	line	219
  3037                           ;main.c: 219:                     break;
  3038                           	goto	l1957
  3039  0603  2E9F               	line	220
  3040                           ;main.c: 220:             case 250:
  3041                           	
  3042                           l220:	
  3043  0604                     	line	221
  3044                           ;main.c: 221:                     atuador.C = 0;
  3045                           	bcf	(main@atuador),2
  3046  0604  113C               	line	222
  3047                           	
  3048                           l1945:	
  3049  0605                     ;main.c: 222:                     estado = 251;
  3050                           	movlw	0FBh
  3051  0605  30FB               	movwf	(main@estado)
  3052  0606  00BF               	movlw	0
  3053  0607  3000               	movwf	((main@estado))+1
  3054  0608  00C0               	line	223
  3055                           ;main.c: 223:                     break;
  3056                           	goto	l1957
  3057  0609  2E9F               	line	224
  3058                           ;main.c: 224:             case 251:
  3059                           	
  3060                           l221:	
  3061  060A                     	line	225
  3062                           ;main.c: 225:                     if( sensor.C0 == 1)
  3063                           	btfss	(main@sensor),5
  3064  060A  1EBD               	goto	u1091
  3065  060B  2E0D               	goto	u1090
  3066  060C  2E0E               u1091:
  3067  060D                     	goto	l1957
  3068  060D  2E9F               u1090:
  3069  060E                     	line	226
  3070                           	
  3071                           l1947:	
  3072  060E                     ;main.c: 226:                         estado = 10;
  3073                           	movlw	0Ah
  3074  060E  300A               	movwf	(main@estado)
  3075  060F  00BF               	movlw	0
  3076  0610  3000               	movwf	((main@estado))+1
  3077  0611  00C0               	goto	l1957
  3078  0612  2E9F               	
  3079                           l222:	
  3080  0613                     	line	227
  3081                           ;main.c: 227:                     break;
  3082                           	goto	l1957
  3083  0613  2E9F               	line	228
  3084                           ;main.c: 228:             case 260:
  3085                           	
  3086                           l223:	
  3087  0614                     	line	229
  3088                           ;main.c: 229:                     atuador.D = 0;
  3089                           	bcf	(main@atuador),3
  3090  0614  11BC               	line	230
  3091                           	
  3092                           l1949:	
  3093  0615                     ;main.c: 230:                     estado = 261;
  3094                           	movlw	05h
  3095  0615  3005               	movwf	(main@estado)
  3096  0616  00BF               	movlw	01h
  3097  0617  3001               	movwf	((main@estado))+1
  3098  0618  00C0               	line	231
  3099                           ;main.c: 231:                     break;
  3100                           	goto	l1957
  3101  0619  2E9F               	line	232
  3102                           ;main.c: 232:             case 261:
  3103                           	
  3104                           l224:	
  3105  061A                     	line	233
  3106                           ;main.c: 233:                     if( sensor.D0 == 1)
  3107                           	btfss	(main@sensor),7
  3108  061A  1FBD               	goto	u1101
  3109  061B  2E1D               	goto	u1100
  3110  061C  2E1E               u1101:
  3111  061D                     	goto	l1957
  3112  061D  2E9F               u1100:
  3113  061E                     	line	234
  3114                           	
  3115                           l1951:	
  3116  061E                     ;main.c: 234:                         estado = 10;
  3117                           	movlw	0Ah
  3118  061E  300A               	movwf	(main@estado)
  3119  061F  00BF               	movlw	0
  3120  0620  3000               	movwf	((main@estado))+1
  3121  0621  00C0               	goto	l1957
  3122  0622  2E9F               	
  3123                           l225:	
  3124  0623                     	line	235
  3125                           ;main.c: 235:                     break;
  3126                           	goto	l1957
  3127  0623  2E9F               	line	237
  3128                           	
  3129                           l1953:	
  3130  0624                     ;main.c: 237:         }
  3131                           	goto	l1957
  3132  0624  2E9F               	
  3133                           l147:	
  3134  0625                     	
  3135                           l1955:	
  3136  0625                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  3137                           ; Switch size 1, requested type "space"
  3138                           ; Number of cases is 2, Range of values is 0 to 1
  3139                           ; switch strategies available:
  3140                           ; Name         Instructions Cycles
  3141                           ; simple_byte            7     4 (average)
  3142                           ; direct_byte           14     8 (fixed)
  3143                           ; jumptable            260     6 (fixed)
  3144                           ;	Chosen strategy is simple_byte
  3145                           
  3146                           	bcf	status, 5	;RP0=0, select bank0
  3147  0625  1283               	bcf	status, 6	;RP1=0, select bank0
  3148  0626  1303               	movf (main@estado+1),w
  3149  0627  0840               	opt asmopt_push
  3150                           	opt asmopt_off
  3151                           	xorlw	0^0	; case 0
  3152  0628  3A00               	skipnz
  3153  0629  1903               	goto	l2169
  3154  062A  2E2F               	xorlw	1^0	; case 1
  3155  062B  3A01               	skipnz
  3156  062C  1903               	goto	l2171
  3157  062D  2E97               	goto	l1957
  3158  062E  2E9F               	opt asmopt_pop
  3159                           	
  3160                           l2169:	
  3161  062F                     ; Switch size 1, requested type "space"
  3162                           ; Number of cases is 34, Range of values is 0 to 251
  3163                           ; switch strategies available:
  3164                           ; Name         Instructions Cycles
  3165                           ; simple_byte          103    52 (average)
  3166                           ; jumptable            260     6 (fixed)
  3167                           ;	Chosen strategy is simple_byte
  3168                           
  3169                           	movf (main@estado),w
  3170  062F  083F               	opt asmopt_push
  3171                           	opt asmopt_off
  3172                           	xorlw	0^0	; case 0
  3173  0630  3A00               	skipnz
  3174  0631  1903               	goto	l1957
  3175  0632  2E9F               	xorlw	10^0	; case 10
  3176  0633  3A0A               	skipnz
  3177  0634  1903               	goto	l1815
  3178  0635  2BDE               	xorlw	100^10	; case 100
  3179  0636  3A6E               	skipnz
  3180  0637  1903               	goto	l184
  3181  0638  2CB4               	xorlw	101^100	; case 101
  3182  0639  3A01               	skipnz
  3183  063A  1903               	goto	l185
  3184  063B  2CBA               	xorlw	110^101	; case 110
  3185  063C  3A0B               	skipnz
  3186  063D  1903               	goto	l187
  3187  063E  2CC4               	xorlw	111^110	; case 111
  3188  063F  3A01               	skipnz
  3189  0640  1903               	goto	l188
  3190  0641  2CCA               	xorlw	120^111	; case 120
  3191  0642  3A17               	skipnz
  3192  0643  1903               	goto	l190
  3193  0644  2CD4               	xorlw	121^120	; case 121
  3194  0645  3A01               	skipnz
  3195  0646  1903               	goto	l191
  3196  0647  2CDA               	xorlw	130^121	; case 130
  3197  0648  3AFB               	skipnz
  3198  0649  1903               	goto	l193
  3199  064A  2CE4               	xorlw	131^130	; case 131
  3200  064B  3A01               	skipnz
  3201  064C  1903               	goto	l194
  3202  064D  2CEA               	xorlw	140^131	; case 140
  3203  064E  3A0F               	skipnz
  3204  064F  1903               	goto	l1901
  3205  0650  2CF4               	xorlw	141^140	; case 141
  3206  0651  3A01               	skipnz
  3207  0652  1903               	goto	l1903
  3208  0653  2D09               	xorlw	150^141	; case 150
  3209  0654  3A1B               	skipnz
  3210  0655  1903               	goto	l1905
  3211  0656  2D0E               	xorlw	151^150	; case 151
  3212  0657  3A01               	skipnz
  3213  0658  1903               	goto	l1907
  3214  0659  2D23               	xorlw	160^151	; case 160
  3215  065A  3A37               	skipnz
  3216  065B  1903               	goto	l1909
  3217  065C  2D28               	xorlw	161^160	; case 161
  3218  065D  3A01               	skipnz
  3219  065E  1903               	goto	l1911
  3220  065F  2D3D               	xorlw	170^161	; case 170
  3221  0660  3A0B               	skipnz
  3222  0661  1903               	goto	l1913
  3223  0662  2D42               	xorlw	171^170	; case 171
  3224  0663  3A01               	skipnz
  3225  0664  1903               	goto	l1915
  3226  0665  2D58               	xorlw	180^171	; case 180
  3227  0666  3A1F               	skipnz
  3228  0667  1903               	goto	l1917
  3229  0668  2D5D               	xorlw	181^180	; case 181
  3230  0669  3A01               	skipnz
  3231  066A  1903               	goto	l1919
  3232  066B  2D73               	xorlw	190^181	; case 190
  3233  066C  3A0B               	skipnz
  3234  066D  1903               	goto	l1921
  3235  066E  2D78               	xorlw	191^190	; case 191
  3236  066F  3A01               	skipnz
  3237  0670  1903               	goto	l1923
  3238  0671  2D8E               	xorlw	200^191	; case 200
  3239  0672  3A77               	skipnz
  3240  0673  1903               	goto	l1925
  3241  0674  2D93               	xorlw	201^200	; case 201
  3242  0675  3A01               	skipnz
  3243  0676  1903               	goto	l1927
  3244  0677  2DA9               	xorlw	210^201	; case 210
  3245  0678  3A1B               	skipnz
  3246  0679  1903               	goto	l1929
  3247  067A  2DAE               	xorlw	211^210	; case 211
  3248  067B  3A01               	skipnz
  3249  067C  1903               	goto	l1931
  3250  067D  2DC4               	xorlw	220^211	; case 220
  3251  067E  3A0F               	skipnz
  3252  067F  1903               	goto	l1933
  3253  0680  2DC9               	xorlw	221^220	; case 221
  3254  0681  3A01               	skipnz
  3255  0682  1903               	goto	l1935
  3256  0683  2DDF               	xorlw	230^221	; case 230
  3257  0684  3A3B               	skipnz
  3258  0685  1903               	goto	l214
  3259  0686  2DE4               	xorlw	231^230	; case 231
  3260  0687  3A01               	skipnz
  3261  0688  1903               	goto	l215
  3262  0689  2DEA               	xorlw	240^231	; case 240
  3263  068A  3A17               	skipnz
  3264  068B  1903               	goto	l217
  3265  068C  2DF4               	xorlw	241^240	; case 241
  3266  068D  3A01               	skipnz
  3267  068E  1903               	goto	l218
  3268  068F  2DFA               	xorlw	250^241	; case 250
  3269  0690  3A0B               	skipnz
  3270  0691  1903               	goto	l220
  3271  0692  2E04               	xorlw	251^250	; case 251
  3272  0693  3A01               	skipnz
  3273  0694  1903               	goto	l221
  3274  0695  2E0A               	goto	l1957
  3275  0696  2E9F               	opt asmopt_pop
  3276                           	
  3277                           l2171:	
  3278  0697                     ; Switch size 1, requested type "space"
  3279                           ; Number of cases is 2, Range of values is 4 to 5
  3280                           ; switch strategies available:
  3281                           ; Name         Instructions Cycles
  3282                           ; simple_byte            7     4 (average)
  3283                           ; direct_byte           17    11 (fixed)
  3284                           ; jumptable            263     9 (fixed)
  3285                           ;	Chosen strategy is simple_byte
  3286                           
  3287                           	movf (main@estado),w
  3288  0697  083F               	opt asmopt_push
  3289                           	opt asmopt_off
  3290                           	xorlw	4^0	; case 4
  3291  0698  3A04               	skipnz
  3292  0699  1903               	goto	l223
  3293  069A  2E14               	xorlw	5^4	; case 5
  3294  069B  3A01               	skipnz
  3295  069C  1903               	goto	l224
  3296  069D  2E1A               	goto	l1957
  3297  069E  2E9F               	opt asmopt_pop
  3298                           
  3299                           	
  3300                           l149:	
  3301  069F                     	line	238
  3302                           	
  3303                           l1957:	
  3304  069F                     ;main.c: 238:         if( currentKey() && !previousKey() )
  3305                           	fcall	_currentKey
  3306  069F  120A  118A  20BB  120A  118A  	xorlw	0
  3307  06A4  3A00               	skipnz
  3308  06A5  1903               	goto	u1111
  3309  06A6  2EA8               	goto	u1110
  3310  06A7  2EA9               u1111:
  3311  06A8                     	goto	l226
  3312  06A8  2FE7               u1110:
  3313  06A9                     	
  3314                           l1959:	
  3315  06A9                     	fcall	_previousKey
  3316  06A9  120A  118A  20C0  120A  118A  	xorlw	0
  3317  06AE  3A00               	skipz
  3318  06AF  1D03               	goto	u1121
  3319  06B0  2EB2               	goto	u1120
  3320  06B1  2EB3               u1121:
  3321  06B2                     	goto	l226
  3322  06B2  2FE7               u1120:
  3323  06B3                     	line	240
  3324                           	
  3325                           l1961:	
  3326  06B3                     ;main.c: 239:         {;main.c: 240:             tecla = currentKey();
  3327                           	fcall	_currentKey
  3328  06B3  120A  118A  20BB  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3329  06B8  1283               	bcf	status, 6	;RP1=0, select bank0
  3330  06B9  1303               	movwf	(??_main+0)+0
  3331  06BA  00B5               	movf	(??_main+0)+0,w
  3332  06BB  0835               	movwf	(main@tecla)
  3333  06BC  00BE               	line	241
  3334                           ;main.c: 241:             switch(tecla)
  3335                           	goto	l2021
  3336  06BD  2F9C               	line	243
  3337                           ;main.c: 242:             {;main.c: 243:                 case 'A':
  3338                           	
  3339                           l228:	
  3340  06BE                     	line	244
  3341                           	
  3342                           l1963:	
  3343  06BE                     ;main.c: 244:                         ++a;
  3344                           	movlw	low(01h)
  3345  06BE  3001               	movwf	(??_main+0)+0
  3346  06BF  00B5               	movf	(??_main+0)+0,w
  3347  06C0  0835               	addwf	(main@a),f
  3348  06C1  07B8               	line	245
  3349                           	
  3350                           l1965:	
  3351  06C2                     ;main.c: 245:                         if( a % 2 )
  3352                           	btfss	(main@a),(0)&7
  3353  06C2  1C38               	goto	u1131
  3354  06C3  2EC5               	goto	u1130
  3355  06C4  2EC6               u1131:
  3356  06C5                     	goto	l1969
  3357  06C5  2ECD               u1130:
  3358  06C6                     	line	246
  3359                           	
  3360                           l1967:	
  3361  06C6                     ;main.c: 246:                             putFIFO( tecla );
  3362                           	movf	(main@tecla),w
  3363  06C6  083E               	fcall	_putFIFO
  3364  06C7  120A  118A  20D9  120A  118A  	goto	l2023
  3365  06CC  2FD6               	line	247
  3366                           ;main.c: 247:                         else
  3367                           	
  3368                           l229:	
  3369  06CD                     	line	248
  3370                           	
  3371                           l1969:	
  3372  06CD                     ;main.c: 248:                             putFIFO( tecla | 0x20 );
  3373                           	bcf	status, 5	;RP0=0, select bank0
  3374  06CD  1283               	bcf	status, 6	;RP1=0, select bank0
  3375  06CE  1303               	movf	(main@tecla),w
  3376  06CF  083E               	iorlw	020h
  3377  06D0  3820               	fcall	_putFIFO
  3378  06D1  120A  118A  20D9  120A  118A  	goto	l2023
  3379  06D6  2FD6               	
  3380                           l230:	
  3381  06D7                     	line	249
  3382                           ;main.c: 249:                         break;
  3383                           	goto	l2023
  3384  06D7  2FD6               	line	250
  3385                           ;main.c: 250:                 case 'B':
  3386                           	
  3387                           l232:	
  3388  06D8                     	line	251
  3389                           	
  3390                           l1971:	
  3391  06D8                     ;main.c: 251:                         ++b;
  3392                           	movlw	low(01h)
  3393  06D8  3001               	bcf	status, 5	;RP0=0, select bank0
  3394  06D9  1283               	bcf	status, 6	;RP1=0, select bank0
  3395  06DA  1303               	movwf	(??_main+0)+0
  3396  06DB  00B5               	movf	(??_main+0)+0,w
  3397  06DC  0835               	addwf	(main@b),f
  3398  06DD  07B9               	line	252
  3399                           	
  3400                           l1973:	
  3401  06DE                     ;main.c: 252:                         if( b % 2 )
  3402                           	btfss	(main@b),(0)&7
  3403  06DE  1C39               	goto	u1141
  3404  06DF  2EE1               	goto	u1140
  3405  06E0  2EE2               u1141:
  3406  06E1                     	goto	l1977
  3407  06E1  2EE9               u1140:
  3408  06E2                     	line	253
  3409                           	
  3410                           l1975:	
  3411  06E2                     ;main.c: 253:                             putFIFO( tecla );
  3412                           	movf	(main@tecla),w
  3413  06E2  083E               	fcall	_putFIFO
  3414  06E3  120A  118A  20D9  120A  118A  	goto	l2023
  3415  06E8  2FD6               	line	254
  3416                           ;main.c: 254:                         else
  3417                           	
  3418                           l233:	
  3419  06E9                     	line	255
  3420                           	
  3421                           l1977:	
  3422  06E9                     ;main.c: 255:                             putFIFO( tecla | 0x20 );
  3423                           	bcf	status, 5	;RP0=0, select bank0
  3424  06E9  1283               	bcf	status, 6	;RP1=0, select bank0
  3425  06EA  1303               	movf	(main@tecla),w
  3426  06EB  083E               	iorlw	020h
  3427  06EC  3820               	fcall	_putFIFO
  3428  06ED  120A  118A  20D9  120A  118A  	goto	l2023
  3429  06F2  2FD6               	
  3430                           l234:	
  3431  06F3                     	line	256
  3432                           ;main.c: 256:                         break;
  3433                           	goto	l2023
  3434  06F3  2FD6               	line	257
  3435                           ;main.c: 257:                 case 'C':
  3436                           	
  3437                           l235:	
  3438  06F4                     	line	258
  3439                           	
  3440                           l1979:	
  3441  06F4                     ;main.c: 258:                         ++c;
  3442                           	movlw	low(01h)
  3443  06F4  3001               	bcf	status, 5	;RP0=0, select bank0
  3444  06F5  1283               	bcf	status, 6	;RP1=0, select bank0
  3445  06F6  1303               	movwf	(??_main+0)+0
  3446  06F7  00B5               	movf	(??_main+0)+0,w
  3447  06F8  0835               	addwf	(main@c),f
  3448  06F9  07BA               	line	259
  3449                           	
  3450                           l1981:	
  3451  06FA                     ;main.c: 259:                         if( c % 2 )
  3452                           	btfss	(main@c),(0)&7
  3453  06FA  1C3A               	goto	u1151
  3454  06FB  2EFD               	goto	u1150
  3455  06FC  2EFE               u1151:
  3456  06FD                     	goto	l1985
  3457  06FD  2F05               u1150:
  3458  06FE                     	line	260
  3459                           	
  3460                           l1983:	
  3461  06FE                     ;main.c: 260:                             putFIFO( tecla );
  3462                           	movf	(main@tecla),w
  3463  06FE  083E               	fcall	_putFIFO
  3464  06FF  120A  118A  20D9  120A  118A  	goto	l2023
  3465  0704  2FD6               	line	261
  3466                           ;main.c: 261:                         else
  3467                           	
  3468                           l236:	
  3469  0705                     	line	262
  3470                           	
  3471                           l1985:	
  3472  0705                     ;main.c: 262:                             putFIFO( tecla | 0x20 );
  3473                           	bcf	status, 5	;RP0=0, select bank0
  3474  0705  1283               	bcf	status, 6	;RP1=0, select bank0
  3475  0706  1303               	movf	(main@tecla),w
  3476  0707  083E               	iorlw	020h
  3477  0708  3820               	fcall	_putFIFO
  3478  0709  120A  118A  20D9  120A  118A  	goto	l2023
  3479  070E  2FD6               	
  3480                           l237:	
  3481  070F                     	line	263
  3482                           ;main.c: 263:                         break;
  3483                           	goto	l2023
  3484  070F  2FD6               	line	264
  3485                           ;main.c: 264:                 case 'D':
  3486                           	
  3487                           l238:	
  3488  0710                     	line	265
  3489                           	
  3490                           l1987:	
  3491  0710                     ;main.c: 265:                         ++d;
  3492                           	movlw	low(01h)
  3493  0710  3001               	bcf	status, 5	;RP0=0, select bank0
  3494  0711  1283               	bcf	status, 6	;RP1=0, select bank0
  3495  0712  1303               	movwf	(??_main+0)+0
  3496  0713  00B5               	movf	(??_main+0)+0,w
  3497  0714  0835               	addwf	(main@d),f
  3498  0715  07BB               	line	266
  3499                           	
  3500                           l1989:	
  3501  0716                     ;main.c: 266:                         if( d % 2 )
  3502                           	btfss	(main@d),(0)&7
  3503  0716  1C3B               	goto	u1161
  3504  0717  2F19               	goto	u1160
  3505  0718  2F1A               u1161:
  3506  0719                     	goto	l1993
  3507  0719  2F21               u1160:
  3508  071A                     	line	267
  3509                           	
  3510                           l1991:	
  3511  071A                     ;main.c: 267:                             putFIFO( tecla );
  3512                           	movf	(main@tecla),w
  3513  071A  083E               	fcall	_putFIFO
  3514  071B  120A  118A  20D9  120A  118A  	goto	l2023
  3515  0720  2FD6               	line	268
  3516                           ;main.c: 268:                         else
  3517                           	
  3518                           l239:	
  3519  0721                     	line	269
  3520                           	
  3521                           l1993:	
  3522  0721                     ;main.c: 269:                             putFIFO( tecla | 0x20 );
  3523                           	bcf	status, 5	;RP0=0, select bank0
  3524  0721  1283               	bcf	status, 6	;RP1=0, select bank0
  3525  0722  1303               	movf	(main@tecla),w
  3526  0723  083E               	iorlw	020h
  3527  0724  3820               	fcall	_putFIFO
  3528  0725  120A  118A  20D9  120A  118A  	goto	l2023
  3529  072A  2FD6               	
  3530                           l240:	
  3531  072B                     	line	270
  3532                           ;main.c: 270:                         break;
  3533                           	goto	l2023
  3534  072B  2FD6               	line	271
  3535                           ;main.c: 271:                 case '0':
  3536                           	
  3537                           l241:	
  3538  072C                     	line	272
  3539                           	
  3540                           l1995:	
  3541  072C                     ;main.c: 272:                         delFIFO(16);
  3542                           	movlw	low(010h)
  3543  072C  3010               	fcall	_delFIFO
  3544  072D  120A  118A  2124  120A  118A  	line	273
  3545                           	
  3546                           l1997:	
  3547  0732                     ;main.c: 273:                         clearLCD();
  3548                           	fcall	_clearLCD
  3549  0732  120A  118A  20CA  120A  118A  	line	274
  3550                           	
  3551                           l1999:	
  3552  0737                     ;main.c: 274:                         a = b = c = d = 0;
  3553                           	bcf	status, 5	;RP0=0, select bank0
  3554  0737  1283               	bcf	status, 6	;RP1=0, select bank0
  3555  0738  1303               	clrf	(main@d)
  3556  0739  01BB               	clrf	(main@c)
  3557  073A  01BA               	clrf	(main@b)
  3558  073B  01B9               	clrf	(main@a)
  3559  073C  01B8               	line	275
  3560                           ;main.c: 275:                         break;
  3561                           	goto	l2023
  3562  073D  2FD6               	line	276
  3563                           ;main.c: 276:                 case '1':
  3564                           	
  3565                           l242:	
  3566  073E                     	goto	l2001
  3567  073E  2F46               	line	277
  3568                           ;main.c: 277:                 case '2':
  3569                           	
  3570                           l243:	
  3571  073F                     	goto	l2001
  3572  073F  2F46               	line	278
  3573                           ;main.c: 278:                 case '3':
  3574                           	
  3575                           l244:	
  3576  0740                     	goto	l2001
  3577  0740  2F46               	line	279
  3578                           ;main.c: 279:                 case '4':
  3579                           	
  3580                           l245:	
  3581  0741                     	goto	l2001
  3582  0741  2F46               	line	280
  3583                           ;main.c: 280:                 case '5':
  3584                           	
  3585                           l246:	
  3586  0742                     	goto	l2001
  3587  0742  2F46               	line	281
  3588                           ;main.c: 281:                 case '6':
  3589                           	
  3590                           l247:	
  3591  0743                     	goto	l2001
  3592  0743  2F46               	line	282
  3593                           ;main.c: 282:                 case '7':
  3594                           	
  3595                           l248:	
  3596  0744                     	goto	l2001
  3597  0744  2F46               	line	283
  3598                           ;main.c: 283:                 case '8':
  3599                           	
  3600                           l249:	
  3601  0745                     	goto	l2001
  3602  0745  2F46               	line	284
  3603                           ;main.c: 284:                 case '9':
  3604                           	
  3605                           l250:	
  3606  0746                     	line	285
  3607                           	
  3608                           l2001:	
  3609  0746                     ;main.c: 285:                         putFIFO(tecla);
  3610                           	movf	(main@tecla),w
  3611  0746  083E               	fcall	_putFIFO
  3612  0747  120A  118A  20D9  120A  118A  	line	286
  3613                           ;main.c: 286:                         break;
  3614                           	goto	l2023
  3615  074C  2FD6               	line	287
  3616                           ;main.c: 287:                 case '*':
  3617                           	
  3618                           l251:	
  3619  074D                     	line	288
  3620                           ;main.c: 288:                         switch( delFIFO(1) )
  3621                           	goto	l2013
  3622  074D  2F65               	line	290
  3623                           ;main.c: 289:                         {;main.c: 290:                             case 'A
                                 ': a = 0; break;
  3624                           	
  3625                           l253:	
  3626  074E                     	
  3627                           l2003:	
  3628  074E                     	bcf	status, 5	;RP0=0, select bank0
  3629  074E  1283               	bcf	status, 6	;RP1=0, select bank0
  3630  074F  1303               	clrf	(main@a)
  3631  0750  01B8               	goto	l2015
  3632  0751  2F8E               	line	291
  3633                           ;main.c: 291:                             case 'a': a = 1; break;
  3634                           	
  3635                           l255:	
  3636  0752                     	clrf	(main@a)
  3637  0752  01B8               	incf	(main@a),f
  3638  0753  0AB8               	goto	l2015
  3639  0754  2F8E               	line	292
  3640                           ;main.c: 292:                             case 'B': b = 0; break;
  3641                           	
  3642                           l256:	
  3643  0755                     	
  3644                           l2005:	
  3645  0755                     	clrf	(main@b)
  3646  0755  01B9               	goto	l2015
  3647  0756  2F8E               	line	293
  3648                           ;main.c: 293:                             case 'b': b = 1; break;
  3649                           	
  3650                           l257:	
  3651  0757                     	clrf	(main@b)
  3652  0757  01B9               	incf	(main@b),f
  3653  0758  0AB9               	goto	l2015
  3654  0759  2F8E               	line	294
  3655                           ;main.c: 294:                             case 'C': c = 0; break;
  3656                           	
  3657                           l258:	
  3658  075A                     	
  3659                           l2007:	
  3660  075A                     	clrf	(main@c)
  3661  075A  01BA               	goto	l2015
  3662  075B  2F8E               	line	295
  3663                           ;main.c: 295:                             case 'c': c = 1; break;
  3664                           	
  3665                           l259:	
  3666  075C                     	clrf	(main@c)
  3667  075C  01BA               	incf	(main@c),f
  3668  075D  0ABA               	goto	l2015
  3669  075E  2F8E               	line	296
  3670                           ;main.c: 296:                             case 'D': d = 0; break;
  3671                           	
  3672                           l260:	
  3673  075F                     	
  3674                           l2009:	
  3675  075F                     	clrf	(main@d)
  3676  075F  01BB               	goto	l2015
  3677  0760  2F8E               	line	297
  3678                           ;main.c: 297:                             case 'd': d = 1; break;
  3679                           	
  3680                           l261:	
  3681  0761                     	clrf	(main@d)
  3682  0761  01BB               	incf	(main@d),f
  3683  0762  0ABB               	goto	l2015
  3684  0763  2F8E               	line	298
  3685                           	
  3686                           l2011:	
  3687  0764                     ;main.c: 298:                         }
  3688                           	goto	l2015
  3689  0764  2F8E               	
  3690                           l252:	
  3691  0765                     	
  3692                           l2013:	
  3693  0765                     	movlw	low(01h)
  3694  0765  3001               	fcall	_delFIFO
  3695  0766  120A  118A  2124  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3696  076B  1283               	bcf	status, 6	;RP1=0, select bank0
  3697  076C  1303               	movwf	(??_main+0)+0
  3698  076D  00B5               	clrf	(??_main+0)+0+1
  3699  076E  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3700                           ; Switch size 1, requested type "space"
  3701                           ; Number of cases is 1, Range of values is 0 to 0
  3702                           ; switch strategies available:
  3703                           ; Name         Instructions Cycles
  3704                           ; simple_byte            4     3 (average)
  3705                           ; direct_byte           11     8 (fixed)
  3706                           ; jumptable            260     6 (fixed)
  3707                           ;	Chosen strategy is simple_byte
  3708                           
  3709                           	movf 1+(??_main+0)+0,w
  3710  076F  0836               	opt asmopt_push
  3711                           	opt asmopt_off
  3712                           	xorlw	0^0	; case 0
  3713  0770  3A00               	skipnz
  3714  0771  1903               	goto	l2173
  3715  0772  2F74               	goto	l2015
  3716  0773  2F8E               	opt asmopt_pop
  3717                           	
  3718                           l2173:	
  3719  0774                     ; Switch size 1, requested type "space"
  3720                           ; Number of cases is 8, Range of values is 65 to 100
  3721                           ; switch strategies available:
  3722                           ; Name         Instructions Cycles
  3723                           ; simple_byte           25    13 (average)
  3724                           ; direct_byte          119    11 (fixed)
  3725                           ; jumptable            263     9 (fixed)
  3726                           ;	Chosen strategy is simple_byte
  3727                           
  3728                           	movf 0+(??_main+0)+0,w
  3729  0774  0835               	opt asmopt_push
  3730                           	opt asmopt_off
  3731                           	xorlw	65^0	; case 65
  3732  0775  3A41               	skipnz
  3733  0776  1903               	goto	l2003
  3734  0777  2F4E               	xorlw	66^65	; case 66
  3735  0778  3A03               	skipnz
  3736  0779  1903               	goto	l2005
  3737  077A  2F55               	xorlw	67^66	; case 67
  3738  077B  3A01               	skipnz
  3739  077C  1903               	goto	l2007
  3740  077D  2F5A               	xorlw	68^67	; case 68
  3741  077E  3A07               	skipnz
  3742  077F  1903               	goto	l2009
  3743  0780  2F5F               	xorlw	97^68	; case 97
  3744  0781  3A25               	skipnz
  3745  0782  1903               	goto	l255
  3746  0783  2F52               	xorlw	98^97	; case 98
  3747  0784  3A03               	skipnz
  3748  0785  1903               	goto	l257
  3749  0786  2F57               	xorlw	99^98	; case 99
  3750  0787  3A01               	skipnz
  3751  0788  1903               	goto	l259
  3752  0789  2F5C               	xorlw	100^99	; case 100
  3753  078A  3A07               	skipnz
  3754  078B  1903               	goto	l261
  3755  078C  2F61               	goto	l2015
  3756  078D  2F8E               	opt asmopt_pop
  3757                           
  3758                           	
  3759                           l254:	
  3760  078E                     	line	299
  3761                           	
  3762                           l2015:	
  3763  078E                     ;main.c: 299:                         clearLCD();
  3764                           	fcall	_clearLCD
  3765  078E  120A  118A  20CA  120A  118A  	line	300
  3766                           ;main.c: 300:                         break;
  3767                           	goto	l2023
  3768  0793  2FD6               	line	301
  3769                           ;main.c: 301:                 case '#':
  3770                           	
  3771                           l262:	
  3772  0794                     	line	302
  3773                           	
  3774                           l2017:	
  3775  0794                     ;main.c: 302:                         estado = 10;
  3776                           	movlw	0Ah
  3777  0794  300A               	bcf	status, 5	;RP0=0, select bank0
  3778  0795  1283               	bcf	status, 6	;RP1=0, select bank0
  3779  0796  1303               	movwf	(main@estado)
  3780  0797  00BF               	movlw	0
  3781  0798  3000               	movwf	((main@estado))+1
  3782  0799  00C0               	line	303
  3783                           ;main.c: 303:                         break;
  3784                           	goto	l2023
  3785  079A  2FD6               	line	304
  3786                           	
  3787                           l2019:	
  3788  079B                     ;main.c: 304:             }
  3789                           	goto	l2023
  3790  079B  2FD6               	
  3791                           l227:	
  3792  079C                     	
  3793                           l2021:	
  3794  079C                     	movf	(main@tecla),w
  3795  079C  083E               	movwf	(??_main+0)+0
  3796  079D  00B5               	clrf	(??_main+0)+0+1
  3797  079E  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3798                           ; Switch size 1, requested type "space"
  3799                           ; Number of cases is 1, Range of values is 0 to 0
  3800                           ; switch strategies available:
  3801                           ; Name         Instructions Cycles
  3802                           ; simple_byte            4     3 (average)
  3803                           ; direct_byte           11     8 (fixed)
  3804                           ; jumptable            260     6 (fixed)
  3805                           ;	Chosen strategy is simple_byte
  3806                           
  3807                           	movf 1+(??_main+0)+0,w
  3808  079F  0836               	opt asmopt_push
  3809                           	opt asmopt_off
  3810                           	xorlw	0^0	; case 0
  3811  07A0  3A00               	skipnz
  3812  07A1  1903               	goto	l2175
  3813  07A2  2FA4               	goto	l2023
  3814  07A3  2FD6               	opt asmopt_pop
  3815                           	
  3816                           l2175:	
  3817  07A4                     ; Switch size 1, requested type "space"
  3818                           ; Number of cases is 16, Range of values is 35 to 68
  3819                           ; switch strategies available:
  3820                           ; Name         Instructions Cycles
  3821                           ; simple_byte           49    25 (average)
  3822                           ; direct_byte          113    11 (fixed)
  3823                           ; jumptable            263     9 (fixed)
  3824                           ;	Chosen strategy is simple_byte
  3825                           
  3826                           	movf 0+(??_main+0)+0,w
  3827  07A4  0835               	opt asmopt_push
  3828                           	opt asmopt_off
  3829                           	xorlw	35^0	; case 35
  3830  07A5  3A23               	skipnz
  3831  07A6  1903               	goto	l2017
  3832  07A7  2F94               	xorlw	42^35	; case 42
  3833  07A8  3A09               	skipnz
  3834  07A9  1903               	goto	l2013
  3835  07AA  2F65               	xorlw	48^42	; case 48
  3836  07AB  3A1A               	skipnz
  3837  07AC  1903               	goto	l1995
  3838  07AD  2F2C               	xorlw	49^48	; case 49
  3839  07AE  3A01               	skipnz
  3840  07AF  1903               	goto	l2001
  3841  07B0  2F46               	xorlw	50^49	; case 50
  3842  07B1  3A03               	skipnz
  3843  07B2  1903               	goto	l2001
  3844  07B3  2F46               	xorlw	51^50	; case 51
  3845  07B4  3A01               	skipnz
  3846  07B5  1903               	goto	l2001
  3847  07B6  2F46               	xorlw	52^51	; case 52
  3848  07B7  3A07               	skipnz
  3849  07B8  1903               	goto	l2001
  3850  07B9  2F46               	xorlw	53^52	; case 53
  3851  07BA  3A01               	skipnz
  3852  07BB  1903               	goto	l2001
  3853  07BC  2F46               	xorlw	54^53	; case 54
  3854  07BD  3A03               	skipnz
  3855  07BE  1903               	goto	l2001
  3856  07BF  2F46               	xorlw	55^54	; case 55
  3857  07C0  3A01               	skipnz
  3858  07C1  1903               	goto	l2001
  3859  07C2  2F46               	xorlw	56^55	; case 56
  3860  07C3  3A0F               	skipnz
  3861  07C4  1903               	goto	l2001
  3862  07C5  2F46               	xorlw	57^56	; case 57
  3863  07C6  3A01               	skipnz
  3864  07C7  1903               	goto	l2001
  3865  07C8  2F46               	xorlw	65^57	; case 65
  3866  07C9  3A78               	skipnz
  3867  07CA  1903               	goto	l1963
  3868  07CB  2EBE               	xorlw	66^65	; case 66
  3869  07CC  3A03               	skipnz
  3870  07CD  1903               	goto	l1971
  3871  07CE  2ED8               	xorlw	67^66	; case 67
  3872  07CF  3A01               	skipnz
  3873  07D0  1903               	goto	l1979
  3874  07D1  2EF4               	xorlw	68^67	; case 68
  3875  07D2  3A07               	skipnz
  3876  07D3  1903               	goto	l1987
  3877  07D4  2F10               	goto	l2023
  3878  07D5  2FD6               	opt asmopt_pop
  3879                           
  3880                           	
  3881                           l231:	
  3882  07D6                     	line	305
  3883                           	
  3884                           l2023:	
  3885  07D6                     ;main.c: 305:             lcd(0,0, displayFIFO() );
  3886                           	clrf	(lcd@y)
  3887  07D6  01F7               	fcall	_displayFIFO
  3888  07D7  120A  118A  20B8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3889  07DC  1283               	bcf	status, 6	;RP1=0, select bank0
  3890  07DD  1303               	movwf	(??_main+0)+0
  3891  07DE  00B5               	movf	(??_main+0)+0,w
  3892  07DF  0835               	movwf	(lcd@ptr)
  3893  07E0  00F8               	movlw	low(0)
  3894  07E1  3000               	fcall	_lcd
  3895  07E2  120A  118A  2145  120A  118A  	line	307
  3896                           ;main.c: 307:         }
  3897                           	
  3898                           l226:	
  3899  07E7                     	line	308
  3900                           ;main.c: 308:         serialIOscan();
  3901                           	fcall	_serialIOscan
  3902  07E7  120A  118A  21F2  120A  118A  	goto	l1813
  3903  07EC  2BD7               	line	309
  3904                           ;main.c: 309:     }
  3905                           	
  3906                           l263:	
  3907  07ED                     	goto	l1813
  3908  07ED  2BD7               	
  3909                           l264:	
  3910  07EE                     	line	310
  3911                           	
  3912                           l265:	
  3913  07EE                     	global	start
  3914                           	ljmp	start
  3915  07EE  120A  118A  2800   	opt stack 0
  3916                           GLOBAL	__end_of_main
  3917                           	__end_of_main:
  3918  07F1                     	signat	_main,89
  3919                           	global	_serialIOscan
  3920                           
  3921 ;; *************** function _serialIOscan *****************
  3922 ;; Defined at:
  3923 ;;		line 76 in file "serialIO.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;  i               1    8[COMMON] unsigned char 
  3928 ;;  j               1    7[COMMON] unsigned char 
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3938 ;;      Params:         0       0       0       0       0
  3939 ;;      Locals:         2       0       0       0       0
  3940 ;;      Temps:          3       0       0       0       0
  3941 ;;      Totals:         5       0       0       0       0
  3942 ;;Total ram usage:        5 bytes
  3943 ;; Hardware stack levels used:    1
  3944 ;; Hardware stack levels required when called:    1
  3945 ;; This function calls:
  3946 ;;		_serialIObyteShift
  3947 ;;		_serialIOload
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3953                           	file	"serialIO.c"
  3954                           	line	76
  3955                           global __ptext1
  3956                           __ptext1:	;psect for function _serialIOscan
  3957  01F2                     psect	text1
  3958                           	file	"serialIO.c"
  3959                           	line	76
  3960                           	global	__size_of_serialIOscan
  3961                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
  3962  003D                     	
  3963                           _serialIOscan:	
  3964  01F2                     ;incstack = 0
  3965                           	opt	stack 6
  3966                           ; Regs used in _serialIOscan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3967                           	line	79
  3968                           	
  3969                           l1791:	
  3970  01F2                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
  3971                           	bcf	status, 5	;RP0=0, select bank0
  3972  01F2  1283               	bcf	status, 6	;RP1=0, select bank0
  3973  01F3  1303               	movf	(_lenSerialIO),w
  3974  01F4  0820               	addlw	0FFh
  3975  01F5  3EFF               	movwf	(??_serialIOscan+0)+0
  3976  01F6  00F4               	movf	(??_serialIOscan+0)+0,w
  3977  01F7  0874               	movwf	(serialIOscan@j)
  3978  01F8  00F7               	line	80
  3979                           	
  3980                           l1793:	
  3981  01F9                     ;serialIO.c: 80:     serialIOload();
  3982                           	fcall	_serialIOload
  3983  01F9  120A  118A  20C5  120A  118A  	line	81
  3984                           	
  3985                           l1795:	
  3986  01FE                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
  3987                           	clrf	(serialIOscan@i)
  3988  01FE  01F8               	goto	l1801
  3989  01FF  2A20               	
  3990                           l299:	
  3991  0200                     	line	83
  3992                           	
  3993                           l1797:	
  3994  0200                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
  3995                           	decf	(serialIOscan@i),w
  3996  0200  0378               	xorlw	0ffh
  3997  0201  3AFF               	addwf	(serialIOscan@j),w
  3998  0202  0777               	bcf	status, 5	;RP0=0, select bank0
  3999  0203  1283               	bcf	status, 6	;RP1=0, select bank0
  4000  0204  1303               	addwf	(_ptrSerialOut),w
  4001  0205  0721               	movwf	(??_serialIOscan+0)+0
  4002  0206  00F4               	movf	0+(??_serialIOscan+0)+0,w
  4003  0207  0874               	movwf	fsr0
  4004  0208  0084               	bcf	status, 7	;select IRP bank0
  4005  0209  1383               	movf	indf,w
  4006  020A  0800               	fcall	_serialIObyteShift
  4007  020B  120A  118A  2193  120A  118A  	movwf	(??_serialIOscan+1)+0
  4008  0210  00F5               	movf	(serialIOscan@i),w
  4009  0211  0878               	bcf	status, 5	;RP0=0, select bank0
  4010  0212  1283               	bcf	status, 6	;RP1=0, select bank0
  4011  0213  1303               	addwf	(_ptrSerialIn),w
  4012  0214  0722               	movwf	(??_serialIOscan+2)+0
  4013  0215  00F6               	movf	0+(??_serialIOscan+2)+0,w
  4014  0216  0876               	movwf	fsr0
  4015  0217  0084               	movf	(??_serialIOscan+1)+0,w
  4016  0218  0875               	bcf	status, 7	;select IRP bank0
  4017  0219  1383               	movwf	indf
  4018  021A  0080               	line	84
  4019                           	
  4020                           l1799:	
  4021  021B                     ;serialIO.c: 84:     }
  4022                           	movlw	low(01h)
  4023  021B  3001               	movwf	(??_serialIOscan+0)+0
  4024  021C  00F4               	movf	(??_serialIOscan+0)+0,w
  4025  021D  0874               	addwf	(serialIOscan@i),f
  4026  021E  07F8               	goto	l1801
  4027  021F  2A20               	
  4028                           l298:	
  4029  0220                     	
  4030                           l1801:	
  4031  0220                     	bcf	status, 5	;RP0=0, select bank0
  4032  0220  1283               	bcf	status, 6	;RP1=0, select bank0
  4033  0221  1303               	movf	(_lenSerialIO),w
  4034  0222  0820               	subwf	(serialIOscan@i),w
  4035  0223  0278               	skipc
  4036  0224  1C03               	goto	u851
  4037  0225  2A27               	goto	u850
  4038  0226  2A28               u851:
  4039  0227                     	goto	l1797
  4040  0227  2A00               u850:
  4041  0228                     	goto	l1803
  4042  0228  2A29               	
  4043                           l300:	
  4044  0229                     	line	85
  4045                           	
  4046                           l1803:	
  4047  0229                     ;serialIO.c: 85:     serialIOload();
  4048                           	fcall	_serialIOload
  4049  0229  120A  118A  20C5  120A  118A  	line	86
  4050                           	
  4051                           l301:	
  4052  022E                     	return
  4053  022E  0008               	opt stack 0
  4054                           GLOBAL	__end_of_serialIOscan
  4055                           	__end_of_serialIOscan:
  4056  022F                     	signat	_serialIOscan,89
  4057                           	global	_serialIOload
  4058                           
  4059 ;; *************** function _serialIOload *****************
  4060 ;; Defined at:
  4061 ;;		line 45 in file "serialIO.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		None
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4075 ;;      Params:         0       0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_serialIOscan
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4088                           	line	45
  4089                           global __ptext2
  4090                           __ptext2:	;psect for function _serialIOload
  4091  00C5                     psect	text2
  4092                           	file	"serialIO.c"
  4093                           	line	45
  4094                           	global	__size_of_serialIOload
  4095                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
  4096  0005                     	
  4097                           _serialIOload:	
  4098  00C5                     ;incstack = 0
  4099                           	opt	stack 6
  4100                           ; Regs used in _serialIOload: []
  4101                           	line	47
  4102                           	
  4103                           l1591:	
  4104  00C5                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
  4105                           	bcf	status, 5	;RP0=0, select bank0
  4106  00C5  1283               	bcf	status, 6	;RP1=0, select bank0
  4107  00C6  1303               	bcf	(9),0	;volatile
  4108  00C7  1009               	line	48
  4109                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
  4110                           	bsf	(9),0	;volatile
  4111  00C8  1409               	line	49
  4112                           	
  4113                           l286:	
  4114  00C9                     	return
  4115  00C9  0008               	opt stack 0
  4116                           GLOBAL	__end_of_serialIOload
  4117                           	__end_of_serialIOload:
  4118  00CA                     	signat	_serialIOload,89
  4119                           	global	_serialIObyteShift
  4120                           
  4121 ;; *************** function _serialIObyteShift *****************
  4122 ;; Defined at:
  4123 ;;		line 50 in file "serialIO.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  dataIn          1    wreg     unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  dataIn          1    1[COMMON] unsigned char 
  4128 ;;  dataBit         1    3[COMMON] unsigned char 
  4129 ;;  dataOut         1    2[COMMON] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      unsigned char 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4139 ;;      Params:         0       0       0       0       0
  4140 ;;      Locals:         3       0       0       0       0
  4141 ;;      Temps:          1       0       0       0       0
  4142 ;;      Totals:         4       0       0       0       0
  4143 ;;Total ram usage:        4 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_serialIOscan
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4152                           	line	50
  4153                           global __ptext3
  4154                           __ptext3:	;psect for function _serialIObyteShift
  4155  0193                     psect	text3
  4156                           	file	"serialIO.c"
  4157                           	line	50
  4158                           	global	__size_of_serialIObyteShift
  4159                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
  4160  002B                     	
  4161                           _serialIObyteShift:	
  4162  0193                     ;incstack = 0
  4163                           	opt	stack 6
  4164                           ; Regs used in _serialIObyteShift: [wreg+status,2+status,0]
  4165                           ;serialIObyteShift@dataIn stored from wreg
  4166                           	movwf	(serialIObyteShift@dataIn)
  4167  0193  00F1               	line	55
  4168                           	
  4169                           l1593:	
  4170  0194                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
  4171                           	movlw	low(080h)
  4172  0194  3080               	movwf	(??_serialIObyteShift+0)+0
  4173  0195  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4174  0196  0870               	movwf	(serialIObyteShift@dataBit)
  4175  0197  00F3               	line	56
  4176                           	
  4177                           l1595:	
  4178  0198                     ;serialIO.c: 56:     dataOut = 0;
  4179                           	clrf	(serialIObyteShift@dataOut)
  4180  0198  01F2               	line	58
  4181                           ;serialIO.c: 58:     while( dataBit )
  4182                           	goto	l1607
  4183  0199  29B3               	
  4184                           l290:	
  4185  019A                     	line	60
  4186                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
  4187                           	bcf	status, 5	;RP0=0, select bank0
  4188  019A  1283               	bcf	status, 6	;RP1=0, select bank0
  4189  019B  1303               	bcf	(9),1	;volatile
  4190  019C  1089               	line	61
  4191                           	
  4192                           l1597:	
  4193  019D                     ;serialIO.c: 61:         if( dataIn & dataBit )
  4194                           	movf	(serialIObyteShift@dataIn),w
  4195  019D  0871               	andwf	(serialIObyteShift@dataBit),w
  4196  019E  0573               	btfsc	status,2
  4197  019F  1903               	goto	u661
  4198  01A0  29A2               	goto	u660
  4199  01A1  29A3               u661:
  4200  01A2                     	goto	l291
  4201  01A2  29A5               u660:
  4202  01A3                     	line	62
  4203                           	
  4204                           l1599:	
  4205  01A3                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
  4206                           	bsf	(9),2	;volatile
  4207  01A3  1509               	goto	l292
  4208  01A4  29A6               	line	63
  4209                           ;serialIO.c: 63:         else
  4210                           	
  4211                           l291:	
  4212  01A5                     	line	64
  4213                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
  4214                           	bcf	(9),2	;volatile
  4215  01A5  1109               	
  4216                           l292:	
  4217  01A6                     	line	66
  4218                           ;serialIO.c: 66:         if( PORTAbits.RA0 )
  4219                           	btfss	(5),0	;volatile
  4220  01A6  1C05               	goto	u671
  4221  01A7  29A9               	goto	u670
  4222  01A8  29AA               u671:
  4223  01A9                     	goto	l1603
  4224  01A9  29AF               u670:
  4225  01AA                     	line	67
  4226                           	
  4227                           l1601:	
  4228  01AA                     ;serialIO.c: 67:             dataOut |= dataBit;
  4229                           	movf	(serialIObyteShift@dataBit),w
  4230  01AA  0873               	movwf	(??_serialIObyteShift+0)+0
  4231  01AB  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4232  01AC  0870               	iorwf	(serialIObyteShift@dataOut),f
  4233  01AD  04F2               	goto	l1603
  4234  01AE  29AF               	
  4235                           l293:	
  4236  01AF                     	line	68
  4237                           	
  4238                           l1603:	
  4239  01AF                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
  4240                           	bsf	(9),1	;volatile
  4241  01AF  1489               	line	69
  4242                           	
  4243                           l1605:	
  4244  01B0                     ;serialIO.c: 69:         dataBit >>= 1;
  4245                           	clrc
  4246  01B0  1003               	rrf	(serialIObyteShift@dataBit),f
  4247  01B1  0CF3               
  4248                           	goto	l1607
  4249  01B2  29B3               	line	70
  4250                           ;serialIO.c: 70:     }
  4251                           	
  4252                           l289:	
  4253  01B3                     	line	58
  4254                           	
  4255                           l1607:	
  4256  01B3                     ;serialIO.c: 58:     while( dataBit )
  4257                           	movf	((serialIObyteShift@dataBit)),w
  4258  01B3  0873               	btfss	status,2
  4259  01B4  1D03               	goto	u681
  4260  01B5  29B7               	goto	u680
  4261  01B6  29B8               u681:
  4262  01B7                     	goto	l290
  4263  01B7  299A               u680:
  4264  01B8                     	
  4265                           l294:	
  4266  01B8                     	line	71
  4267                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
  4268                           	bcf	status, 5	;RP0=0, select bank0
  4269  01B8  1283               	bcf	status, 6	;RP1=0, select bank0
  4270  01B9  1303               	bcf	(9),1	;volatile
  4271  01BA  1089               	line	72
  4272                           	
  4273                           l1609:	
  4274  01BB                     ;serialIO.c: 72:     return( dataOut );
  4275                           	movf	(serialIObyteShift@dataOut),w
  4276  01BB  0872               	goto	l295
  4277  01BC  29BD               	
  4278                           l1611:	
  4279  01BD                     	line	73
  4280                           	
  4281                           l295:	
  4282  01BD                     	return
  4283  01BD  0008               	opt stack 0
  4284                           GLOBAL	__end_of_serialIObyteShift
  4285                           	__end_of_serialIObyteShift:
  4286  01BE                     	signat	_serialIObyteShift,4217
  4287                           	global	_putFIFO
  4288                           
  4289 ;; *************** function _putFIFO *****************
  4290 ;; Defined at:
  4291 ;;		line 17 in file "fifo.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  c               1    wreg     unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  c               1    1[COMMON] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4305 ;;      Params:         0       0       0       0       0
  4306 ;;      Locals:         1       0       0       0       0
  4307 ;;      Temps:          1       0       0       0       0
  4308 ;;      Totals:         2       0       0       0       0
  4309 ;;Total ram usage:        2 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4318                           	file	"fifo.c"
  4319                           	line	17
  4320                           global __ptext4
  4321                           __ptext4:	;psect for function _putFIFO
  4322  00D9                     psect	text4
  4323                           	file	"fifo.c"
  4324                           	line	17
  4325                           	global	__size_of_putFIFO
  4326                           	__size_of_putFIFO	equ	__end_of_putFIFO-_putFIFO
  4327  000E                     	
  4328                           _putFIFO:	
  4329  00D9                     ;incstack = 0
  4330                           	opt	stack 7
  4331                           ; Regs used in _putFIFO: [wreg-fsr0h+status,2+status,0]
  4332                           ;putFIFO@c stored from wreg
  4333                           	movwf	(putFIFO@c)
  4334  00D9  00F1               	line	19
  4335                           	
  4336                           l1613:	
  4337  00DA                     ;fifo.c: 17: void putFIFO( unsigned char c );fifo.c: 18: {;fifo.c: 19:     fifo[ fifoHea
                                 d ] = c;
  4338                           	movf	(putFIFO@c),w
  4339  00DA  0871               	movwf	(??_putFIFO+0)+0
  4340  00DB  00F0               	movf	(_fifoHead),w
  4341  00DC  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  4342  00DD  3E25               	movwf	fsr0
  4343  00DE  0084               	movf	(??_putFIFO+0)+0,w
  4344  00DF  0870               	bcf	status, 7	;select IRP bank0
  4345  00E0  1383               	movwf	indf
  4346  00E1  0080               	line	20
  4347                           	
  4348                           l1615:	
  4349  00E2                     ;fifo.c: 20:     ++fifoHead;
  4350                           	movlw	low(01h)
  4351  00E2  3001               	movwf	(??_putFIFO+0)+0
  4352  00E3  00F0               	movf	(??_putFIFO+0)+0,w
  4353  00E4  0870               	addwf	(_fifoHead),f
  4354  00E5  07FD               	line	21
  4355                           	
  4356                           l9:	
  4357  00E6                     	return
  4358  00E6  0008               	opt stack 0
  4359                           GLOBAL	__end_of_putFIFO
  4360                           	__end_of_putFIFO:
  4361  00E7                     	signat	_putFIFO,4217
  4362                           	global	_previousKey
  4363                           
  4364 ;; *************** function _previousKey *****************
  4365 ;; Defined at:
  4366 ;;		line 55 in file "keyboard.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      unsigned char 
  4373 ;; Registers used:
  4374 ;;		wreg
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4380 ;;      Params:         0       0       0       0       0
  4381 ;;      Locals:         0       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0
  4383 ;;      Totals:         0       0       0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_main
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4393                           	file	"keyboard.c"
  4394                           	line	55
  4395                           global __ptext5
  4396                           __ptext5:	;psect for function _previousKey
  4397  00C0                     psect	text5
  4398                           	file	"keyboard.c"
  4399                           	line	55
  4400                           	global	__size_of_previousKey
  4401                           	__size_of_previousKey	equ	__end_of_previousKey-_previousKey
  4402  0005                     	
  4403                           _previousKey:	
  4404  00C0                     ;incstack = 0
  4405                           	opt	stack 7
  4406                           ; Regs used in _previousKey: [wreg]
  4407                           	line	57
  4408                           	
  4409                           l1647:	
  4410  00C0                     ;keyboard.c: 57:     return( prevKey );
  4411                           	bcf	status, 5	;RP0=0, select bank0
  4412  00C0  1283               	bcf	status, 6	;RP1=0, select bank0
  4413  00C1  1303               	movf	(_prevKey),w
  4414  00C2  0824               	goto	l48
  4415  00C3  28C4               	
  4416                           l1649:	
  4417  00C4                     	line	58
  4418                           	
  4419                           l48:	
  4420  00C4                     	return
  4421  00C4  0008               	opt stack 0
  4422                           GLOBAL	__end_of_previousKey
  4423                           	__end_of_previousKey:
  4424  00C5                     	signat	_previousKey,89
  4425                           	global	_lcd
  4426                           
  4427 ;; *************** function _lcd *****************
  4428 ;; Defined at:
  4429 ;;		line 188 in file "lcd4bitBus.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  x               1    wreg     unsigned char 
  4432 ;;  y               1    7[COMMON] unsigned char 
  4433 ;;  ptr             1    8[COMMON] PTR const unsigned char 
  4434 ;;		 -> fifo(16), 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  x               1   10[COMMON] unsigned char 
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4446 ;;      Params:         2       0       0       0       0
  4447 ;;      Locals:         1       0       0       0       0
  4448 ;;      Temps:          1       0       0       0       0
  4449 ;;      Totals:         4       0       0       0       0
  4450 ;;Total ram usage:        4 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    2
  4453 ;; This function calls:
  4454 ;;		_lcddat
  4455 ;;		_lcdxy
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4461                           	file	"lcd4bitBus.c"
  4462                           	line	188
  4463                           global __ptext6
  4464                           __ptext6:	;psect for function _lcd
  4465  0145                     psect	text6
  4466                           	file	"lcd4bitBus.c"
  4467                           	line	188
  4468                           	global	__size_of_lcd
  4469                           	__size_of_lcd	equ	__end_of_lcd-_lcd
  4470  0024                     	
  4471                           _lcd:	
  4472  0145                     ;incstack = 0
  4473                           	opt	stack 5
  4474                           ; Regs used in _lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4475                           ;lcd@x stored from wreg
  4476                           	movwf	(lcd@x)
  4477  0145  00FA               	line	190
  4478                           	
  4479                           l1699:	
  4480  0146                     ;lcd4bitBus.c: 188: void lcd( unsigned char x, unsigned char y, const char * ptr );lcd4b
                                 itBus.c: 189: {;lcd4bitBus.c: 190:     lcdxy(x,y);
  4481                           	movf	(lcd@y),w
  4482  0146  0877               	movwf	(??_lcd+0)+0
  4483  0147  00F9               	movf	(??_lcd+0)+0,w
  4484  0148  0879               	movwf	(lcdxy@y)
  4485  0149  00F4               	movf	(lcd@x),w
  4486  014A  087A               	fcall	_lcdxy
  4487  014B  120A  118A  20FA  120A  118A  	line	191
  4488                           ;lcd4bitBus.c: 191:     while( *ptr )
  4489                           	goto	l1705
  4490  0150  295F               	
  4491                           l90:	
  4492  0151                     	line	192
  4493                           	
  4494                           l1701:	
  4495  0151                     ;lcd4bitBus.c: 192:         lcddat( *ptr++ );
  4496                           	movf	(lcd@ptr),w
  4497  0151  0878               	movwf	fsr0
  4498  0152  0084               	bcf	status, 7	;select IRP bank0
  4499  0153  1383               	movf	indf,w
  4500  0154  0800               	fcall	_lcddat
  4501  0155  120A  118A  2169  120A  118A  	
  4502                           l1703:	
  4503  015A                     	movlw	low(01h)
  4504  015A  3001               	movwf	(??_lcd+0)+0
  4505  015B  00F9               	movf	(??_lcd+0)+0,w
  4506  015C  0879               	addwf	(lcd@ptr),f
  4507  015D  07F8               	goto	l1705
  4508  015E  295F               	
  4509                           l89:	
  4510  015F                     	line	191
  4511                           	
  4512                           l1705:	
  4513  015F                     ;lcd4bitBus.c: 191:     while( *ptr )
  4514                           	movf	(lcd@ptr),w
  4515  015F  0878               	movwf	fsr0
  4516  0160  0084               	bcf	status, 7	;select IRP bank0
  4517  0161  1383               	movf	(indf),w
  4518  0162  0800               	btfss	status,2
  4519  0163  1D03               	goto	u801
  4520  0164  2966               	goto	u800
  4521  0165  2967               u801:
  4522  0166                     	goto	l1701
  4523  0166  2951               u800:
  4524  0167                     	goto	l92
  4525  0167  2968               	
  4526                           l91:	
  4527  0168                     	line	193
  4528                           	
  4529                           l92:	
  4530  0168                     	return
  4531  0168  0008               	opt stack 0
  4532                           GLOBAL	__end_of_lcd
  4533                           	__end_of_lcd:
  4534  0169                     	signat	_lcd,12409
  4535                           	global	_keyboardScan
  4536                           
  4537 ;; *************** function _keyboardScan *****************
  4538 ;; Defined at:
  4539 ;;		line 75 in file "keyboard.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  j               1   10[COMMON] unsigned char 
  4544 ;;  i               1    9[COMMON] unsigned char 
  4545 ;;  aux             1    8[COMMON] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      unsigned char 
  4548 ;; Registers used:
  4549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4555 ;;      Params:         0       0       0       0       0
  4556 ;;      Locals:         3       0       0       0       0
  4557 ;;      Temps:          8       0       0       0       0
  4558 ;;      Totals:        11       0       0       0       0
  4559 ;;Total ram usage:       11 bytes
  4560 ;; Hardware stack levels used:    2
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_main
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4568                           	file	"keyboard.c"
  4569                           	line	75
  4570                           global __ptext7
  4571                           __ptext7:	;psect for function _keyboardScan
  4572  028E                     psect	text7
  4573                           	file	"keyboard.c"
  4574                           	line	75
  4575                           	global	__size_of_keyboardScan
  4576                           	__size_of_keyboardScan	equ	__end_of_keyboardScan-_keyboardScan
  4577  007F                     	
  4578                           _keyboardScan:	
  4579  028E                     ;incstack = 0
  4580                           	opt	stack 6
  4581                           ; Regs used in _keyboardScan: [wreg-fsr0h+status,2+status,0+pclath]
  4582                           	line	78
  4583                           	
  4584                           l1655:	
  4585  028E                     ;keyboard.c: 77:     unsigned char i, j;;keyboard.c: 78:     unsigned char aux = 0;
  4586                           	clrf	(keyboardScan@aux)
  4587  028E  01F8               	line	80
  4588                           ;keyboard.c: 80:     for( j=0; j<4; j++ )
  4589                           	clrf	(keyboardScan@j)
  4590  028F  01FA               	
  4591                           l1657:	
  4592  0290                     	movlw	low(04h)
  4593  0290  3004               	subwf	(keyboardScan@j),w
  4594  0291  027A               	skipc
  4595  0292  1C03               	goto	u721
  4596  0293  2A95               	goto	u720
  4597  0294  2A96               u721:
  4598  0295                     	goto	l1661
  4599  0295  2A98               u720:
  4600  0296                     	goto	l1681
  4601  0296  2B01               	
  4602                           l1659:	
  4603  0297                     	goto	l1681
  4604  0297  2B01               	
  4605                           l54:	
  4606  0298                     	line	82
  4607                           	
  4608                           l1661:	
  4609  0298                     ;keyboard.c: 81:     {;keyboard.c: 82:         KEYBOARDbits.cols = ~(0x01<<j);
  4610                           	movlw	low(01h)
  4611  0298  3001               	movwf	(??_keyboardScan+0)+0
  4612  0299  00F0               	incf	(keyboardScan@j),w
  4613  029A  0A7A               	goto	u734
  4614  029B  2A9E               u735:
  4615  029C                     	clrc
  4616  029C  1003               	rlf	(??_keyboardScan+0)+0,f
  4617  029D  0DF0               u734:
  4618  029E                     	addlw	-1
  4619  029E  3EFF               	skipz
  4620  029F  1D03               	goto	u735
  4621  02A0  2A9C               	movf	0+(??_keyboardScan+0)+0,w
  4622  02A1  0870               	xorlw	0ffh
  4623  02A2  3AFF               	movwf	(??_keyboardScan+1)+0
  4624  02A3  00F1               	swapf	(??_keyboardScan+1)+0,f
  4625  02A4  0EF1               	bcf	status, 5	;RP0=0, select bank0
  4626  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  4627  02A6  1303               	movf	(6),w	;volatile
  4628  02A7  0806               	xorwf	(??_keyboardScan+1)+0,w
  4629  02A8  0671               	andlw	not (((1<<4)-1)<<4)
  4630  02A9  390F               	xorwf	(??_keyboardScan+1)+0,w
  4631  02AA  0671               	movwf	(6)	;volatile
  4632  02AB  0086               	line	83
  4633                           	
  4634                           l1663:	
  4635  02AC                     ;keyboard.c: 83:         for( i=0; i<4; i++ )
  4636                           	clrf	(keyboardScan@i)
  4637  02AC  01F9               	
  4638                           l1665:	
  4639  02AD                     	movlw	low(04h)
  4640  02AD  3004               	subwf	(keyboardScan@i),w
  4641  02AE  0279               	skipc
  4642  02AF  1C03               	goto	u741
  4643  02B0  2AB2               	goto	u740
  4644  02B1  2AB3               u741:
  4645  02B2                     	goto	l1669
  4646  02B2  2AB5               u740:
  4647  02B3                     	goto	l1677
  4648  02B3  2AF6               	
  4649                           l1667:	
  4650  02B4                     	goto	l1677
  4651  02B4  2AF6               	
  4652                           l56:	
  4653  02B5                     	line	85
  4654                           	
  4655                           l1669:	
  4656  02B5                     ;keyboard.c: 84:         {;keyboard.c: 85:             if( ~KEYBOARDbits.rows & (0x01<<i
                                 ) )
  4657                           	movf	(6),w	;volatile
  4658  02B5  0806               	andlw	(1<<4)-1
  4659  02B6  390F               	movwf	(??_keyboardScan+0)+0
  4660  02B7  00F0               	comf	(??_keyboardScan+0)+0,w
  4661  02B8  0970               	movwf	(??_keyboardScan+1)+0
  4662  02B9  00F1               	clrf	(??_keyboardScan+1)+0+1
  4663  02BA  01F2               	comf	(??_keyboardScan+1)+0+1
  4664  02BB  09F2               	incf	(keyboardScan@i),w
  4665  02BC  0A79               	movwf	(??_keyboardScan+3)+0
  4666  02BD  00F3               	movlw	01h
  4667  02BE  3001               	movwf	(??_keyboardScan+4)+0
  4668  02BF  00F4               	movlw	0
  4669  02C0  3000               	movwf	(??_keyboardScan+4)+0+1
  4670  02C1  00F5               	goto	u754
  4671  02C2  2AC6               u755:
  4672  02C3                     	clrc
  4673  02C3  1003               	rlf	(??_keyboardScan+4)+0,f
  4674  02C4  0DF4               	rlf	(??_keyboardScan+4)+1,f
  4675  02C5  0DF5               u754:
  4676  02C6                     	decfsz	(??_keyboardScan+3)+0,f
  4677  02C6  0BF3               	goto	u755
  4678  02C7  2AC3               	
  4679                           	movf	0+(??_keyboardScan+1)+0,w
  4680  02C8  0871               	andwf	0+(??_keyboardScan+4)+0,w
  4681  02C9  0574               	movwf	(??_keyboardScan+6)+0
  4682  02CA  00F6               	movf	1+(??_keyboardScan+1)+0,w
  4683  02CB  0872               	andwf	1+(??_keyboardScan+4)+0,w
  4684  02CC  0575               	movwf	1+(??_keyboardScan+6)+0
  4685  02CD  00F7               	movf	((??_keyboardScan+6)+0),w
  4686  02CE  0876               iorwf	((??_keyboardScan+6)+1),w
  4687  02CF  0477               	btfsc	status,2
  4688  02D0  1903               	goto	u761
  4689  02D1  2AD3               	goto	u760
  4690  02D2  2AD4               u761:
  4691  02D3                     	goto	l1673
  4692  02D3  2AEB               u760:
  4693  02D4                     	line	86
  4694                           	
  4695                           l1671:	
  4696  02D4                     ;keyboard.c: 86:                 aux = keyboardMatrix[i][j];
  4697                           	movf	(keyboardScan@i),w
  4698  02D4  0879               	movwf	(??_keyboardScan+0)+0
  4699  02D5  00F0               	movlw	02h
  4700  02D6  3002               u775:
  4701  02D7                     	clrc
  4702  02D7  1003               	rlf	(??_keyboardScan+0)+0,f
  4703  02D8  0DF0               	addlw	-1
  4704  02D9  3EFF               	skipz
  4705  02DA  1D03               	goto	u775
  4706  02DB  2AD7               	movlw	(low((((_keyboardMatrix)-__stringbase)|8000h)))&0ffh
  4707  02DC  3001               	addwf	0+(??_keyboardScan+0)+0,w
  4708  02DD  0770               	movwf	(??_keyboardScan+1)+0
  4709  02DE  00F1               	movf	(keyboardScan@j),w
  4710  02DF  087A               	addwf	0+(??_keyboardScan+1)+0,w
  4711  02E0  0771               	movwf	fsr0
  4712  02E1  0084               	fcall	stringdir
  4713  02E2  120A  118A  2003  120A  118A  	movwf	(??_keyboardScan+2)+0
  4714  02E7  00F2               	movf	(??_keyboardScan+2)+0,w
  4715  02E8  0872               	movwf	(keyboardScan@aux)
  4716  02E9  00F8               	goto	l1673
  4717  02EA  2AEB               	
  4718                           l58:	
  4719  02EB                     	line	87
  4720                           	
  4721                           l1673:	
  4722  02EB                     ;keyboard.c: 87:         }
  4723                           	movlw	low(01h)
  4724  02EB  3001               	movwf	(??_keyboardScan+0)+0
  4725  02EC  00F0               	movf	(??_keyboardScan+0)+0,w
  4726  02ED  0870               	addwf	(keyboardScan@i),f
  4727  02EE  07F9               	
  4728                           l1675:	
  4729  02EF                     	movlw	low(04h)
  4730  02EF  3004               	subwf	(keyboardScan@i),w
  4731  02F0  0279               	skipc
  4732  02F1  1C03               	goto	u781
  4733  02F2  2AF4               	goto	u780
  4734  02F3  2AF5               u781:
  4735  02F4                     	goto	l1669
  4736  02F4  2AB5               u780:
  4737  02F5                     	goto	l1677
  4738  02F5  2AF6               	
  4739                           l57:	
  4740  02F6                     	line	88
  4741                           	
  4742                           l1677:	
  4743  02F6                     ;keyboard.c: 88:     }
  4744                           	movlw	low(01h)
  4745  02F6  3001               	movwf	(??_keyboardScan+0)+0
  4746  02F7  00F0               	movf	(??_keyboardScan+0)+0,w
  4747  02F8  0870               	addwf	(keyboardScan@j),f
  4748  02F9  07FA               	
  4749                           l1679:	
  4750  02FA                     	movlw	low(04h)
  4751  02FA  3004               	subwf	(keyboardScan@j),w
  4752  02FB  027A               	skipc
  4753  02FC  1C03               	goto	u791
  4754  02FD  2AFF               	goto	u790
  4755  02FE  2B00               u791:
  4756  02FF                     	goto	l1661
  4757  02FF  2A98               u790:
  4758  0300                     	goto	l1681
  4759  0300  2B01               	
  4760                           l55:	
  4761  0301                     	line	90
  4762                           	
  4763                           l1681:	
  4764  0301                     ;keyboard.c: 90:     prevKey = currKey;
  4765                           	bcf	status, 5	;RP0=0, select bank0
  4766  0301  1283               	bcf	status, 6	;RP1=0, select bank0
  4767  0302  1303               	movf	(_currKey),w
  4768  0303  0823               	movwf	(??_keyboardScan+0)+0
  4769  0304  00F0               	movf	(??_keyboardScan+0)+0,w
  4770  0305  0870               	movwf	(_prevKey)
  4771  0306  00A4               	line	91
  4772                           ;keyboard.c: 91:     currKey = aux;
  4773                           	movf	(keyboardScan@aux),w
  4774  0307  0878               	movwf	(??_keyboardScan+0)+0
  4775  0308  00F0               	movf	(??_keyboardScan+0)+0,w
  4776  0309  0870               	movwf	(_currKey)
  4777  030A  00A3               	goto	l59
  4778  030B  2B0C               	line	93
  4779                           	
  4780                           l1683:	
  4781  030C                     	line	94
  4782                           ;keyboard.c: 93:     return( aux );;	Return value of _keyboardScan is never used
  4783                           	
  4784                           l59:	
  4785  030C                     	return
  4786  030C  0008               	opt stack 0
  4787                           GLOBAL	__end_of_keyboardScan
  4788                           	__end_of_keyboardScan:
  4789  030D                     	signat	_keyboardScan,89
  4790                           	global	_initSerialIO
  4791                           
  4792 ;; *************** function _initSerialIO *****************
  4793 ;; Defined at:
  4794 ;;		line 89 in file "serialIO.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  ptrIn           1    wreg     PTR unsigned char 
  4797 ;;		 -> main@sensor(1), 
  4798 ;;  ptrOut          1    0[COMMON] PTR unsigned char 
  4799 ;;		 -> main@atuador(1), 
  4800 ;;  length          1    1[COMMON] unsigned char 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  ptrIn           1    3[COMMON] PTR unsigned char 
  4803 ;;		 -> main@sensor(1), 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         2       0       0       0       0
  4814 ;;      Locals:         1       0       0       0       0
  4815 ;;      Temps:          1       0       0       0       0
  4816 ;;      Totals:         4       0       0       0       0
  4817 ;;Total ram usage:        4 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4826                           	file	"serialIO.c"
  4827                           	line	89
  4828                           global __ptext8
  4829                           __ptext8:	;psect for function _initSerialIO
  4830  01BE                     psect	text8
  4831                           	file	"serialIO.c"
  4832                           	line	89
  4833                           	global	__size_of_initSerialIO
  4834                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
  4835  0034                     	
  4836                           _initSerialIO:	
  4837  01BE                     ;incstack = 0
  4838                           	opt	stack 7
  4839                           ; Regs used in _initSerialIO: [wreg]
  4840                           ;initSerialIO@ptrIn stored from wreg
  4841                           	movwf	(initSerialIO@ptrIn)
  4842  01BE  00F3               	line	91
  4843                           	
  4844                           l1761:	
  4845  01BF                     ;serialIO.c: 89: void initSerialIO( unsigned char * ptrIn, unsigned char * ptrOut, unsig
                                 ned char length );serialIO.c: 90: {;serialIO.c: 91:     ptrSerialIn = ptrIn;
  4846                           	movf	(initSerialIO@ptrIn),w
  4847  01BF  0873               	movwf	(??_initSerialIO+0)+0
  4848  01C0  00F2               	movf	(??_initSerialIO+0)+0,w
  4849  01C1  0872               	bcf	status, 5	;RP0=0, select bank0
  4850  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  4851  01C3  1303               	movwf	(_ptrSerialIn)
  4852  01C4  00A2               	line	92
  4853                           ;serialIO.c: 92:     ptrSerialOut = ptrOut;
  4854                           	movf	(initSerialIO@ptrOut),w
  4855  01C5  0870               	movwf	(??_initSerialIO+0)+0
  4856  01C6  00F2               	movf	(??_initSerialIO+0)+0,w
  4857  01C7  0872               	movwf	(_ptrSerialOut)
  4858  01C8  00A1               	line	93
  4859                           ;serialIO.c: 93:     lenSerialIO = length;
  4860                           	movf	(initSerialIO@length),w
  4861  01C9  0871               	movwf	(??_initSerialIO+0)+0
  4862  01CA  00F2               	movf	(??_initSerialIO+0)+0,w
  4863  01CB  0872               	movwf	(_lenSerialIO)
  4864  01CC  00A0               	line	95
  4865                           	
  4866                           l1763:	
  4867  01CD                     ;serialIO.c: 95:     PORTEbits.RE0 = 0;
  4868                           	bcf	(9),0	;volatile
  4869  01CD  1009               	line	96
  4870                           	
  4871                           l1765:	
  4872  01CE                     ;serialIO.c: 96:     ANSELbits.ANS5 = 0;
  4873                           	bsf	status, 5	;RP0=1, select bank3
  4874  01CE  1683               	bsf	status, 6	;RP1=1, select bank3
  4875  01CF  1703               	bcf	(392)^0180h,5	;volatile
  4876  01D0  1288               	line	97
  4877                           	
  4878                           l1767:	
  4879  01D1                     ;serialIO.c: 97:     TRISEbits.TRISE0 = 0;
  4880                           	bsf	status, 5	;RP0=1, select bank1
  4881  01D1  1683               	bcf	status, 6	;RP1=0, select bank1
  4882  01D2  1303               	bcf	(137)^080h,0	;volatile
  4883  01D3  1009               	line	100
  4884                           	
  4885                           l1769:	
  4886  01D4                     ;serialIO.c: 100:     PORTEbits.RE1 = 0;
  4887                           	bcf	status, 5	;RP0=0, select bank0
  4888  01D4  1283               	bcf	status, 6	;RP1=0, select bank0
  4889  01D5  1303               	bcf	(9),1	;volatile
  4890  01D6  1089               	line	101
  4891                           	
  4892                           l1771:	
  4893  01D7                     ;serialIO.c: 101:     ANSELbits.ANS6 = 0;
  4894                           	bsf	status, 5	;RP0=1, select bank3
  4895  01D7  1683               	bsf	status, 6	;RP1=1, select bank3
  4896  01D8  1703               	bcf	(392)^0180h,6	;volatile
  4897  01D9  1308               	line	102
  4898                           	
  4899                           l1773:	
  4900  01DA                     ;serialIO.c: 102:     TRISEbits.TRISE1 = 0;
  4901                           	bsf	status, 5	;RP0=1, select bank1
  4902  01DA  1683               	bcf	status, 6	;RP1=0, select bank1
  4903  01DB  1303               	bcf	(137)^080h,1	;volatile
  4904  01DC  1089               	line	105
  4905                           	
  4906                           l1775:	
  4907  01DD                     ;serialIO.c: 105:     PORTEbits.RE2 = 0;
  4908                           	bcf	status, 5	;RP0=0, select bank0
  4909  01DD  1283               	bcf	status, 6	;RP1=0, select bank0
  4910  01DE  1303               	bcf	(9),2	;volatile
  4911  01DF  1109               	line	106
  4912                           	
  4913                           l1777:	
  4914  01E0                     ;serialIO.c: 106:     ANSELbits.ANS7 = 0;
  4915                           	bsf	status, 5	;RP0=1, select bank3
  4916  01E0  1683               	bsf	status, 6	;RP1=1, select bank3
  4917  01E1  1703               	bcf	(392)^0180h,7	;volatile
  4918  01E2  1388               	line	107
  4919                           	
  4920                           l1779:	
  4921  01E3                     ;serialIO.c: 107:     TRISEbits.TRISE2 = 0;
  4922                           	bsf	status, 5	;RP0=1, select bank1
  4923  01E3  1683               	bcf	status, 6	;RP1=0, select bank1
  4924  01E4  1303               	bcf	(137)^080h,2	;volatile
  4925  01E5  1109               	line	112
  4926                           	
  4927                           l1781:	
  4928  01E6                     ;serialIO.c: 112:     ANSELbits.ANS0 = 0;
  4929                           	bsf	status, 5	;RP0=1, select bank3
  4930  01E6  1683               	bsf	status, 6	;RP1=1, select bank3
  4931  01E7  1703               	bcf	(392)^0180h,0	;volatile
  4932  01E8  1008               	line	113
  4933                           	
  4934                           l1783:	
  4935  01E9                     ;serialIO.c: 113:     TRISAbits.TRISA0 = 1;
  4936                           	bsf	status, 5	;RP0=1, select bank1
  4937  01E9  1683               	bcf	status, 6	;RP1=0, select bank1
  4938  01EA  1303               	bsf	(133)^080h,0	;volatile
  4939  01EB  1405               	line	117
  4940                           	
  4941                           l1785:	
  4942  01EC                     ;serialIO.c: 117:     SERIALIO.CLK = 0;
  4943                           	bcf	status, 5	;RP0=0, select bank0
  4944  01EC  1283               	bcf	status, 6	;RP1=0, select bank0
  4945  01ED  1303               	bcf	(9),1	;volatile
  4946  01EE  1089               	line	118
  4947                           	
  4948                           l1787:	
  4949  01EF                     ;serialIO.c: 118:     SERIALIO.OUT = 0;
  4950                           	bcf	(9),2	;volatile
  4951  01EF  1109               	line	119
  4952                           	
  4953                           l1789:	
  4954  01F0                     ;serialIO.c: 119:     SERIALIO.SHLD = 1;
  4955                           	bsf	(9),0	;volatile
  4956  01F0  1409               	line	120
  4957                           	
  4958                           l304:	
  4959  01F1                     	return
  4960  01F1  0008               	opt stack 0
  4961                           GLOBAL	__end_of_initSerialIO
  4962                           	__end_of_initSerialIO:
  4963  01F2                     	signat	_initSerialIO,12409
  4964                           	global	_initLCD
  4965                           
  4966 ;; *************** function _initLCD *****************
  4967 ;; Defined at:
  4968 ;;		line 243 in file "lcd4bitBus.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  j               1   11[COMMON] unsigned char 
  4973 ;;  i               1   10[COMMON] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0, pclath, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4983 ;;      Params:         0       0       0       0       0
  4984 ;;      Locals:         2       0       0       0       0
  4985 ;;      Temps:          3       0       0       0       0
  4986 ;;      Totals:         5       0       0       0       0
  4987 ;;Total ram usage:        5 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    2
  4990 ;; This function calls:
  4991 ;;		_lcdcmd
  4992 ;;		_lcddat
  4993 ;;		_lcdxy
  4994 ;; This function is called by:
  4995 ;;		_main
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4999                           	file	"lcd4bitBus.c"
  5000                           	line	243
  5001                           global __ptext9
  5002                           __ptext9:	;psect for function _initLCD
  5003  030D                     psect	text9
  5004                           	file	"lcd4bitBus.c"
  5005                           	line	243
  5006                           	global	__size_of_initLCD
  5007                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5008  00AA                     	
  5009                           _initLCD:	
  5010  030D                     ;incstack = 0
  5011                           	opt	stack 5
  5012                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5013                           	line	246
  5014                           	
  5015                           l1707:	
  5016  030D                     ;lcd4bitBus.c: 245:     unsigned char i,j;;lcd4bitBus.c: 246:     LCDbits.BUS = 0;
  5017                           	movlw	((0 & ((1<<4)-1))<<0)|not (((1<<4)-1)<<0)
  5018  030D  30F0               	bcf	status, 5	;RP0=0, select bank0
  5019  030E  1283               	bcf	status, 6	;RP1=0, select bank0
  5020  030F  1303               	andwf	(8),f	;volatile
  5021  0310  0588               	line	247
  5022                           	
  5023                           l1709:	
  5024  0311                     ;lcd4bitBus.c: 247:     LCDbits.RS = 0;
  5025                           	bcf	(8),4	;volatile
  5026  0311  1208               	line	248
  5027                           	
  5028                           l1711:	
  5029  0312                     ;lcd4bitBus.c: 248:     LCDbits.EN = 1;
  5030                           	bsf	(8),5	;volatile
  5031  0312  1688               	line	249
  5032                           	
  5033                           l1713:	
  5034  0313                     ;lcd4bitBus.c: 249:     TRISD = 0xC0;
  5035                           	movlw	low(0C0h)
  5036  0313  30C0               	bsf	status, 5	;RP0=1, select bank1
  5037  0314  1683               	bcf	status, 6	;RP1=0, select bank1
  5038  0315  1303               	movwf	(136)^080h	;volatile
  5039  0316  0088               	line	251
  5040                           	
  5041                           l1715:	
  5042  0317                     ;lcd4bitBus.c: 251:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  5043                           	opt asmopt_push
  5044                           opt asmopt_off
  5045                           movlw  6
  5046  0317  3006               movwf	((??_initLCD+0)+0+2),f
  5047  0318  00F9               movlw	19
  5048  0319  3013               movwf	((??_initLCD+0)+0+1),f
  5049  031A  00F8               	movlw	173
  5050  031B  30AD               movwf	((??_initLCD+0)+0),f
  5051  031C  00F7               	u1267:
  5052  031D                     decfsz	((??_initLCD+0)+0),f
  5053  031D  0BF7               	goto	u1267
  5054  031E  2B1D               	decfsz	((??_initLCD+0)+0+1),f
  5055  031F  0BF8               	goto	u1267
  5056  0320  2B1D               	decfsz	((??_initLCD+0)+0+2),f
  5057  0321  0BF9               	goto	u1267
  5058  0322  2B1D               	nop2
  5059  0323  2B24               opt asmopt_pop
  5060                           
  5061                           	line	252
  5062                           	
  5063                           l1717:	
  5064  0324                     ;lcd4bitBus.c: 252:     lcdcmd(0x20 | 0x00 );
  5065                           	movlw	low(020h)
  5066  0324  3020               	fcall	_lcdcmd
  5067  0325  120A  118A  222F  120A  118A  	line	253
  5068                           	
  5069                           l1719:	
  5070  032A                     ;lcd4bitBus.c: 253:     _delay((unsigned long)((1000/4)*(4000000/4000.0)));
  5071                           	opt asmopt_push
  5072                           opt asmopt_off
  5073                           movlw  2
  5074  032A  3002               movwf	((??_initLCD+0)+0+2),f
  5075  032B  00F9               movlw	69
  5076  032C  3045               movwf	((??_initLCD+0)+0+1),f
  5077  032D  00F8               	movlw	169
  5078  032E  30A9               movwf	((??_initLCD+0)+0),f
  5079  032F  00F7               	u1277:
  5080  0330                     decfsz	((??_initLCD+0)+0),f
  5081  0330  0BF7               	goto	u1277
  5082  0331  2B30               	decfsz	((??_initLCD+0)+0+1),f
  5083  0332  0BF8               	goto	u1277
  5084  0333  2B30               	decfsz	((??_initLCD+0)+0+2),f
  5085  0334  0BF9               	goto	u1277
  5086  0335  2B30               	nop2
  5087  0336  2B37               opt asmopt_pop
  5088                           
  5089                           	line	254
  5090                           	
  5091                           l1721:	
  5092  0337                     ;lcd4bitBus.c: 254:     lcdcmd(0x20 | 0x08 );
  5093                           	movlw	low(028h)
  5094  0337  3028               	fcall	_lcdcmd
  5095  0338  120A  118A  222F  120A  118A  	line	255
  5096                           	
  5097                           l1723:	
  5098  033D                     ;lcd4bitBus.c: 255:     _delay((unsigned long)((1000/4)*(4000000/4000.0)));
  5099                           	opt asmopt_push
  5100                           opt asmopt_off
  5101                           movlw  2
  5102  033D  3002               movwf	((??_initLCD+0)+0+2),f
  5103  033E  00F9               movlw	69
  5104  033F  3045               movwf	((??_initLCD+0)+0+1),f
  5105  0340  00F8               	movlw	169
  5106  0341  30A9               movwf	((??_initLCD+0)+0),f
  5107  0342  00F7               	u1287:
  5108  0343                     decfsz	((??_initLCD+0)+0),f
  5109  0343  0BF7               	goto	u1287
  5110  0344  2B43               	decfsz	((??_initLCD+0)+0+1),f
  5111  0345  0BF8               	goto	u1287
  5112  0346  2B43               	decfsz	((??_initLCD+0)+0+2),f
  5113  0347  0BF9               	goto	u1287
  5114  0348  2B43               	nop2
  5115  0349  2B4A               opt asmopt_pop
  5116                           
  5117                           	line	256
  5118                           	
  5119                           l1725:	
  5120  034A                     ;lcd4bitBus.c: 256:     lcdcmd(0x08 | 0x04 );
  5121                           	movlw	low(0Ch)
  5122  034A  300C               	fcall	_lcdcmd
  5123  034B  120A  118A  222F  120A  118A  	line	257
  5124                           	
  5125                           l1727:	
  5126  0350                     ;lcd4bitBus.c: 257:     _delay((unsigned long)((1000/4)*(4000000/4000.0)));
  5127                           	opt asmopt_push
  5128                           opt asmopt_off
  5129                           movlw  2
  5130  0350  3002               movwf	((??_initLCD+0)+0+2),f
  5131  0351  00F9               movlw	69
  5132  0352  3045               movwf	((??_initLCD+0)+0+1),f
  5133  0353  00F8               	movlw	169
  5134  0354  30A9               movwf	((??_initLCD+0)+0),f
  5135  0355  00F7               	u1297:
  5136  0356                     decfsz	((??_initLCD+0)+0),f
  5137  0356  0BF7               	goto	u1297
  5138  0357  2B56               	decfsz	((??_initLCD+0)+0+1),f
  5139  0358  0BF8               	goto	u1297
  5140  0359  2B56               	decfsz	((??_initLCD+0)+0+2),f
  5141  035A  0BF9               	goto	u1297
  5142  035B  2B56               	nop2
  5143  035C  2B5D               opt asmopt_pop
  5144                           
  5145                           	line	259
  5146                           	
  5147                           l1729:	
  5148  035D                     ;lcd4bitBus.c: 259:     for( j=0; j<2; j++ )
  5149                           	clrf	(initLCD@j)
  5150  035D  01FB               	
  5151                           l1731:	
  5152  035E                     	movlw	low(02h)
  5153  035E  3002               	subwf	(initLCD@j),w
  5154  035F  027B               	skipc
  5155  0360  1C03               	goto	u811
  5156  0361  2B63               	goto	u810
  5157  0362  2B64               u811:
  5158  0363                     	goto	l1735
  5159  0363  2B66               u810:
  5160  0364                     	goto	l1753
  5161  0364  2B9D               	
  5162                           l1733:	
  5163  0365                     	goto	l1753
  5164  0365  2B9D               	
  5165                           l106:	
  5166  0366                     	line	261
  5167                           	
  5168                           l1735:	
  5169  0366                     ;lcd4bitBus.c: 260:     {;lcd4bitBus.c: 261:         for( i=0; i<16; i++ )
  5170                           	clrf	(initLCD@i)
  5171  0366  01FA               	
  5172                           l1737:	
  5173  0367                     	movlw	low(010h)
  5174  0367  3010               	subwf	(initLCD@i),w
  5175  0368  027A               	skipc
  5176  0369  1C03               	goto	u821
  5177  036A  2B6C               	goto	u820
  5178  036B  2B6D               u821:
  5179  036C                     	goto	l1741
  5180  036C  2B6F               u820:
  5181  036D                     	goto	l1749
  5182  036D  2B92               	
  5183                           l1739:	
  5184  036E                     	goto	l1749
  5185  036E  2B92               	
  5186                           l108:	
  5187  036F                     	line	263
  5188                           	
  5189                           l1741:	
  5190  036F                     ;lcd4bitBus.c: 262:         {;lcd4bitBus.c: 263:             lcdxy(i,j);
  5191                           	movf	(initLCD@j),w
  5192  036F  087B               	movwf	(??_initLCD+0)+0
  5193  0370  00F7               	movf	(??_initLCD+0)+0,w
  5194  0371  0877               	movwf	(lcdxy@y)
  5195  0372  00F4               	movf	(initLCD@i),w
  5196  0373  087A               	fcall	_lcdxy
  5197  0374  120A  118A  20FA  120A  118A  	line	264
  5198                           ;lcd4bitBus.c: 264:             lcddat( 0xFF );
  5199                           	movlw	low(0FFh)
  5200  0379  30FF               	fcall	_lcddat
  5201  037A  120A  118A  2169  120A  118A  	line	265
  5202                           	
  5203                           l1743:	
  5204  037F                     ;lcd4bitBus.c: 265:             _delay((unsigned long)((1000/(2*16))*(4000000/4000.0)));
                                 
  5205                           	opt asmopt_push
  5206                           opt asmopt_off
  5207                           movlw	41
  5208  037F  3029               movwf	((??_initLCD+0)+0+1),f
  5209  0380  00F8               	movlw	65
  5210  0381  3041               movwf	((??_initLCD+0)+0),f
  5211  0382  00F7               	u1307:
  5212  0383                     decfsz	((??_initLCD+0)+0),f
  5213  0383  0BF7               	goto	u1307
  5214  0384  2B83               	decfsz	((??_initLCD+0)+0+1),f
  5215  0385  0BF8               	goto	u1307
  5216  0386  2B83               opt asmopt_pop
  5217                           
  5218                           	line	266
  5219                           	
  5220                           l1745:	
  5221  0387                     ;lcd4bitBus.c: 266:         }
  5222                           	movlw	low(01h)
  5223  0387  3001               	movwf	(??_initLCD+0)+0
  5224  0388  00F7               	movf	(??_initLCD+0)+0,w
  5225  0389  0877               	addwf	(initLCD@i),f
  5226  038A  07FA               	
  5227                           l1747:	
  5228  038B                     	movlw	low(010h)
  5229  038B  3010               	subwf	(initLCD@i),w
  5230  038C  027A               	skipc
  5231  038D  1C03               	goto	u831
  5232  038E  2B90               	goto	u830
  5233  038F  2B91               u831:
  5234  0390                     	goto	l1741
  5235  0390  2B6F               u830:
  5236  0391                     	goto	l1749
  5237  0391  2B92               	
  5238                           l109:	
  5239  0392                     	line	267
  5240                           	
  5241                           l1749:	
  5242  0392                     ;lcd4bitBus.c: 267:     }
  5243                           	movlw	low(01h)
  5244  0392  3001               	movwf	(??_initLCD+0)+0
  5245  0393  00F7               	movf	(??_initLCD+0)+0,w
  5246  0394  0877               	addwf	(initLCD@j),f
  5247  0395  07FB               	
  5248                           l1751:	
  5249  0396                     	movlw	low(02h)
  5250  0396  3002               	subwf	(initLCD@j),w
  5251  0397  027B               	skipc
  5252  0398  1C03               	goto	u841
  5253  0399  2B9B               	goto	u840
  5254  039A  2B9C               u841:
  5255  039B                     	goto	l1735
  5256  039B  2B66               u840:
  5257  039C                     	goto	l1753
  5258  039C  2B9D               	
  5259                           l107:	
  5260  039D                     	line	269
  5261                           	
  5262                           l1753:	
  5263  039D                     ;lcd4bitBus.c: 269:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  5264                           	opt asmopt_push
  5265                           opt asmopt_off
  5266                           movlw  6
  5267  039D  3006               movwf	((??_initLCD+0)+0+2),f
  5268  039E  00F9               movlw	19
  5269  039F  3013               movwf	((??_initLCD+0)+0+1),f
  5270  03A0  00F8               	movlw	173
  5271  03A1  30AD               movwf	((??_initLCD+0)+0),f
  5272  03A2  00F7               	u1317:
  5273  03A3                     decfsz	((??_initLCD+0)+0),f
  5274  03A3  0BF7               	goto	u1317
  5275  03A4  2BA3               	decfsz	((??_initLCD+0)+0+1),f
  5276  03A5  0BF8               	goto	u1317
  5277  03A6  2BA3               	decfsz	((??_initLCD+0)+0+2),f
  5278  03A7  0BF9               	goto	u1317
  5279  03A8  2BA3               	nop2
  5280  03A9  2BAA               opt asmopt_pop
  5281                           
  5282                           	line	270
  5283                           	
  5284                           l1755:	
  5285  03AA                     ;lcd4bitBus.c: 270:     lcdcmd( 0x01 );
  5286                           	movlw	low(01h)
  5287  03AA  3001               	fcall	_lcdcmd
  5288  03AB  120A  118A  222F  120A  118A  	line	271
  5289                           	
  5290                           l1757:	
  5291  03B0                     ;lcd4bitBus.c: 271:     lcdcmd( 0x02 );
  5292                           	movlw	low(02h)
  5293  03B0  3002               	fcall	_lcdcmd
  5294  03B1  120A  118A  222F  120A  118A  	line	274
  5295                           	
  5296                           l110:	
  5297  03B6                     	return
  5298  03B6  0008               	opt stack 0
  5299                           GLOBAL	__end_of_initLCD
  5300                           	__end_of_initLCD:
  5301  03B7                     	signat	_initLCD,89
  5302                           	global	_lcdxy
  5303                           
  5304 ;; *************** function _lcdxy *****************
  5305 ;; Defined at:
  5306 ;;		line 174 in file "lcd4bitBus.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  x               1    wreg     unsigned char 
  5309 ;;  y               1    4[COMMON] unsigned char 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  x               1    6[COMMON] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0, pclath, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5321 ;;      Params:         1       0       0       0       0
  5322 ;;      Locals:         1       0       0       0       0
  5323 ;;      Temps:          1       0       0       0       0
  5324 ;;      Totals:         3       0       0       0       0
  5325 ;;Total ram usage:        3 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    1
  5328 ;; This function calls:
  5329 ;;		_lcdcmd
  5330 ;; This function is called by:
  5331 ;;		_lcd
  5332 ;;		_initLCD
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5336                           	line	174
  5337                           global __ptext10
  5338                           __ptext10:	;psect for function _lcdxy
  5339  00FA                     psect	text10
  5340                           	file	"lcd4bitBus.c"
  5341                           	line	174
  5342                           	global	__size_of_lcdxy
  5343                           	__size_of_lcdxy	equ	__end_of_lcdxy-_lcdxy
  5344  0013                     	
  5345                           _lcdxy:	
  5346  00FA                     ;incstack = 0
  5347                           	opt	stack 5
  5348                           ; Regs used in _lcdxy: [wreg+status,2+status,0+pclath+cstack]
  5349                           ;lcdxy@x stored from wreg
  5350                           	movwf	(lcdxy@x)
  5351  00FA  00F6               	line	176
  5352                           	
  5353                           l1589:	
  5354  00FB                     ;lcd4bitBus.c: 174: void lcdxy( unsigned char x, unsigned char y );lcd4bitBus.c: 175: {;
                                 lcd4bitBus.c: 176:     lcdcmd( (0x80+((0x40 * y) + (x + 0x00) & 0x7F)) );
  5355                           	movf	(lcdxy@y),w
  5356  00FB  0874               	movwf	(??_lcdxy+0)+0
  5357  00FC  00F5               	movlw	06h
  5358  00FD  3006               u655:
  5359  00FE                     	clrc
  5360  00FE  1003               	rlf	(??_lcdxy+0)+0,f
  5361  00FF  0DF5               	addlw	-1
  5362  0100  3EFF               	skipz
  5363  0101  1D03               	goto	u655
  5364  0102  28FE               	movf	(lcdxy@x),w
  5365  0103  0876               	addwf	0+(??_lcdxy+0)+0,w
  5366  0104  0775               	andlw	07Fh
  5367  0105  397F               	addlw	080h
  5368  0106  3E80               	fcall	_lcdcmd
  5369  0107  120A  118A  222F  120A  118A  	line	177
  5370                           	
  5371                           l86:	
  5372  010C                     	return
  5373  010C  0008               	opt stack 0
  5374                           GLOBAL	__end_of_lcdxy
  5375                           	__end_of_lcdxy:
  5376  010D                     	signat	_lcdxy,8313
  5377                           	global	_lcddat
  5378                           
  5379 ;; *************** function _lcddat *****************
  5380 ;; Defined at:
  5381 ;;		line 149 in file "lcd4bitBus.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  dat             1    wreg     unsigned char 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  dat             1    1[COMMON] unsigned char 
  5386 ;;  nibble          1    2[COMMON] volatile struct .
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, status,0
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5396 ;;      Params:         0       0       0       0       0
  5397 ;;      Locals:         2       0       0       0       0
  5398 ;;      Temps:          1       0       0       0       0
  5399 ;;      Totals:         3       0       0       0       0
  5400 ;;Total ram usage:        3 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_lcd
  5406 ;;		_initLCD
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5410                           	line	149
  5411                           global __ptext11
  5412                           __ptext11:	;psect for function _lcddat
  5413  0169                     psect	text11
  5414                           	file	"lcd4bitBus.c"
  5415                           	line	149
  5416                           	global	__size_of_lcddat
  5417                           	__size_of_lcddat	equ	__end_of_lcddat-_lcddat
  5418  002A                     	
  5419                           _lcddat:	
  5420  0169                     ;incstack = 0
  5421                           	opt	stack 6
  5422                           ; Regs used in _lcddat: [wreg+status,2+status,0]
  5423                           ;lcddat@dat stored from wreg
  5424                           	movwf	(lcddat@dat)
  5425  0169  00F1               	line	152
  5426                           	
  5427                           l1569:	
  5428  016A                     ;lcd4bitBus.c: 149: void lcddat( unsigned char dat );lcd4bitBus.c: 150: {;lcd4bitBus.c: 
                                 151:     volatile REGnibble_t nibble;;lcd4bitBus.c: 152:     nibble.HILO = dat;
  5429                           	movf	(lcddat@dat),w
  5430  016A  0871               	movwf	(??_lcddat+0)+0
  5431  016B  00F0               	movf	(??_lcddat+0)+0,w
  5432  016C  0870               	movwf	(lcddat@nibble)	;volatile
  5433  016D  00F2               	line	154
  5434                           	
  5435                           l1571:	
  5436  016E                     ;lcd4bitBus.c: 154:     LCDbits.RS = 1;
  5437                           	bcf	status, 5	;RP0=0, select bank0
  5438  016E  1283               	bcf	status, 6	;RP1=0, select bank0
  5439  016F  1303               	bsf	(8),4	;volatile
  5440  0170  1608               	line	155
  5441                           	
  5442                           l1573:	
  5443  0171                     ;lcd4bitBus.c: 155:     LCDbits.BUS = nibble.HI;
  5444                           	swapf	(lcddat@nibble),w	;volatile
  5445  0171  0E72               	andlw	(1<<4)-1
  5446  0172  390F               	movwf	(??_lcddat+0)+0
  5447  0173  00F0               	movf	(8),w	;volatile
  5448  0174  0808               	xorwf	(??_lcddat+0)+0,w
  5449  0175  0670               	andlw	not ((1<<4)-1)
  5450  0176  39F0               	xorwf	(??_lcddat+0)+0,w
  5451  0177  0670               	movwf	(8)	;volatile
  5452  0178  0088               	line	156
  5453                           	
  5454                           l1575:	
  5455  0179                     ;lcd4bitBus.c: 156:     LCDbits.EN = 0;
  5456                           	bcf	(8),5	;volatile
  5457  0179  1288               	line	157
  5458                           	
  5459                           l1577:	
  5460  017A                     ;lcd4bitBus.c: 157:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5461                           	opt asmopt_push
  5462                           opt asmopt_off
  5463                           	movlw	13
  5464  017A  300D               movwf	((??_lcddat+0)+0),f
  5465  017B  00F0               	u1327:
  5466  017C                     decfsz	(??_lcddat+0)+0,f
  5467  017C  0BF0               	goto	u1327
  5468  017D  297C               opt asmopt_pop
  5469                           
  5470                           	line	158
  5471                           	
  5472                           l1579:	
  5473  017E                     ;lcd4bitBus.c: 158:     LCDbits.EN = 1;
  5474                           	bcf	status, 5	;RP0=0, select bank0
  5475  017E  1283               	bcf	status, 6	;RP1=0, select bank0
  5476  017F  1303               	bsf	(8),5	;volatile
  5477  0180  1688               	line	160
  5478                           	
  5479                           l1581:	
  5480  0181                     ;lcd4bitBus.c: 160:     LCDbits.RS = 1;
  5481                           	bsf	(8),4	;volatile
  5482  0181  1608               	line	161
  5483                           ;lcd4bitBus.c: 161:     LCDbits.BUS = nibble.LO;
  5484                           	movf	(lcddat@nibble),w	;volatile
  5485  0182  0872               	andlw	(1<<4)-1
  5486  0183  390F               	movwf	(??_lcddat+0)+0
  5487  0184  00F0               	movf	(8),w	;volatile
  5488  0185  0808               	xorwf	(??_lcddat+0)+0,w
  5489  0186  0670               	andlw	not ((1<<4)-1)
  5490  0187  39F0               	xorwf	(??_lcddat+0)+0,w
  5491  0188  0670               	movwf	(8)	;volatile
  5492  0189  0088               	line	162
  5493                           	
  5494                           l1583:	
  5495  018A                     ;lcd4bitBus.c: 162:     LCDbits.EN = 0;
  5496                           	bcf	(8),5	;volatile
  5497  018A  1288               	line	163
  5498                           	
  5499                           l1585:	
  5500  018B                     ;lcd4bitBus.c: 163:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5501                           	opt asmopt_push
  5502                           opt asmopt_off
  5503                           	movlw	13
  5504  018B  300D               movwf	((??_lcddat+0)+0),f
  5505  018C  00F0               	u1337:
  5506  018D                     decfsz	(??_lcddat+0)+0,f
  5507  018D  0BF0               	goto	u1337
  5508  018E  298D               opt asmopt_pop
  5509                           
  5510                           	line	164
  5511                           	
  5512                           l1587:	
  5513  018F                     ;lcd4bitBus.c: 164:     LCDbits.EN = 1;
  5514                           	bcf	status, 5	;RP0=0, select bank0
  5515  018F  1283               	bcf	status, 6	;RP1=0, select bank0
  5516  0190  1303               	bsf	(8),5	;volatile
  5517  0191  1688               	line	165
  5518                           	
  5519                           l83:	
  5520  0192                     	return
  5521  0192  0008               	opt stack 0
  5522                           GLOBAL	__end_of_lcddat
  5523                           	__end_of_lcddat:
  5524  0193                     	signat	_lcddat,4217
  5525                           	global	_initKeyboard
  5526                           
  5527 ;; *************** function _initKeyboard *****************
  5528 ;; Defined at:
  5529 ;;		line 103 in file "keyboard.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5543 ;;      Params:         0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0
  5546 ;;      Totals:         0       0       0       0       0
  5547 ;;Total ram usage:        0 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_main
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5556                           	file	"keyboard.c"
  5557                           	line	103
  5558                           global __ptext12
  5559                           __ptext12:	;psect for function _initKeyboard
  5560  00E7                     psect	text12
  5561                           	file	"keyboard.c"
  5562                           	line	103
  5563                           	global	__size_of_initKeyboard
  5564                           	__size_of_initKeyboard	equ	__end_of_initKeyboard-_initKeyboard
  5565  0013                     	
  5566                           _initKeyboard:	
  5567  00E7                     ;incstack = 0
  5568                           	opt	stack 7
  5569                           ; Regs used in _initKeyboard: [wreg+status,2]
  5570                           	line	105
  5571                           	
  5572                           l1685:	
  5573  00E7                     ;keyboard.c: 105:     PORTB = 0xFF;
  5574                           	movlw	low(0FFh)
  5575  00E7  30FF               	bcf	status, 5	;RP0=0, select bank0
  5576  00E8  1283               	bcf	status, 6	;RP1=0, select bank0
  5577  00E9  1303               	movwf	(6)	;volatile
  5578  00EA  0086               	line	106
  5579                           	
  5580                           l1687:	
  5581  00EB                     ;keyboard.c: 106:     ANSELH = 0;
  5582                           	bsf	status, 5	;RP0=1, select bank3
  5583  00EB  1683               	bsf	status, 6	;RP1=1, select bank3
  5584  00EC  1703               	clrf	(393)^0180h	;volatile
  5585  00ED  0189               	line	107
  5586                           	
  5587                           l1689:	
  5588  00EE                     ;keyboard.c: 107:     TRISB = 0x0F;
  5589                           	movlw	low(0Fh)
  5590  00EE  300F               	bsf	status, 5	;RP0=1, select bank1
  5591  00EF  1683               	bcf	status, 6	;RP1=0, select bank1
  5592  00F0  1303               	movwf	(134)^080h	;volatile
  5593  00F1  0086               	line	108
  5594                           	
  5595                           l1691:	
  5596  00F2                     ;keyboard.c: 108:     WPUB = 0xFF;
  5597                           	movlw	low(0FFh)
  5598  00F2  30FF               	movwf	(149)^080h	;volatile
  5599  00F3  0095               	line	109
  5600                           	
  5601                           l1693:	
  5602  00F4                     ;keyboard.c: 109:     OPTION_REGbits.nRBPU = 0;
  5603                           	bcf	(129)^080h,7	;volatile
  5604  00F4  1381               	line	111
  5605                           	
  5606                           l1695:	
  5607  00F5                     ;keyboard.c: 111:     prevKey = 0;
  5608                           	bcf	status, 5	;RP0=0, select bank0
  5609  00F5  1283               	bcf	status, 6	;RP1=0, select bank0
  5610  00F6  1303               	clrf	(_prevKey)
  5611  00F7  01A4               	line	112
  5612                           	
  5613                           l1697:	
  5614  00F8                     ;keyboard.c: 112:     currKey = 0;
  5615                           	clrf	(_currKey)
  5616  00F8  01A3               	line	113
  5617                           	
  5618                           l62:	
  5619  00F9                     	return
  5620  00F9  0008               	opt stack 0
  5621                           GLOBAL	__end_of_initKeyboard
  5622                           	__end_of_initKeyboard:
  5623  00FA                     	signat	_initKeyboard,89
  5624                           	global	_getFIFO
  5625                           
  5626 ;; *************** function _getFIFO *****************
  5627 ;; Defined at:
  5628 ;;		line 23 in file "fifo.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;		None
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  aux             1    1[COMMON] unsigned char 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      unsigned char 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5642 ;;      Params:         0       0       0       0       0
  5643 ;;      Locals:         1       0       0       0       0
  5644 ;;      Temps:          1       0       0       0       0
  5645 ;;      Totals:         2       0       0       0       0
  5646 ;;Total ram usage:        2 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; This function calls:
  5649 ;;		Nothing
  5650 ;; This function is called by:
  5651 ;;		_main
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5655                           	file	"fifo.c"
  5656                           	line	23
  5657                           global __ptext13
  5658                           __ptext13:	;psect for function _getFIFO
  5659  010D                     psect	text13
  5660                           	file	"fifo.c"
  5661                           	line	23
  5662                           	global	__size_of_getFIFO
  5663                           	__size_of_getFIFO	equ	__end_of_getFIFO-_getFIFO
  5664  0017                     	
  5665                           _getFIFO:	
  5666  010D                     ;incstack = 0
  5667                           	opt	stack 7
  5668                           ; Regs used in _getFIFO: [wreg-fsr0h+status,2+status,0]
  5669                           	line	25
  5670                           	
  5671                           l1617:	
  5672  010D                     ;fifo.c: 25:     unsigned char aux = 0;
  5673                           	clrf	(getFIFO@aux)
  5674  010D  01F1               	line	27
  5675                           	
  5676                           l1619:	
  5677  010E                     ;fifo.c: 27:     if( fifoTail != fifoHead )
  5678                           	movf	(_fifoTail),w
  5679  010E  087C               	xorwf	(_fifoHead),w
  5680  010F  067D               	skipnz
  5681  0110  1903               	goto	u691
  5682  0111  2913               	goto	u690
  5683  0112  2914               u691:
  5684  0113                     	goto	l1625
  5685  0113  2921               u690:
  5686  0114                     	line	29
  5687                           	
  5688                           l1621:	
  5689  0114                     ;fifo.c: 28:     {;fifo.c: 29:         aux = fifo[ fifoTail ];
  5690                           	movf	(_fifoTail),w
  5691  0114  087C               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5692  0115  3E25               	movwf	fsr0
  5693  0116  0084               	bcf	status, 7	;select IRP bank0
  5694  0117  1383               	movf	indf,w
  5695  0118  0800               	movwf	(??_getFIFO+0)+0
  5696  0119  00F0               	movf	(??_getFIFO+0)+0,w
  5697  011A  0870               	movwf	(getFIFO@aux)
  5698  011B  00F1               	line	30
  5699                           	
  5700                           l1623:	
  5701  011C                     ;fifo.c: 30:         ++fifoTail;
  5702                           	movlw	low(01h)
  5703  011C  3001               	movwf	(??_getFIFO+0)+0
  5704  011D  00F0               	movf	(??_getFIFO+0)+0,w
  5705  011E  0870               	addwf	(_fifoTail),f
  5706  011F  07FC               	goto	l1625
  5707  0120  2921               	line	31
  5708                           ;fifo.c: 31:     }
  5709                           	
  5710                           l12:	
  5711  0121                     	line	32
  5712                           	
  5713                           l1625:	
  5714  0121                     ;fifo.c: 32:     return( aux );
  5715                           	movf	(getFIFO@aux),w
  5716  0121  0871               	goto	l13
  5717  0122  2923               	
  5718                           l1627:	
  5719  0123                     	line	33
  5720                           	
  5721                           l13:	
  5722  0123                     	return
  5723  0123  0008               	opt stack 0
  5724                           GLOBAL	__end_of_getFIFO
  5725                           	__end_of_getFIFO:
  5726  0124                     	signat	_getFIFO,89
  5727                           	global	_displayFIFO
  5728                           
  5729 ;; *************** function _displayFIFO *****************
  5730 ;; Defined at:
  5731 ;;		line 40 in file "fifo.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;		None
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      PTR void 
  5738 ;; Registers used:
  5739 ;;		wreg
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5745 ;;      Params:         0       0       0       0       0
  5746 ;;      Locals:         0       0       0       0       0
  5747 ;;      Temps:          0       0       0       0       0
  5748 ;;      Totals:         0       0       0       0       0
  5749 ;;Total ram usage:        0 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; This function calls:
  5752 ;;		Nothing
  5753 ;; This function is called by:
  5754 ;;		_main
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5758                           	line	40
  5759                           global __ptext14
  5760                           __ptext14:	;psect for function _displayFIFO
  5761  00B8                     psect	text14
  5762                           	file	"fifo.c"
  5763                           	line	40
  5764                           	global	__size_of_displayFIFO
  5765                           	__size_of_displayFIFO	equ	__end_of_displayFIFO-_displayFIFO
  5766  0003                     	
  5767                           _displayFIFO:	
  5768  00B8                     ;incstack = 0
  5769                           	opt	stack 7
  5770                           ; Regs used in _displayFIFO: [wreg]
  5771                           	line	42
  5772                           	
  5773                           l1629:	
  5774  00B8                     ;fifo.c: 42:     return( fifo );
  5775                           	movlw	(low(_fifo|((0x0)<<8)))&0ffh
  5776  00B8  3025               	goto	l19
  5777  00B9  28BA               	
  5778                           l1631:	
  5779  00BA                     	line	43
  5780                           	
  5781                           l19:	
  5782  00BA                     	return
  5783  00BA  0008               	opt stack 0
  5784                           GLOBAL	__end_of_displayFIFO
  5785                           	__end_of_displayFIFO:
  5786  00BB                     	signat	_displayFIFO,89
  5787                           	global	_delFIFO
  5788                           
  5789 ;; *************** function _delFIFO *****************
  5790 ;; Defined at:
  5791 ;;		line 45 in file "fifo.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  n               1    wreg     unsigned char 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  n               1    1[COMMON] unsigned char 
  5796 ;;  ret             1    2[COMMON] unsigned char 
  5797 ;; Return value:  Size  Location     Type
  5798 ;;                  1    wreg      unsigned char 
  5799 ;; Registers used:
  5800 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5801 ;; Tracked objects:
  5802 ;;		On entry : 0/0
  5803 ;;		On exit  : 0/0
  5804 ;;		Unchanged: 0/0
  5805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5806 ;;      Params:         0       0       0       0       0
  5807 ;;      Locals:         2       0       0       0       0
  5808 ;;      Temps:          1       0       0       0       0
  5809 ;;      Totals:         3       0       0       0       0
  5810 ;;Total ram usage:        3 bytes
  5811 ;; Hardware stack levels used:    1
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_main
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5819                           	line	45
  5820                           global __ptext15
  5821                           __ptext15:	;psect for function _delFIFO
  5822  0124                     psect	text15
  5823                           	file	"fifo.c"
  5824                           	line	45
  5825                           	global	__size_of_delFIFO
  5826                           	__size_of_delFIFO	equ	__end_of_delFIFO-_delFIFO
  5827  0021                     	
  5828                           _delFIFO:	
  5829  0124                     ;incstack = 0
  5830                           	opt	stack 7
  5831                           ; Regs used in _delFIFO: [wreg-fsr0h+status,2+status,0]
  5832                           ;delFIFO@n stored from wreg
  5833                           	movwf	(delFIFO@n)
  5834  0124  00F1               	line	48
  5835                           	
  5836                           l1633:	
  5837  0125                     ;fifo.c: 45: unsigned char delFIFO( unsigned char n );fifo.c: 46: {;fifo.c: 47:     unsi
                                 gned char ret;;fifo.c: 48:     while( n && fifoHead )
  5838                           	goto	l22
  5839  0125  2936               	
  5840                           l23:	
  5841  0126                     	line	50
  5842                           	
  5843                           l1635:	
  5844  0126                     ;fifo.c: 49:     {;fifo.c: 50:         --fifoHead;
  5845                           	movlw	01h
  5846  0126  3001               	subwf	(_fifoHead),f
  5847  0127  02FD               	line	51
  5848                           	
  5849                           l1637:	
  5850  0128                     ;fifo.c: 51:         ret = fifo[fifoHead];
  5851                           	movf	(_fifoHead),w
  5852  0128  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5853  0129  3E25               	movwf	fsr0
  5854  012A  0084               	bcf	status, 7	;select IRP bank0
  5855  012B  1383               	movf	indf,w
  5856  012C  0800               	movwf	(??_delFIFO+0)+0
  5857  012D  00F0               	movf	(??_delFIFO+0)+0,w
  5858  012E  0870               	movwf	(delFIFO@ret)
  5859  012F  00F2               	line	52
  5860                           	
  5861                           l1639:	
  5862  0130                     ;fifo.c: 52:         fifo[ fifoHead ] = 0;
  5863                           	movf	(_fifoHead),w
  5864  0130  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5865  0131  3E25               	movwf	fsr0
  5866  0132  0084               	clrf	indf
  5867  0133  0180               	line	53
  5868                           ;fifo.c: 53:         --n;
  5869                           	movlw	01h
  5870  0134  3001               	subwf	(delFIFO@n),f
  5871  0135  02F1               	line	54
  5872                           ;fifo.c: 54:     }
  5873                           	
  5874                           l22:	
  5875  0136                     	line	48
  5876                           ;fifo.c: 48:     while( n && fifoHead )
  5877                           	movf	((delFIFO@n)),w
  5878  0136  0871               	btfsc	status,2
  5879  0137  1903               	goto	u701
  5880  0138  293A               	goto	u700
  5881  0139  293B               u701:
  5882  013A                     	goto	l1643
  5883  013A  2942               u700:
  5884  013B                     	
  5885                           l1641:	
  5886  013B                     	movf	((_fifoHead)),w
  5887  013B  087D               	btfss	status,2
  5888  013C  1D03               	goto	u711
  5889  013D  293F               	goto	u710
  5890  013E  2940               u711:
  5891  013F                     	goto	l1635
  5892  013F  2926               u710:
  5893  0140                     	goto	l1643
  5894  0140  2942               	
  5895                           l25:	
  5896  0141                     	goto	l1643
  5897  0141  2942               	
  5898                           l26:	
  5899  0142                     	line	55
  5900                           	
  5901                           l1643:	
  5902  0142                     ;fifo.c: 55:     return( ret );
  5903                           	movf	(delFIFO@ret),w
  5904  0142  0872               	goto	l27
  5905  0143  2944               	
  5906                           l1645:	
  5907  0144                     	line	56
  5908                           	
  5909                           l27:	
  5910  0144                     	return
  5911  0144  0008               	opt stack 0
  5912                           GLOBAL	__end_of_delFIFO
  5913                           	__end_of_delFIFO:
  5914  0145                     	signat	_delFIFO,4217
  5915                           	global	_currentKey
  5916                           
  5917 ;; *************** function _currentKey *****************
  5918 ;; Defined at:
  5919 ;;		line 65 in file "keyboard.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      unsigned char 
  5926 ;; Registers used:
  5927 ;;		wreg
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5933 ;;      Params:         0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0
  5936 ;;      Totals:         0       0       0       0       0
  5937 ;;Total ram usage:        0 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_main
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5946                           	file	"keyboard.c"
  5947                           	line	65
  5948                           global __ptext16
  5949                           __ptext16:	;psect for function _currentKey
  5950  00BB                     psect	text16
  5951                           	file	"keyboard.c"
  5952                           	line	65
  5953                           	global	__size_of_currentKey
  5954                           	__size_of_currentKey	equ	__end_of_currentKey-_currentKey
  5955  0005                     	
  5956                           _currentKey:	
  5957  00BB                     ;incstack = 0
  5958                           	opt	stack 7
  5959                           ; Regs used in _currentKey: [wreg]
  5960                           	line	67
  5961                           	
  5962                           l1651:	
  5963  00BB                     ;keyboard.c: 67:     return( currKey );
  5964                           	bcf	status, 5	;RP0=0, select bank0
  5965  00BB  1283               	bcf	status, 6	;RP1=0, select bank0
  5966  00BC  1303               	movf	(_currKey),w
  5967  00BD  0823               	goto	l51
  5968  00BE  28BF               	
  5969                           l1653:	
  5970  00BF                     	line	68
  5971                           	
  5972                           l51:	
  5973  00BF                     	return
  5974  00BF  0008               	opt stack 0
  5975                           GLOBAL	__end_of_currentKey
  5976                           	__end_of_currentKey:
  5977  00C0                     	signat	_currentKey,89
  5978                           	global	_clearLCD
  5979                           
  5980 ;; *************** function _clearLCD *****************
  5981 ;; Defined at:
  5982 ;;		line 276 in file "lcd4bitBus.c"
  5983 ;; Parameters:    Size  Location     Type
  5984 ;;		None
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		wreg, status,2, status,0, pclath, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/0
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5996 ;;      Params:         0       0       0       0       0
  5997 ;;      Locals:         0       0       0       0       0
  5998 ;;      Temps:          0       0       0       0       0
  5999 ;;      Totals:         0       0       0       0       0
  6000 ;;Total ram usage:        0 bytes
  6001 ;; Hardware stack levels used:    1
  6002 ;; Hardware stack levels required when called:    1
  6003 ;; This function calls:
  6004 ;;		_lcdcmd
  6005 ;; This function is called by:
  6006 ;;		_main
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6010                           	file	"lcd4bitBus.c"
  6011                           	line	276
  6012                           global __ptext17
  6013                           __ptext17:	;psect for function _clearLCD
  6014  00CA                     psect	text17
  6015                           	file	"lcd4bitBus.c"
  6016                           	line	276
  6017                           	global	__size_of_clearLCD
  6018                           	__size_of_clearLCD	equ	__end_of_clearLCD-_clearLCD
  6019  0007                     	
  6020                           _clearLCD:	
  6021  00CA                     ;incstack = 0
  6022                           	opt	stack 6
  6023                           ; Regs used in _clearLCD: [wreg+status,2+status,0+pclath+cstack]
  6024                           	line	278
  6025                           	
  6026                           l1759:	
  6027  00CA                     ;lcd4bitBus.c: 278:     lcdcmd(0x01);
  6028                           	movlw	low(01h)
  6029  00CA  3001               	fcall	_lcdcmd
  6030  00CB  120A  118A  222F  120A  118A  	line	279
  6031                           	
  6032                           l113:	
  6033  00D0                     	return
  6034  00D0  0008               	opt stack 0
  6035                           GLOBAL	__end_of_clearLCD
  6036                           	__end_of_clearLCD:
  6037  00D1                     	signat	_clearLCD,89
  6038                           	global	_lcdcmd
  6039                           
  6040 ;; *************** function _lcdcmd *****************
  6041 ;; Defined at:
  6042 ;;		line 115 in file "lcd4bitBus.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  cmd             1    wreg     unsigned char 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  cmd             1    2[COMMON] unsigned char 
  6047 ;;  nibble          1    3[COMMON] volatile struct .
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  1    wreg      void 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2, status,0
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6057 ;;      Params:         0       0       0       0       0
  6058 ;;      Locals:         2       0       0       0       0
  6059 ;;      Temps:          2       0       0       0       0
  6060 ;;      Totals:         4       0       0       0       0
  6061 ;;Total ram usage:        4 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; This function calls:
  6064 ;;		Nothing
  6065 ;; This function is called by:
  6066 ;;		_lcdxy
  6067 ;;		_initLCD
  6068 ;;		_clearLCD
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6072                           	line	115
  6073                           global __ptext18
  6074                           __ptext18:	;psect for function _lcdcmd
  6075  022F                     psect	text18
  6076                           	file	"lcd4bitBus.c"
  6077                           	line	115
  6078                           	global	__size_of_lcdcmd
  6079                           	__size_of_lcdcmd	equ	__end_of_lcdcmd-_lcdcmd
  6080  005F                     	
  6081                           _lcdcmd:	
  6082  022F                     ;incstack = 0
  6083                           	opt	stack 5
  6084                           ; Regs used in _lcdcmd: [wreg+status,2+status,0]
  6085                           ;lcdcmd@cmd stored from wreg
  6086                           	movwf	(lcdcmd@cmd)
  6087  022F  00F2               	line	119
  6088                           	
  6089                           l1535:	
  6090  0230                     ;lcd4bitBus.c: 115: void lcdcmd( unsigned char cmd );lcd4bitBus.c: 116: {;lcd4bitBus.c: 
                                 117:     volatile REGnibble_t nibble;;lcd4bitBus.c: 119:     nibble.HILO = cmd;
  6091                           	movf	(lcdcmd@cmd),w
  6092  0230  0872               	movwf	(??_lcdcmd+0)+0
  6093  0231  00F0               	movf	(??_lcdcmd+0)+0,w
  6094  0232  0870               	movwf	(lcdcmd@nibble)	;volatile
  6095  0233  00F3               	line	120
  6096                           	
  6097                           l1537:	
  6098  0234                     ;lcd4bitBus.c: 120:     LCDbits.RS = 0;
  6099                           	bcf	status, 5	;RP0=0, select bank0
  6100  0234  1283               	bcf	status, 6	;RP1=0, select bank0
  6101  0235  1303               	bcf	(8),4	;volatile
  6102  0236  1208               	line	121
  6103                           	
  6104                           l1539:	
  6105  0237                     ;lcd4bitBus.c: 121:     LCDbits.BUS = nibble.HI;
  6106                           	swapf	(lcdcmd@nibble),w	;volatile
  6107  0237  0E73               	andlw	(1<<4)-1
  6108  0238  390F               	movwf	(??_lcdcmd+0)+0
  6109  0239  00F0               	movf	(8),w	;volatile
  6110  023A  0808               	xorwf	(??_lcdcmd+0)+0,w
  6111  023B  0670               	andlw	not ((1<<4)-1)
  6112  023C  39F0               	xorwf	(??_lcdcmd+0)+0,w
  6113  023D  0670               	movwf	(8)	;volatile
  6114  023E  0088               	line	123
  6115                           	
  6116                           l1541:	
  6117  023F                     ;lcd4bitBus.c: 123:     LCDbits.EN = 0;
  6118                           	bcf	(8),5	;volatile
  6119  023F  1288               	line	124
  6120                           	
  6121                           l1543:	
  6122  0240                     ;lcd4bitBus.c: 124:     if( cmd == 0x01 || cmd == 0x02 )
  6123                           		decf	((lcdcmd@cmd)),w
  6124  0240  0372               	btfsc	status,2
  6125  0241  1903               	goto	u601
  6126  0242  2A44               	goto	u600
  6127  0243  2A45               u601:
  6128  0244                     	goto	l1547
  6129  0244  2A4C               u600:
  6130  0245                     	
  6131                           l1545:	
  6132  0245                     		movlw	2
  6133  0245  3002               	xorwf	((lcdcmd@cmd)),w
  6134  0246  0672               	btfss	status,2
  6135  0247  1D03               	goto	u611
  6136  0248  2A4A               	goto	u610
  6137  0249  2A4B               u611:
  6138  024A                     	goto	l1549
  6139  024A  2A56               u610:
  6140  024B                     	goto	l1547
  6141  024B  2A4C               	
  6142                           l73:	
  6143  024C                     	line	125
  6144                           	
  6145                           l1547:	
  6146  024C                     ;lcd4bitBus.c: 125:         _delay((unsigned long)((2)*(4000000/4000.0)));
  6147                           	opt asmopt_push
  6148                           opt asmopt_off
  6149                           movlw	3
  6150  024C  3003               movwf	((??_lcdcmd+0)+0+1),f
  6151  024D  00F1               	movlw	151
  6152  024E  3097               movwf	((??_lcdcmd+0)+0),f
  6153  024F  00F0               	u1347:
  6154  0250                     decfsz	((??_lcdcmd+0)+0),f
  6155  0250  0BF0               	goto	u1347
  6156  0251  2A50               	decfsz	((??_lcdcmd+0)+0+1),f
  6157  0252  0BF1               	goto	u1347
  6158  0253  2A50               	nop2
  6159  0254  2A55               opt asmopt_pop
  6160                           
  6161                           	goto	l1551
  6162  0255  2A5B               	line	126
  6163                           ;lcd4bitBus.c: 126:     else
  6164                           	
  6165                           l71:	
  6166  0256                     	line	127
  6167                           	
  6168                           l1549:	
  6169  0256                     ;lcd4bitBus.c: 127:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  6170                           	opt asmopt_push
  6171                           opt asmopt_off
  6172                           	movlw	13
  6173  0256  300D               movwf	((??_lcdcmd+0)+0),f
  6174  0257  00F0               	u1357:
  6175  0258                     decfsz	(??_lcdcmd+0)+0,f
  6176  0258  0BF0               	goto	u1357
  6177  0259  2A58               opt asmopt_pop
  6178                           
  6179                           	goto	l1551
  6180  025A  2A5B               	
  6181                           l74:	
  6182  025B                     	line	128
  6183                           	
  6184                           l1551:	
  6185  025B                     ;lcd4bitBus.c: 128:     LCDbits.EN = 1;
  6186                           	bcf	status, 5	;RP0=0, select bank0
  6187  025B  1283               	bcf	status, 6	;RP1=0, select bank0
  6188  025C  1303               	bsf	(8),5	;volatile
  6189  025D  1688               	line	131
  6190                           	
  6191                           l1553:	
  6192  025E                     ;lcd4bitBus.c: 131:     if( cmd != (0x20 | 0x00) )
  6193                           		movlw	32
  6194  025E  3020               	xorwf	((lcdcmd@cmd)),w
  6195  025F  0672               	btfsc	status,2
  6196  0260  1903               	goto	u621
  6197  0261  2A63               	goto	u620
  6198  0262  2A64               u621:
  6199  0263                     	goto	l80
  6200  0263  2A8D               u620:
  6201  0264                     	line	133
  6202                           	
  6203                           l1555:	
  6204  0264                     ;lcd4bitBus.c: 132:     {;lcd4bitBus.c: 133:         LCDbits.RS = 0;
  6205                           	bcf	(8),4	;volatile
  6206  0264  1208               	line	134
  6207                           	
  6208                           l1557:	
  6209  0265                     ;lcd4bitBus.c: 134:         LCDbits.BUS = nibble.LO;
  6210                           	movf	(lcdcmd@nibble),w	;volatile
  6211  0265  0873               	andlw	(1<<4)-1
  6212  0266  390F               	movwf	(??_lcdcmd+0)+0
  6213  0267  00F0               	movf	(8),w	;volatile
  6214  0268  0808               	xorwf	(??_lcdcmd+0)+0,w
  6215  0269  0670               	andlw	not ((1<<4)-1)
  6216  026A  39F0               	xorwf	(??_lcdcmd+0)+0,w
  6217  026B  0670               	movwf	(8)	;volatile
  6218  026C  0088               	line	135
  6219                           	
  6220                           l1559:	
  6221  026D                     ;lcd4bitBus.c: 135:         LCDbits.EN = 0;
  6222                           	bcf	(8),5	;volatile
  6223  026D  1288               	line	136
  6224                           ;lcd4bitBus.c: 136:         if( cmd == 0x01 || cmd == 0x02 )
  6225                           		decf	((lcdcmd@cmd)),w
  6226  026E  0372               	btfsc	status,2
  6227  026F  1903               	goto	u631
  6228  0270  2A72               	goto	u630
  6229  0271  2A73               u631:
  6230  0272                     	goto	l1563
  6231  0272  2A7A               u630:
  6232  0273                     	
  6233                           l1561:	
  6234  0273                     		movlw	2
  6235  0273  3002               	xorwf	((lcdcmd@cmd)),w
  6236  0274  0672               	btfss	status,2
  6237  0275  1D03               	goto	u641
  6238  0276  2A78               	goto	u640
  6239  0277  2A79               u641:
  6240  0278                     	goto	l1565
  6241  0278  2A84               u640:
  6242  0279                     	goto	l1563
  6243  0279  2A7A               	
  6244                           l78:	
  6245  027A                     	line	137
  6246                           	
  6247                           l1563:	
  6248  027A                     ;lcd4bitBus.c: 137:             _delay((unsigned long)((2)*(4000000/4000.0)));
  6249                           	opt asmopt_push
  6250                           opt asmopt_off
  6251                           movlw	3
  6252  027A  3003               movwf	((??_lcdcmd+0)+0+1),f
  6253  027B  00F1               	movlw	151
  6254  027C  3097               movwf	((??_lcdcmd+0)+0),f
  6255  027D  00F0               	u1367:
  6256  027E                     decfsz	((??_lcdcmd+0)+0),f
  6257  027E  0BF0               	goto	u1367
  6258  027F  2A7E               	decfsz	((??_lcdcmd+0)+0+1),f
  6259  0280  0BF1               	goto	u1367
  6260  0281  2A7E               	nop2
  6261  0282  2A83               opt asmopt_pop
  6262                           
  6263                           	goto	l1567
  6264  0283  2A89               	line	138
  6265                           ;lcd4bitBus.c: 138:         else
  6266                           	
  6267                           l76:	
  6268  0284                     	line	139
  6269                           	
  6270                           l1565:	
  6271  0284                     ;lcd4bitBus.c: 139:             _delay((unsigned long)((40)*(4000000/4000000.0)));
  6272                           	opt asmopt_push
  6273                           opt asmopt_off
  6274                           	movlw	13
  6275  0284  300D               movwf	((??_lcdcmd+0)+0),f
  6276  0285  00F0               	u1377:
  6277  0286                     decfsz	(??_lcdcmd+0)+0,f
  6278  0286  0BF0               	goto	u1377
  6279  0287  2A86               opt asmopt_pop
  6280                           
  6281                           	goto	l1567
  6282  0288  2A89               	
  6283                           l79:	
  6284  0289                     	line	140
  6285                           	
  6286                           l1567:	
  6287  0289                     ;lcd4bitBus.c: 140:         LCDbits.EN = 1;
  6288                           	bcf	status, 5	;RP0=0, select bank0
  6289  0289  1283               	bcf	status, 6	;RP1=0, select bank0
  6290  028A  1303               	bsf	(8),5	;volatile
  6291  028B  1688               	goto	l80
  6292  028C  2A8D               	line	141
  6293                           ;lcd4bitBus.c: 141:     }
  6294                           	
  6295                           l75:	
  6296  028D                     	line	142
  6297                           	
  6298                           l80:	
  6299  028D                     	return
  6300  028D  0008               	opt stack 0
  6301                           GLOBAL	__end_of_lcdcmd
  6302                           	__end_of_lcdcmd:
  6303  028E                     	signat	_lcdcmd,4217
  6304                           global	___latbits
  6305                           ___latbits	equ	2
  6306  0002                     	global	btemp
  6307                           	btemp set 07Eh
  6308  007E                     
  6309                           	DABS	1,126,2	;btemp
  6310                           	global	wtemp0
  6311                           	wtemp0 set btemp+0
  6312  007E                     	end


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     13      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
		 -> main@atuador(BANK0[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
		 -> main@sensor(BANK0[1]), 

    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 

    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 

    lcd@ptr	PTR const unsigned char  size(1) Largest target is 16
		 -> fifo(BANK0[16]), 

    sp__displayFIFO	PTR void  size(1) Largest target is 16
		 -> fifo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_initLCD
    _serialIOscan->_serialIObyteShift
    _lcd->_lcdxy
    _initLCD->_lcdxy
    _lcdxy->_lcdcmd
    _clearLCD->_lcdcmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    3378
                                              0 BANK0     13    13      0
                           _clearLCD
                         _currentKey
                            _delFIFO
                        _displayFIFO
                            _getFIFO
                       _initKeyboard
                            _initLCD
                       _initSerialIO
                       _keyboardScan
                                _lcd
                        _previousKey
                            _putFIFO
                       _serialIOscan
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         5     5      0     205
                                              4 COMMON     5     5      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _putFIFO                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _previousKey                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd                                                  4     2      2     681
                                              7 COMMON     4     2      2
                        _displayFIFO (ARG)
                             _lcddat
                              _lcdxy
 ---------------------------------------------------------------------------------
 (2) _keyboardScan                                        11    11      0     210
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         4     2      2     251
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              5     5      0     753
                                              7 COMMON     5     5      0
                             _lcdcmd
                             _lcddat
                              _lcdxy
 ---------------------------------------------------------------------------------
 (2) _lcdxy                                                3     2      1     373
                                              4 COMMON     3     2      1
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (2) _lcddat                                               3     3      0      67
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initKeyboard                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getFIFO                                              2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayFIFO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delFIFO                                              3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _currentKey                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearLCD                                             0     0      0     177
                             _lcdcmd
 ---------------------------------------------------------------------------------
 (3) _lcdcmd                                               4     4      0     177
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearLCD
     _lcdcmd
   _currentKey
   _delFIFO
   _displayFIFO
   _getFIFO
   _initKeyboard
   _initLCD
     _lcdcmd
     _lcddat
     _lcdxy
       _lcdcmd
   _initSerialIO
   _keyboardScan
   _lcd
     _displayFIFO (ARG)
     _lcddat (ARG)
     _lcdxy (ARG)
       _lcdcmd
   _previousKey
   _putFIFO
   _serialIOscan
     _serialIObyteShift
     _serialIOload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Nov 05 15:53:07 2019

              ?_displayFIFO 0070                           l9 00E6                           pc 0002  
                        l12 0121                          l13 0123                          l22 0136  
                        l23 0126                          l25 0141                          l26 0142  
                        l51 00BF                          l27 0144                          l19 00BA  
                        l62 00F9                          l54 0298                          l71 0256  
                        l55 0301                          l80 028D                          l56 02B5  
                        l48 00C4                          l73 024C                          l57 02F6  
                        l74 025B                          l58 02EB                          l90 0151  
                        l75 028D                          l83 0192                          l59 030C  
                        l91 0168                          l76 0284                          l92 0168  
                        l78 027A                          l86 010C                          l79 0289  
                        l89 015F                          fsr 0004                         l110 03B6  
                       l200 0528                         l113 00D0                         l201 053D  
                       l106 0366                         l210 05AE                         l202 0542  
                       l107 039D                         l211 05C4                         l203 0558  
                       l108 036F                         l300 0229                         l220 0604  
                       l212 05C9                         l204 055D                         l109 0392  
                       l301 022E                         l221 060A                         l213 05DF  
                       l205 0573                         l230 06D7                         l222 0613  
                       l214 05E4                         l206 0578                         l150 03DE  
                       l231 07D6                         l223 0614                         l215 05EA  
                       l207 058E                         l151 03F3                         l304 01F1  
                       l240 072B                         l232 06D8                         l224 061A  
                       l216 05F3                         l208 0593                         l152 04B3  
                       l160 04AF                         l241 072C                         l233 06E9  
                       l225 0623                         l217 05F4                         l209 05A9  
                       l161 042A                         l153 03FE                         l250 0746  
                       l242 073E                         l234 06F3                         l226 07E7  
                       l218 05FA                         l154 04B2                         l162 04AE  
                       l170 04AA                         l146 03D7                         l227 079C  
                       l251 074D                         l243 073F                         l235 06F4  
                       l147 0625                         l219 0603                         l171 0461  
                       l163 0435                         l155 0409                         l252 0765  
                       l260 075F                         l244 0740                         l236 0705  
                       l228 06BE                         l156 04B1                         l164 04AD  
                       l172 04A9                         l180 04A5                         l148 03DD  
                       l261 0761                         l253 074E                         l245 0741  
                       l237 070F                         l229 06CD                         l149 069F  
                       l181 0498                         l173 046C                         l165 0440  
                       l157 0414                         l262 0794                         l254 078E  
                       l246 0742                         l238 0710                         l190 04D4  
                       l158 04B0                         l166 04AC                         l174 04A8  
                       l182 04A4                         l263 07ED                         l255 0752  
                       l247 0743                         l239 0721                         l191 04DA  
                       l183 04A3                         l175 0477                         l167 044B  
                       l159 041F                         l264 07EE                         l256 0755  
                       l248 0744                         l192 04E3                         l184 04B4  
                       l168 04AB                         l176 04A7                         l265 07EE  
                       l257 0757                         l249 0745                         l193 04E4  
                       l185 04BA                         l177 0482                         l169 0456  
                       l290 019A                         l258 075A                         l194 04EA  
                       l186 04C3                         l178 04A6                         l291 01A5  
                       l259 075C                         l195 04F3                         l187 04C4  
                       l179 048D                         l292 01A6                         l196 04F4  
                       l188 04CA                         l293 01AF                         l197 0509  
                       l189 04D3                         l294 01B8                         l286 00C9  
                       l198 050E                         l295 01BD                         l199 0523  
                       l289 01B3                         l298 0220                         l299 0200  
                       u600 0245                         u601 0244                         u610 024B  
                       u611 024A                         u620 0264                         u700 013B  
                       u621 0263                         u701 013A                         u630 0273  
                       u710 0140                         u631 0272                         u711 013F  
                       u640 0279                         u720 0296                         u800 0167  
                       u641 0278                         u721 0295                         u801 0166  
                       u810 0364                         u811 0363                         u820 036D  
                       u740 02B3                         u660 01A3                         u900 041A  
                       u821 036C                         u741 02B2                         u661 01A2  
                       u901 0419                         u830 0391                         u734 029E  
                       u670 01AA                         u910 0425                         u655 00FE  
                       u831 0390                         u735 029C                         u671 01A9  
                       u911 0424                         u840 039C                         u760 02D4  
                       u680 01B8                         u920 0430                         u841 039B  
                       u761 02D3                         u681 01B7                         u921 042F  
                       u690 0114                         u754 02C6                         u850 0228  
                       u930 043B                         u691 0113                         u755 02C3  
                       u851 0227                         u931 043A                         u780 02F5  
                       u940 0446                         u860 03EE                         u781 02F4  
                       u941 0445                         u861 03ED                         u790 0300  
                       u950 0451                         u870 03F9                         u791 02FF  
                       u775 02D7                         u951 0450                         u871 03F8  
                       u960 045C                         u880 0404                         u961 045B  
                       u881 0403                         u970 0467                         u890 040F  
                       u971 0466                         u891 040E                         u980 0472  
                       u981 0471                         u990 047D                         u991 047C  
                       _lcd 0145                         fsr0 0004                         indf 0000  
              __CFG_LVP$OFF 0000                lcddat@nibble 0072                        l2001 0746  
                      l2011 0764                        l2003 074E                        l2005 0755  
                      l2013 0765                        l2021 079C                        l2007 075A  
                      l2015 078E                        l2023 07D6                        l2017 0794  
                      l2009 075F                        l2019 079B                        l1601 01AA  
                      l1611 01BD                        l1603 01AF                        l2171 0697  
                      l1541 023F                        l1621 0114                        l1701 0151  
                      l1613 00DA                        l1605 01B0                        l2173 0774  
                      l1551 025B                        l1543 0240                        l1535 0230  
                      l1631 00BA                        l1623 011C                        l1711 0312  
                      l1703 015A                        l1615 00E2                        l1607 01B3  
                      l2175 07A4                        l1561 0273                        l1553 025E  
                      l1545 0245                        l1537 0234                        l1641 013B  
                      l1633 0125                        l1625 0121                        l1617 010D  
                      l1721 0337                        l1713 0313                        l1705 015F  
                      l1609 01BB                        l1801 0220                        l2169 062F  
                      l1563 027A                        l1555 0264                        l1547 024C  
                      l1539 0237                        l1651 00BB                        l1643 0142  
                      l1635 0126                        l1627 0123                        l1619 010E  
                      l1571 016E                        l1731 035E                        l1723 033D  
                      l1715 0317                        l1707 030D                        l1803 0229  
                      l1811 03C8                        l1565 0284                        l1557 0265  
                      l1549 0256                        l1653 00BF                        l1645 0144  
                      l1637 0128                        l1629 00B8                        l1581 0181  
                      l1573 0171                        l1741 036F                        l1733 0365  
                      l1725 034A                        l1717 0324                        l1709 0311  
                      l1661 0298                        l1901 04F4                        l1821 03F3  
                      l1813 03D7                        l1805 03B7                        l1567 0289  
                      l1559 026D                        l1639 0130                        l1583 018A  
                      l1575 0179                        l1751 0396                        l1743 037F  
                      l1735 0366                        l1727 0350                        l1719 032A  
                      l1671 02D4                        l1663 02AC                        l1655 028E  
                      l1647 00C0                        l1591 00C5                        l1911 053D  
                      l1903 0509                        l1831 040F                        l1823 03F9  
                      l1815 03DE                        l1807 03BE                        l1585 018B  
                      l1577 017A                        l1569 016A                        l1745 0387  
                      l1737 0367                        l1753 039D                        l1729 035D  
                      l1761 01BF                        l1673 02EB                        l1665 02AD  
                      l1681 0301                        l1657 0290                        l1649 00C4  
                      l1593 0194                        l1921 0578                        l1913 0542  
                      l1905 050E                        l1841 042A                        l1833 0414  
                      l1825 03FE                        l1817 03E8                        l1809 03C3  
                      ?_lcd 0077                        l1691 00F2                        l1587 018F  
                      l1579 017E                        l1755 03AA                        l1747 038B  
                      l1739 036E                        l1771 01D7                        l1763 01CD  
                      l1683 030C                        l1675 02EF                        l1667 02B4  
                      l1659 0297                        l1595 0198                        l1931 05C4  
                      l1923 058E                        l1915 0558                        l1907 0523  
                      l1851 0446                        l1843 0430                        l1835 041A  
                      l1827 0404                        l1819 03EE                        l1693 00F4  
                      l1685 00E7                        l1589 00FB                        l1757 03B0  
                      l1749 0392                        l1781 01E6                        l1773 01DA  
                      l1765 01CE                        l1677 02F6                        l1669 02B5  
                      l1597 019D                        l1941 05F5                        l1933 05C9  
                      l1925 0593                        l1917 055D                        l1909 0528  
                      l1861 0461                        l1853 044B                        l1845 0435  
                      l1837 041F                        l1829 0409                        l1759 00CA  
                      l1695 00F5                        l1687 00EB                        l1783 01E9  
                      l1775 01DD                        l1767 01D1                        l1679 02FA  
                      l1599 01A3                        l1791 01F2                        l1951 061E  
                      l1943 05FE                        l1935 05DF                        l1927 05A9  
                      l1919 0573                        l1871 047D                        l1863 0467  
                      l1855 0451                        l1847 043B                        l1839 0425  
                      l1697 00F8                        l1689 00EE                        l1785 01EC  
                      l1777 01E0                        l1769 01D4                        l1793 01F9  
                      l1961 06B3                        l1953 0624                        l1945 0605  
                      l1937 05E5                        l1929 05AE                        l1881 0498  
                      l1873 0482                        l1865 046C                        l1857 0456  
                      l1849 0440                        l1787 01EF                        l1779 01E3  
                      l1699 0146                        l1795 01FE                        l1971 06D8  
                      l1963 06BE                        l1947 060E                        l1939 05EE  
                      l1891 04CE                        l1883 049E                        l1875 0488  
                      l1867 0472                        l1859 045C                        l1955 0625  
                      l1789 01F0                        l1797 0200                        l1981 06FA  
                      l1973 06DE                        l1965 06C2                        l1949 0615  
                      l1893 04D5                        l1885 04B5                        l1877 048D  
                      l1869 0477                        l1957 069F                        l1799 021B  
                      l1991 071A                        l1983 06FE                        l1975 06E2  
                      l1967 06C6                        l1959 06A9                        l1895 04DE  
                      l1887 04BE                        l1879 0493                        l1993 0721  
                      l1985 0705                        l1977 06E9                        l1969 06CD  
                      l1897 04E5                        l1889 04C5                        l1995 072C  
                      l1987 0710                        l1979 06F4                        l1899 04EE  
                      l1997 0732                        l1989 0716                        l1999 0737  
               main@atuador 003C                        u1000 0488                        u1001 0487  
                      u1010 0493                        u1011 0492                        u1100 061E  
                      u1020 049E                        u1101 061D                        u1021 049D  
                      u1110 06A9                        u1030 04BE                        u1111 06A8  
                      u1031 04BD                        u1120 06B3                        u1040 04CE  
                      u1121 06B2                        u1041 04CD                        u1130 06C6  
                      u1050 04DE                        u1131 06C5                        u1051 04DD  
                      u1140 06E2                        u1060 04EE                        u1141 06E1  
                      u1061 04ED                        u1150 06FE                        u1070 05EE  
                      u1151 06FD                        u1071 05ED                        u1207 054A  
                      u1160 071A                        u1080 05FE                        u1161 0719  
                      u1081 05FD                        u1217 0565                        u1090 060E  
                      u1307 0383                        u1091 060D                        u1227 0580  
                      u1317 03A3                        u1237 059B                        u1327 017C  
                      u1247 05B6                        u1337 018D                        u1257 05D1  
                      u1177 04FC                        u1347 0250                        u1267 031D  
                      u1187 0516                        u1357 0258                        u1277 0330  
                      u1197 0530                        u1367 027E                        u1287 0343  
                      u1377 0286                        u1297 0356                        _WPUB 0095  
              lcdcmd@nibble 0073                        _fifo 0025                        _main 03B7  
                      lcd@x 007A                        lcd@y 0077                        btemp 007E  
                      start 0000                       ??_lcd 0079                       ?_main 0070  
             __CFG_WDTE$OFF 0000             __end_of_delFIFO 0145                       _PORTB 0006  
           __end_of_getFIFO 0124                       _TRISB 0086                       _TRISD 0088  
           __end_of_initLCD 03B7                       _lcdxy 00FA                       main@a 0038  
                     main@b 0039                       main@c 003A                       main@d 003B  
           __end_of_putFIFO 00E7                       pclath 000A                       status 0003  
                     wtemp0 007E              __CFG_MCLRE$OFF 0000             __initialization 07F1  
              __end_of_main 07F1               ?_initKeyboard 0070                      ??_main 0035  
             ?_initSerialIO 0070                      ?_lcdxy 0074                      _ANSELH 0189  
             ?_keyboardScan 0070            __end_of_clearLCD 00D1              ??_initKeyboard 0070  
                 ??_delFIFO 0070                      _lcddat 0169                      _lcdcmd 022F  
                 ??_getFIFO 0070        __size_of_displayFIFO 0003                      lcd@ptr 0078  
            ??_initSerialIO 0072                      lcdxy@x 0076                      lcdxy@y 0074  
                 ??_initLCD 0077                   ??_putFIFO 0070              ??_keyboardScan 0070  
              ?_previousKey 0070     __end_of__initialization 07FC           _serialIObyteShift 0193  
        ?_serialIObyteShift 0070              __pcstackCOMMON 0070               __end_of_lcdxy 010D  
       ??_serialIObyteShift 0070              _OPTION_REGbits 0081           initSerialIO@ptrIn 0073  
                   ??_lcdxy 0075                  delFIFO@ret 0072                  __pbssBANK0 0020  
 __end_of_serialIObyteShift 01BE                  __pmaintext 03B7                     ?_lcddat 0070  
                   ?_lcdcmd 0070     serialIObyteShift@dataIn 0071                     _LCDbits 0008  
                 ?_clearLCD 0070        __end_of_initKeyboard 00FA                  __stringtab 0003  
             ?_serialIOload 0070               ?_serialIOscan 0070        __end_of_initSerialIO 01F2  
                getFIFO@aux 0071                     _delFIFO 0124             __size_of_lcddat 002A  
                _currentKey 00BB             __size_of_lcdcmd 005F                     _getFIFO 010D  
                 _ANSELbits 0188        __end_of_keyboardScan 030D                     __ptext1 01F2  
                   __ptext2 00C5                     __ptext3 0193                     __ptext4 00D9  
                   __ptext5 00C0                     __ptext6 0145                     __ptext7 028E  
                   __ptext8 01BE                     __ptext9 030D                     _initLCD 030D  
                   _currKey 0023                __size_of_lcd 0024                  ??_clearLCD 0074  
                   _putFIFO 00D9                     _prevKey 0024                     clrloop0 00D2  
      end_of_initialization 07FC              ??_serialIOload 0070              ??_serialIOscan 0074  
__size_of_serialIObyteShift 002B        __size_of_previousKey 0005                   _PORTAbits 0005  
                 _PORTEbits 0009                _KEYBOARDbits 0006                   _TRISAbits 0085  
                 _TRISEbits 0089             keyboardScan@aux 0078                  main@estado 003F  
                main@sensor 003D               ??_displayFIFO 0070                 ?_currentKey 0070  
            __end_of_lcddat 0193              __end_of_lcdcmd 028E         start_initialization 07F1  
     __size_of_initKeyboard 0013                 __end_of_lcd 0169       __size_of_initSerialIO 0034  
        initSerialIO@length 0071          initSerialIO@ptrOut 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __size_of_keyboardScan 007F              _keyboardMatrix 0009                    ??_lcddat 0070  
                  ??_lcdcmd 0070                _initKeyboard 00E7        __end_of_serialIOload 00CA  
      __end_of_serialIOscan 022F         __end_of_displayFIFO 00BB                _initSerialIO 01BE  
               __pbssCOMMON 007C                   ___latbits 0002               __pcstackBANK0 0035  
         __size_of_clearLCD 0007         __size_of_currentKey 0005                _keyboardScan 028E  
    __end_of_keyboardMatrix 0019                    ?_delFIFO 0070               serialIOscan@i 0078  
             serialIOscan@j 0077                    ?_getFIFO 0070                   __pstrings 0003  
                  ?_initLCD 0070                    ?_putFIFO 0070    serialIObyteShift@dataBit 0073  
  serialIObyteShift@dataOut 0072              __size_of_lcdxy 0013                   clear_ram0 00D1  
                  _SERIALIO 0009                 _displayFIFO 00B8                 __stringbase 0008  
                 lcddat@dat 0071                   lcdcmd@cmd 0072                 _lenSerialIO 0020  
                 main@tecla 003E               ??_previousKey 0070       __size_of_serialIOload 0005  
     __size_of_serialIOscan 003D                ??_currentKey 0070            __size_of_delFIFO 0021  
          __size_of_getFIFO 0017          __end_of__stringtab 0009                    delFIFO@n 0071  
          __size_of_initLCD 00AA                    _clearLCD 00CA                    _fifoHead 007D  
          __size_of_putFIFO 000E                    _fifoTail 007C                    __ptext10 00FA  
                  __ptext11 0169                    __ptext12 00E7                    __ptext13 010D  
                  __ptext14 00B8                    __ptext15 0124                    __ptext16 00BB  
                  __ptext17 00CA                    __ptext18 022F                _serialIOload 00C5  
              _serialIOscan 01F2               __size_of_main 043A          __end_of_currentKey 00C0  
       __end_of_previousKey 00C5               keyboardScan@i 0079               keyboardScan@j 007A  
                  main@rest 0041                    initLCD@i 007A                    initLCD@j 007B  
                  putFIFO@c 0071                   stringcode 0003                _ptrSerialOut 0021  
                  stringdir 0003                    stringtab 0003                 _ptrSerialIn 0022  
               _previousKey 00C0  
